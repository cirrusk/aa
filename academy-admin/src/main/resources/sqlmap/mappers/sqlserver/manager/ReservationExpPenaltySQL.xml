<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="amway.com.academy.manager.reservation.expPenalty.service.impl.ExpPenaltyMapper">

	<!-- 시설 패널티 현황 목록 조회 -->
	<select id="expPenaltyListAjax" parameterType="reqBox" resultType="dataBox">
		SELECT * FROM(
			SELECT ROW_NUMBER() OVER (ORDER BY HISTORYSEQ DESC) AS ROW_NUM, AA.* FROM(
				SELECT DISTINCT
					  A.HISTORYSEQ
					, CASE 
						WHEN MN.ADNO IS NOT NULL AND F.ADMINFIRSTCODE = 'R01' THEN ISNULL(MN.MANAGENAME,'이름 없음')
						WHEN MB.UID  IS NOT NULL AND PC.TARGETCODEORDER &gt; 1 THEN MB.NAME
						WHEN MB.UID  IS NOT NULL AND PC.TARGETCODEORDER = 1 THEN MB.NAME
						ELSE F.NONMEMBER
					END AS ABONAME
					, CASE
						WHEN F.ACCOUNT IS NOT NULL AND PC.TARGETCODEORDER &gt; 1 THEN 'ABO'
			            WHEN F.ACCOUNT IS NOT NULL AND PC.TARGETCODEORDER = 1 THEN 'MEMBER'
			            WHEN F.ACCOUNT IS NULL AND F.NONMEMBERID IS NOT NULL THEN '비회원' 
			            WHEN F.ACCOUNT IS NOT NULL AND F.ADMINFIRSTCODE ='R01' THEN '관리자'
			            ELSE ''
					  END AS TEMP
					, ISNULL(A.ACCOUNT,'') AS ACCOUNT
					, C.CODENAME AS TYPECODE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' 
						THEN B.APPLYTYPEVALUE + '% 수수료 부과'
						WHEN B.APPLYTYPECODE = 'P02' 
						THEN B.APPLYTYPEVALUE + '일간 신청 불가'
						WHEN B.APPLYTYPECODE = 'P03' 
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN '당월' 
								WHEN B.PERIODVALUE = 1 
								THEN '명월'
								ELSE null 
	              			END + B.APPLYTYPEVALUE + '회 횟수 제한'
	          			ELSE null
					END AS APPLYTYPECODE
					, A.GRANTDATE
					, E.TYPENAME
					, A.STATUSCODE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' AND A.PENALTYSTATUSCODE = 'B02'
						THEN null
						WHEN B.APPLYTYPECODE = 'P02' AND (A.PENALTYSTATUSCODE = 'B01' OR A.PENALTYSTATUSCODE IS NULL)
						THEN Format(CONVERT(DATETIME, A.GRANTDATE), N'yyyy-MM-dd HH:mm:ss')
						WHEN B.APPLYTYPECODE = 'P03' AND (A.PENALTYSTATUSCODE = 'B01' OR A.PENALTYSTATUSCODE IS NULL)
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN  Format(DATEADD(DAY,-(DAY(CONVERT(DATETIME, A.GRANTDATE)-1)), A.GRANTDATE), N'yyyy-MM-dd HH:mm:ss')
								WHEN B.PERIODVALUE = 1 
								THEN Format(DATEADD(DAY,-(DAY(DATEADD(MONTH,1,A.GRANTDATE)-1)), DATEADD(MONTH,1,A.GRANTDATE)), N'yyyy-MM-dd HH:mm:ss')
								ELSE null 
							END
						ELSE null
					END AS LIMITSTARTDATE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' AND A.PENALTYSTATUSCODE = 'B02'
						THEN null
						WHEN B.APPLYTYPECODE = 'P02' AND (A.PENALTYSTATUSCODE = 'B01' OR A.PENALTYSTATUSCODE IS NULL)
						THEN Format(DATEADD(DAY,CONVERT(INT,B.APPLYTYPEVALUE),A.GRANTDATE), N'yyyy-MM-dd HH:mm:ss')
						WHEN B.APPLYTYPECODE = 'P03' AND (A.PENALTYSTATUSCODE = 'B01' OR A.PENALTYSTATUSCODE IS NULL)
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN Format(DATEADD(MONTH,1,A.GRANTDATE)-DAY(A.GRANTDATE), N'yyyy-MM-dd HH:mm:ss')
								WHEN B.PERIODVALUE = 1 
								THEN Format(DATEADD(MONTH,1,DATEADD(MONTH,1,A.GRANTDATE))-DAY(DATEADD(MONTH,1,A.GRANTDATE)), N'yyyy-MM-dd HH:mm:ss')
								ELSE null 
							END
						ELSE null
					END AS LIMITENDDATE
					, A.PENALTYSTATUSCODE
					, A.RSVSEQ
				FROM RSVPENALTYHISTORY A
					INNER JOIN RSVPENALTYSETTING B
						ON(A.PENALTYSEQ = B.PENALTYSEQ
							AND A.HISTORYSEQ = (
								SELECT MAX(HISTORYSEQ) AS HISTORYSEQ 
								FROM RSVPENALTYHISTORY 
								WHERE RSVSEQ = A.RSVSEQ
								)
							)
					INNER JOIN COMMONCODE C
						ON(B.TYPECODE = C.COMMONCODESEQ AND C.CODEMASTERSEQ = 'PN1')
					INNER JOIN RSVRESERVATIONINFO D
						ON(A.RSVSEQ = D.RSVSEQ
							AND D.RSVTYPECODE = 'R02')
					INNER JOIN RSVTYPEINFO E
						ON(D.TYPESEQ = E.TYPESEQ)
					LEFT OUTER JOIN MEMBER MB
						ON (A.ACCOUNT = MB.UID)
					LEFT OUTER JOIN MANAGER MN 
						ON (A.ACCOUNT = MN.ADNO)
					LEFT OUTER JOIN V_TARGETCODE_NONMEM PC
						ON (MB.GROUPS = PC.TARGETCODESEQ AND PC.TARGETMASTERSEQ = 'PINCODE')
					LEFT OUTER JOIN RSVROLETARGET TG
						ON (MB.UID = TG.ABONO)
					LEFT OUTER JOIN RSVROLEGROUP GP
						ON (TG.GROUPSEQ = GP.GROUPSEQ AND GP.COOKMASTERCODE = 'C01')
					LEFT OUTER JOIN RSVRESERVATIONINFO F
						ON(A.ACCOUNT = F.ACCOUNT)
				WHERE 1=1
				<if test='searchTypeCode != null and !searchTypeCode.equals("")'>
					AND B.TYPECODE = #{searchTypeCode}
				</if>
				<if test='searchApplyTypeCode != null and !searchApplyTypeCode.equals("")'>
					AND B.APPLYTYPECODE = #{searchApplyTypeCode}
				</if>
				<if test='searchStartGrantDate != null and !searchStartGrantDate.equals("")'>
					AND A.GRANTDATE &gt;= CONVERT (DATETIME, #{searchStartGrantDate})
				</if>
				<if test='searchEndGrantDate != null and !searchEndGrantDate.equals("")'>
					AND A.GRANTDATE &lt;= CONVERT (DATETIME, #{searchEndGrantDate})
				</if>
				
				<if test="searchStatusCode == 'T01' and searchStatusCode.equals('T01') ">
					AND (
						MN.MANAGENAME LIKE CONCAT('%', #{searchStatusName}, '%') 
						OR MB.NAME LIKE CONCAT('%', #{searchStatusName}, '%')
						OR F.NONMEMBER LIKE CONCAT('%', #{searchStatusName}, '%')
					)
				</if>
				<if test="searchStatusCode == 'T02' and searchStatusCode.equals('T02') ">
					AND A.ACCOUNT = #{searchStatusName}
				</if>
				) AS AA
			) AS BB
		WHERE ROW_NUM BETWEEN #{firstIndex} AND #{pageIndex} * #{rowPerPage}
	</select>
	
	<!-- 시설 패널티 현황 목록 카운트 -->
	<select id="expPenaltyListCountAjax" parameterType="reqBox" resultType="int">
		SELECT count(*) AS TOTAL_CNT FROM(
			SELECT ROW_NUMBER() OVER (ORDER BY HISTORYSEQ DESC) AS ROW_NUM, AA.* FROM(
				SELECT DISTINCT
					  A.HISTORYSEQ
					, CASE 
						WHEN MN.ADNO IS NOT NULL AND F.ADMINFIRSTCODE = 'R01' THEN ISNULL(MN.MANAGENAME,'이름 없음')
						WHEN MB.UID  IS NOT NULL AND PC.TARGETCODEORDER &gt; 1 THEN MB.NAME
						WHEN MB.UID  IS NOT NULL AND PC.TARGETCODEORDER = 1 THEN MB.NAME
						ELSE F.NONMEMBER
					  END AS ABONAME
					, CASE
						WHEN F.ACCOUNT IS NOT NULL AND PC.TARGETCODEORDER &gt; 1 THEN 'ABO'
			            WHEN F.ACCOUNT IS NOT NULL AND PC.TARGETCODEORDER = 1 THEN 'MEMBER'
			            WHEN F.ACCOUNT IS NULL AND F.NONMEMBERID IS NOT NULL THEN '비회원' 
			            WHEN F.ACCOUNT IS NOT NULL AND F.ADMINFIRSTCODE ='R01' THEN '관리자'
			            ELSE ''
					  END AS TEMP
<!-- 					, CASE  -->
<!-- 						WHEN MN.ADNO IS NOT NULL THEN ISNULL(MN.MANAGENAME,'이름 없음') -->
<!-- 						WHEN MB.UID  IS NOT NULL THEN MB.NAME -->
<!-- 						WHEN MN.ADNO IS NULL AND MB.UID IS NULL AND A.ACCOUNT IS NOT NULL THEN '비회원' -->
<!-- 						ELSE '비회원' -->
<!-- 						END AS ABONAME -->
<!-- 					, CASE MB.CUSTOMERGUBUN -->
<!-- 						WHEN 'I' THEN 'ABO' /* M03 */ -->
<!-- 						WHEN 'M' THEN 'Member' /* M04 */ -->
<!-- 						ELSE (CASE WHEN MB.UID IS NULL AND MN.ADNO IS NULL THEN '소비자' /* M02 */ ELSE '관리자' /* M01 */ END) -->
<!-- 						END AS TEMP -->
					, ISNULL(A.ACCOUNT,'') AS ACCOUNT
					
					, C.CODENAME AS TYPECODE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' 
						THEN B.APPLYTYPEVALUE + '% 수수료 부과'
						WHEN B.APPLYTYPECODE = 'P02' 
						THEN B.APPLYTYPEVALUE + '일간 신청 불가'
						WHEN B.APPLYTYPECODE = 'P03' 
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN '당월' 
								WHEN B.PERIODVALUE = 1 
								THEN '명월'
								ELSE null 
	              			END + B.APPLYTYPEVALUE + '회 횟수 제한'
	          			ELSE null
					END AS APPLYTYPECODE
					, A.GRANTDATE
					, E.TYPENAME
					, A.STATUSCODE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' 
						THEN null
						WHEN B.APPLYTYPECODE = 'P02' 
						THEN A.GRANTDATE
						WHEN B.APPLYTYPECODE = 'P03' 
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN DATEADD(DAY,-(DAY(CONVERT(DATETIME, A.GRANTDATE)-1)), A.GRANTDATE)
								WHEN B.PERIODVALUE = 1 
								THEN DATEADD(DAY,-(DAY(DATEADD(MONTH,1,A.GRANTDATE)-1)), DATEADD(MONTH,1,A.GRANTDATE))
								ELSE null 
							END
						ELSE null
					END AS LIMITSTARTDATE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' 
						THEN null
						WHEN B.APPLYTYPECODE = 'P02' 
						THEN DATEADD(DAY,CONVERT(INT,B.APPLYTYPEVALUE),A.GRANTDATE)
						WHEN B.APPLYTYPECODE = 'P03' 
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN DATEADD(MONTH,1,A.GRANTDATE)-DAY(A.GRANTDATE)
								WHEN B.PERIODVALUE = 1 
								THEN DATEADD(MONTH,1,DATEADD(MONTH,1,A.GRANTDATE))-DAY(DATEADD(MONTH,1,A.GRANTDATE))
								ELSE null 
							END
						ELSE null
					END AS LIMITENDDATE
				FROM RSVPENALTYHISTORY A
					INNER JOIN RSVPENALTYSETTING B
						ON(A.PENALTYSEQ = B.PENALTYSEQ
							AND A.HISTORYSEQ = (
								SELECT MAX(HISTORYSEQ) AS HISTORYSEQ 
								FROM RSVPENALTYHISTORY 
								WHERE RSVSEQ = A.RSVSEQ
								)
							)
					INNER JOIN COMMONCODE C
						ON(B.TYPECODE = C.COMMONCODESEQ AND C.CODEMASTERSEQ = 'PN1')
					INNER JOIN RSVRESERVATIONINFO D
						ON(A.RSVSEQ = D.RSVSEQ
							AND D.RSVTYPECODE = 'R02')
					INNER JOIN RSVTYPEINFO E
						ON(D.TYPESEQ = E.TYPESEQ)
					LEFT OUTER JOIN MEMBER MB
						ON (A.ACCOUNT = MB.UID)
					LEFT OUTER JOIN MANAGER MN 
						ON (A.ACCOUNT = MN.ADNO)
					LEFT OUTER JOIN V_TARGETCODE_NONMEM PC
						ON (MB.GROUPS = PC.TARGETCODESEQ AND PC.TARGETMASTERSEQ = 'PINCODE')
					LEFT OUTER JOIN RSVROLETARGET TG
						ON (MB.UID = TG.ABONO)
					LEFT OUTER JOIN RSVROLEGROUP GP
						ON (TG.GROUPSEQ = GP.GROUPSEQ AND GP.COOKMASTERCODE = 'C01')
					LEFT OUTER JOIN RSVRESERVATIONINFO F
						ON(A.ACCOUNT = F.ACCOUNT)
				WHERE 1=1
				<if test='searchTypeCode != null and !searchTypeCode.equals("")'>
					AND B.TYPECODE = #{searchTypeCode}
				</if>
				<if test='searchApplyTypeCode != null and !searchApplyTypeCode.equals("")'>
					AND B.APPLYTYPECODE = #{searchApplyTypeCode}
				</if>
				<if test='searchStartGrantDate != null and !searchStartGrantDate.equals("")'>
					AND A.GRANTDATE &gt;= CONVERT (DATETIME, #{searchStartGrantDate})
				</if>
				<if test='searchEndGrantDate != null and !searchEndGrantDate.equals("")'>
					AND A.GRANTDATE &lt;= CONVERT (DATETIME, #{searchEndGrantDate})
				</if>
				
				<if test="searchStatusCode == 'T01' and searchStatusCode.equals('T01') ">
					AND (
						MN.MANAGENAME LIKE CONCAT('%', #{searchStatusName}, '%') 
						OR MB.NAME LIKE CONCAT('%', #{searchStatusName}, '%')
						OR F.NONMEMBER LIKE CONCAT('%', #{searchStatusName}, '%')
					)
				</if>
				<if test="searchStatusCode == 'T02' and searchStatusCode.equals('T02') ">
					AND A.ACCOUNT = #{searchStatusName}
				</if>
				) AS AA
			) AS BB
	</select>
	
	<!-- 시설 패널티 현황 상세 조회 -->
	<select id="expPenaltyDetailAjax" parameterType="reqBox" resultType="dataBox">
		SELECT 
			  E.TYPENAME
			, CONVERT(datetime, D.RESERVATIONDATE) AS RESERVATIONDATE
			, A.GRANTDATE
			, CASE
				WHEN B.APPLYTYPECODE = 'P01' 
				THEN B.APPLYTYPEVALUE + '% 수수료 부과'
				WHEN B.APPLYTYPECODE = 'P02' 
				THEN B.APPLYTYPEVALUE + '일간 신청 불가'
				WHEN B.APPLYTYPECODE = 'P03' 
				THEN 
					CASE 
						WHEN B.PERIODVALUE = 0 
						THEN '당월' 
						WHEN B.PERIODVALUE = 1 
						THEN '명월'
						ELSE null 
		        			END + B.APPLYTYPEVALUE + '회 횟수 제한'
		    			ELSE null
			END AS APPLYTYPECODE
		  , CASE 
		        WHEN B.TYPECODE IN ('P02', 'P04') 
		        THEN ''
        		ELSE ''
        	END AS REASON
		FROM RSVPENALTYHISTORY A
		LEFT OUTER JOIN RSVPENALTYSETTING B
			ON(A.PENALTYSEQ = B.PENALTYSEQ)
		LEFT OUTER JOIN COMMONCODE C
			ON(B.TYPECODE = C.COMMONCODESEQ AND C.CODEMASTERSEQ = 'PN1')
		LEFT OUTER JOIN RSVRESERVATIONINFO D
			ON(A.RSVSEQ = D.RSVSEQ)
		LEFT OUTER JOIN RSVTYPEINFO E
			ON(D.TYPESEQ = E.TYPESEQ)
		WHERE A.HISTORYSEQ = #{historySeq}
	</select>
	
	<!-- 시설 패널티 해제 -->
	<update id="expPenaltyCancelLimitUpdateAjax" parameterType="reqBox">
		INSERT INTO RSVPENALTYHISTORY(
			  ACCOUNT
			, RSVSEQ
			, PENALTYSEQ
			, APPLYTYPECODE
			, APPLYTYPEVALUE
			, REASON
			, GRANTDATE
			, PENALTYSTATUSCODE
			, STATUSCODE
			, INSERTUSER
			, INSERTDATE
		)
		SELECT 
			ACCOUNT
			, RSVSEQ
			, PENALTYSEQ
			, APPLYTYPECODE
			, APPLYTYPEVALUE
			, REASON
			, GRANTDATE
			, 'B02'
			, 'B01'
			, #{sessionAccount}
			, getdate()
		FROM RSVPENALTYHISTORY
		WHERE HISTORYSEQ = #{historySeq}
	</update>
	
	<!-- 패널티 정책 취소 패널티 등록 -->
<!-- 	<insert id="basePenaltyCencelInsertAjax" parameterType="reqBox"> -->
<!-- 		INSERT INTO RSVPENALTYSETTING ( -->
<!-- 			  PENALTYSEQ -->
<!-- 			, TYPECODE -->
<!-- 			, STATUSCODE -->
<!-- 			, TYPEDETAILCODE -->
<!-- 			, TYPEVALUE -->
<!-- 			, PERIODCODE -->
<!-- 			, PERIODVALUE -->
<!-- 			, APPLYTYPECODE -->
<!-- 			, APPLYTYPEVALUE -->
<!-- 			, INSERTUSER -->
<!-- 			, INSERTDATE -->
<!-- 		) VALUES ( -->
<!-- 			  ISNULL((SELECT MAX(PENALTYSEQ) +1 FROM RSVPENALTYSETTING), 1) -->
<!-- 			, #{typeCode} -->
<!-- 			, 'B02' -->
<!-- 			, #{typeDetailCode} -->
<!-- 			, #{typeValue} -->
<!-- 			, #{periodCode} -->
<!-- 			, #{periodValue} -->
<!-- 			, #{applyTypeCode} -->
<!-- 			, #{applyTypeValue} -->
<!-- 			, 'testuser' -->
<!-- 			, GETDATE() -->
<!-- 		) -->
<!-- 	</insert> -->
	
	<!-- 측정/체험 패널티 현황 목록 조회(엑셀 다운로드) -->
	<select id="expPenaltyExcelListSelect" parameterType="reqBox" resultType="hashmap">
			SELECT ROW_NUMBER() OVER (ORDER BY HISTORYSEQ DESC) AS ROW_NUM, AA.* FROM(
				SELECT DISTINCT
					  A.HISTORYSEQ
					, CASE 
						WHEN MN.ADNO IS NOT NULL AND F.ADMINFIRSTCODE = 'R01' THEN ISNULL(dbo.F_SETTRFEEABONAME(MN.MANAGENAME, 'N'),'이름 없음')
						WHEN MB.UID  IS NOT NULL AND PC.TARGETCODEORDER &gt; 1 THEN dbo.F_SETTRFEEABONAME(MB.NAME, 'N')
						WHEN MB.UID  IS NOT NULL AND PC.TARGETCODEORDER = 1 THEN dbo.F_SETTRFEEABONAME(MB.NAME, 'N')
						ELSE dbo.F_SETTRFEEABONAME(F.NONMEMBER, 'N')
					END AS ABONAME
					, CASE
						WHEN F.ACCOUNT IS NOT NULL AND PC.TARGETCODEORDER &gt; 1 THEN 'ABO'
			            WHEN F.ACCOUNT IS NOT NULL AND PC.TARGETCODEORDER = 1 THEN 'MEMBER'
			            WHEN F.ACCOUNT IS NULL AND F.NONMEMBERID IS NOT NULL THEN '비회원' 
			            WHEN F.ACCOUNT IS NOT NULL AND F.ADMINFIRSTCODE ='R01' THEN '관리자'
			            ELSE ''
					  END AS TEMP
					, replace(ISNULL(A.ACCOUNT,''), substring(ISNULL(A.ACCOUNT,''),1,3), '***') AS ACCOUNT
					, C.CODENAME AS TYPECODE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' 
						THEN B.APPLYTYPEVALUE + '% 수수료 부과'
						WHEN B.APPLYTYPECODE = 'P02' 
						THEN B.APPLYTYPEVALUE + '일간 신청 불가'
						WHEN B.APPLYTYPECODE = 'P03' 
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN '당월' 
								WHEN B.PERIODVALUE = 1 
								THEN '명월'
								ELSE null 
	              			END + B.APPLYTYPEVALUE + '회 횟수 제한'
	          			ELSE null
					END AS APPLYTYPECODE
					, A.GRANTDATE
					, E.TYPENAME
					, A.STATUSCODE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' AND A.PENALTYSTATUSCODE = 'B02'
						THEN null
						WHEN B.APPLYTYPECODE = 'P02' AND (A.PENALTYSTATUSCODE = 'B01' OR A.PENALTYSTATUSCODE IS NULL)
						THEN Format(CONVERT(DATETIME, A.GRANTDATE), N'yyyy-MM-dd HH:mm:ss')
						WHEN B.APPLYTYPECODE = 'P03' AND (A.PENALTYSTATUSCODE = 'B01' OR A.PENALTYSTATUSCODE IS NULL)
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN  Format(DATEADD(DAY,-(DAY(CONVERT(DATETIME, A.GRANTDATE)-1)), A.GRANTDATE), N'yyyy-MM-dd HH:mm:ss')
								WHEN B.PERIODVALUE = 1 
								THEN Format(DATEADD(DAY,-(DAY(DATEADD(MONTH,1,A.GRANTDATE)-1)), DATEADD(MONTH,1,A.GRANTDATE)), N'yyyy-MM-dd HH:mm:ss')
								ELSE null 
							END
						ELSE null
					END AS LIMITSTARTDATE
					, CASE
						WHEN B.APPLYTYPECODE = 'P01' AND A.PENALTYSTATUSCODE = 'B02'
						THEN null
						WHEN B.APPLYTYPECODE = 'P02' AND (A.PENALTYSTATUSCODE = 'B01' OR A.PENALTYSTATUSCODE IS NULL)
						THEN Format(DATEADD(DAY,CONVERT(INT,B.APPLYTYPEVALUE),A.GRANTDATE), N'yyyy-MM-dd HH:mm:ss')
						WHEN B.APPLYTYPECODE = 'P03' AND (A.PENALTYSTATUSCODE = 'B01' OR A.PENALTYSTATUSCODE IS NULL)
						THEN 
							CASE 
								WHEN B.PERIODVALUE = 0 
								THEN Format(DATEADD(MONTH,1,A.GRANTDATE)-DAY(A.GRANTDATE), N'yyyy-MM-dd HH:mm:ss')
								WHEN B.PERIODVALUE = 1 
								THEN Format(DATEADD(MONTH,1,DATEADD(MONTH,1,A.GRANTDATE))-DAY(DATEADD(MONTH,1,A.GRANTDATE)), N'yyyy-MM-dd HH:mm:ss')
								ELSE null 
							END
						ELSE null
					END AS LIMITENDDATE
					, A.PENALTYSTATUSCODE
					, A.RSVSEQ
				FROM RSVPENALTYHISTORY A
					INNER JOIN RSVPENALTYSETTING B
						ON(A.PENALTYSEQ = B.PENALTYSEQ
							AND A.HISTORYSEQ = (
								SELECT MAX(HISTORYSEQ) AS HISTORYSEQ 
								FROM RSVPENALTYHISTORY 
								WHERE RSVSEQ = A.RSVSEQ
								)
							)
					INNER JOIN COMMONCODE C
						ON(B.TYPECODE = C.COMMONCODESEQ AND C.CODEMASTERSEQ = 'PN1')
					INNER JOIN RSVRESERVATIONINFO D
						ON(A.RSVSEQ = D.RSVSEQ
							AND D.RSVTYPECODE = 'R02')
					INNER JOIN RSVTYPEINFO E
						ON(D.TYPESEQ = E.TYPESEQ)
					LEFT OUTER JOIN MEMBER MB
						ON (A.ACCOUNT = MB.UID)
					LEFT OUTER JOIN MANAGER MN 
						ON (A.ACCOUNT = MN.ADNO)
					LEFT OUTER JOIN V_TARGETCODE_NONMEM PC
						ON (MB.GROUPS = PC.TARGETCODESEQ AND PC.TARGETMASTERSEQ = 'PINCODE')
					LEFT OUTER JOIN RSVROLETARGET TG
						ON (MB.UID = TG.ABONO)
					LEFT OUTER JOIN RSVROLEGROUP GP
						ON (TG.GROUPSEQ = GP.GROUPSEQ AND GP.COOKMASTERCODE = 'C01')
					LEFT OUTER JOIN RSVRESERVATIONINFO F
						ON(A.ACCOUNT = F.ACCOUNT)
				WHERE 1=1
				<if test='searchTypeCode != null and !searchTypeCode.equals("")'>
					AND B.TYPECODE = #{searchTypeCode}
				</if>
				<if test='searchApplyTypeCode != null and !searchApplyTypeCode.equals("")'>
					AND B.APPLYTYPECODE = #{searchApplyTypeCode}
				</if>
				<if test='searchStartGrantDate != null and !searchStartGrantDate.equals("")'>
					AND A.GRANTDATE &gt;= CONVERT (DATETIME, #{searchStartGrantDate})
				</if>
				<if test='searchEndGrantDate != null and !searchEndGrantDate.equals("")'>
					AND A.GRANTDATE &lt;= CONVERT (DATETIME, #{searchEndGrantDate})
				</if>
				
				<if test="searchStatusCode == 'T01' and searchStatusCode.equals('T01') ">
					AND (
						MN.MANAGENAME LIKE CONCAT('%', #{searchStatusName}, '%') 
						OR MB.NAME LIKE CONCAT('%', #{searchStatusName}, '%')
						OR F.NONMEMBER LIKE CONCAT('%', #{searchStatusName}, '%')
					)
				</if>
				<if test="searchStatusCode == 'T02' and searchStatusCode.equals('T02') ">
					AND A.ACCOUNT = #{searchStatusName}
				</if>
				) AS AA
	</select>
</mapper>