<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.univ.mapper.UnivSurveyPaperMapper">

	<insert id="insert" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivSurveyPaperVO">
/* UIUnivSurveyPaperMapper.insert */
		<selectKey resultType="Long" keyProperty="surveyPaperSeq" order="AFTER">
SELECT @@IDENTITY
        </selectKey>
INSERT INTO cs_survey_paper 
       ( 
           cs_survey_paper_title ,
           cs_survey_paper_type_cd ,
           cs_description ,
           cs_use_count ,
           cs_onoff_cd ,
           cs_reg_member_seq ,
           cs_reg_dtime ,
           cs_reg_ip ,
           cs_upd_member_seq ,
           cs_upd_dtime ,
           cs_upd_ip
       ) 
       VALUES 
       ( 
           #{surveyPaperTitle, jdbcType=VARCHAR} ,
           #{surveyPaperTypeCd, jdbcType=VARCHAR} ,
           #{description, jdbcType=VARCHAR} ,
           0 ,
           #{onOffCd, jdbcType=VARCHAR} ,
           #{regMemberSeq, jdbcType=NUMERIC} ,
           dbo.FN_NOW_TO_CHAR() ,
           #{regIp, jdbcType=VARCHAR} ,
           #{updMemberSeq, jdbcType=NUMERIC} ,
           dbo.FN_NOW_TO_CHAR() ,
           #{updIp, jdbcType=VARCHAR} 
       )        
	</insert>
	
	<update id="update" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivSurveyPaperVO">
/* UIUnivSurveyPaperMapper.update */
UPDATE cs_survey_paper 
   SET cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} ,
       cs_upd_dtime = dbo.FN_NOW_TO_CHAR() ,
       cs_upd_ip = #{updIp, jdbcType=VARCHAR} ,
       cs_survey_paper_title = #{surveyPaperTitle, jdbcType=VARCHAR} ,
       cs_survey_paper_type_cd = #{surveyPaperTypeCd, jdbcType=VARCHAR} ,
       cs_description = #{description, jdbcType=VARCHAR} ,
       cs_use_yn = #{useYn, jdbcType=VARCHAR} 
 WHERE cs_survey_paper_seq = #{surveyPaperSeq} 
   AND cs_delete_yn = 'N'	
	</update>
	
	<update id="delete" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivSurveyPaperVO">
/* UIUnivSurveyPaperMapper.delete */
UPDATE cs_survey_paper 
   SET cs_delete_yn = 'Y' ,
   	   cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} ,
       cs_upd_dtime = dbo.FN_NOW_TO_CHAR() ,
       cs_upd_ip = #{updIp, jdbcType=VARCHAR}
 WHERE cs_survey_paper_seq = #{surveyPaperSeq} 
   AND cs_delete_yn = 'N'		
	</update>
	
	<update id="updateUseCount" parameterType="Long">
/* UIUnivSurveyPaperMapper.updateUseCount */
UPDATE cs_survey_paper 
   SET cs_use_count = 
       (SELECT COUNT(*) 
         FROM cs_course_active_survey 
        WHERE cs_survey_paper_seq = #{surveyPaperSeq} 
          AND cs_delete_yn = 'N'
       ) 
 WHERE cs_survey_paper_seq = #{surveyPaperSeq}
   AND cs_delete_yn = 'N'	
	</update>
	
	<resultMap id="detailResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivSurveyPaperRS">
		<result column="csp.surveyPaperSeq"     property="univSurveyPaper.surveyPaperSeq"     />
		<result column="csp.surveyPaperTitle"   property="univSurveyPaper.surveyPaperTitle"   />
		<result column="csp.surveyPaperTypeCd"  property="univSurveyPaper.surveyPaperTypeCd"  />
		<result column="csp.description"        property="univSurveyPaper.description"        />
		<result column="csp.useCount"           property="univSurveyPaper.useCount"           />
		<result column="csp.useYn"              property="univSurveyPaper.useYn"              />
		<result column="csp.onOffCd"            property="univSurveyPaper.onOffCd"            />
		<result column="csp.deleteYn"           property="univSurveyPaper.deleteYn"           />
		<result column="csp.regMemberSeq"       property="univSurveyPaper.regMemberSeq"       />
		<result column="csp.regDtime"           property="univSurveyPaper.regDtime"           />
		<result column="csp.regIp"              property="univSurveyPaper.regIp"              />
		<result column="csp.updMemberSeq"       property="univSurveyPaper.updMemberSeq"       />
		<result column="csp.updDtime"           property="univSurveyPaper.updDtime"           />
		<result column="csp.updIp"              property="univSurveyPaper.updIp"              />
		<result column="csp.regMemberName"      property="univSurveyPaper.regMemberName"      />
		<result column="csp.updMemberName"      property="univSurveyPaper.updMemberName"      />
	</resultMap>
	
	<select id="getDetail" parameterType="Long" resultMap="detailResultMap">
/* UIUnivSurveyPaperMapper.getDetail */
SELECT csp.cs_survey_paper_seq                   AS "csp.surveyPaperSeq" ,
       csp.cs_survey_paper_title                 AS "csp.surveyPaperTitle" ,
       csp.cs_survey_paper_type_cd               AS "csp.surveyPaperTypeCd" ,
       csp.cs_description                        AS "csp.description" ,
       csp.cs_use_count                          AS "csp.useCount" ,
       csp.cs_use_yn                             AS "csp.useYn" ,
       csp.cs_onoff_cd                           AS "csp.onOffCd" ,
       csp.cs_delete_yn                          AS "csp.deleteYn" ,
       csp.cs_reg_member_seq                     AS "csp.regMemberSeq" ,
       csp.cs_reg_dtime                          AS "csp.regDtime" ,
       csp.cs_reg_ip		 					 AS "csp.regIp" ,
       csp.cs_upd_member_seq                     AS "csp.updMemberSeq" ,
       csp.cs_upd_dtime                          AS "csp.updDtime" ,
       csp.cs_upd_ip		 					 AS "csp.updIp" ,
       (SELECT cs_member_name 
         FROM cs_member 
        WHERE cs_member_seq = csp.cs_reg_member_seq
       ) AS "csp.regMemberName" ,
       (SELECT cs_member_name 
         FROM cs_member 
        WHERE cs_member_seq = csp.cs_upd_member_seq
       ) AS "csp.updMemberName"
  FROM cs_survey_paper csp 
 WHERE csp.cs_survey_paper_seq = #{surveyPaperSeq} 
   AND csp.cs_delete_yn = 'N'	
	</select>
	
	<resultMap id="listResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivSurveyPaperRS">
		<result column="csp.surveyPaperSeq"     property="univSurveyPaper.surveyPaperSeq"     />
		<result column="csp.surveyPaperTitle"   property="univSurveyPaper.surveyPaperTitle"   />
		<result column="csp.surveyPaperTypeCd"  property="univSurveyPaper.surveyPaperTypeCd"  />
		<result column="csp.description"        property="univSurveyPaper.description"        />
		<result column="csp.useCount"           property="univSurveyPaper.useCount"           />
		<result column="csp.useYn"              property="univSurveyPaper.useYn"              />
		<result column="csp.onOffCd"            property="univSurveyPaper.onOffCd"            />
		<result column="csp.deleteYn"           property="univSurveyPaper.deleteYn"           />
		<result column="csp.regMemberSeq"       property="univSurveyPaper.regMemberSeq"       />
		<result column="csp.regDtime"           property="univSurveyPaper.regDtime"           />
		<result column="csp.regIp"              property="univSurveyPaper.regIp"              />
		<result column="csp.updMemberSeq"       property="univSurveyPaper.updMemberSeq"       />
		<result column="csp.updDtime"           property="univSurveyPaper.updDtime"           />
		<result column="csp.updIp"              property="univSurveyPaper.updIp"              />
		<result column="csp.regMemberName"      property="univSurveyPaper.regMemberName"      />
		<result column="csp.updMemberName"      property="univSurveyPaper.updMemberName"      />
		<result column="csp.surveyCount"        property="univSurveyPaper.surveyCount"        />
	</resultMap>
	
	<select id="getList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivSurveyPaperCondition" resultMap="listResultMap">
/* UIUnivSurveyPaperMapper.getList */
	<if test='currentPage != 0'>
SELECT Z.* FROM (SELECT Row_Number() OVER (
        <choose>
            <when test='orderby == 1'>ORDER BY "csp.regDtime" ASC</when>
            <when test='orderby ==-1'>ORDER BY "csp.regDtime" DESC</when>
            <when test='orderby == 2'>ORDER BY "csp.surveyPaperTitle" ASC</when>
            <when test='orderby ==-2'>ORDER BY "csp.surveyPaperTitle" DESC</when>
            <when test='orderby == 3'>ORDER BY "csp.surveyPaperTypeCd" ASC</when>
            <when test='orderby ==-3'>ORDER BY "csp.surveyPaperTypeCd" DESC</when>
            <when test='orderby == 4'>ORDER BY "csp.useCount" ASC</when>
            <when test='orderby ==-4'>ORDER BY "csp.useCount" DESC</when>
            <otherwise>ORDER BY "csp.regDtime" DESC</otherwise>
        </choose>
) AS rownumber, * FROM (
        </if>
SELECT csp.cs_survey_paper_seq                   AS "csp.surveyPaperSeq" ,
       csp.cs_survey_paper_title                 AS "csp.surveyPaperTitle" ,
       csp.cs_survey_paper_type_cd               AS "csp.surveyPaperTypeCd" ,
       csp.cs_description                        AS "csp.description" ,
       csp.cs_use_count                          AS "csp.useCount" ,
       csp.cs_use_yn                             AS "csp.useYn" ,
       csp.cs_onoff_cd                           AS "csp.onOffCd" ,
       csp.cs_delete_yn                          AS "csp.deleteYn" ,
       csp.cs_reg_member_seq                     AS "csp.regMemberSeq" ,
       csp.cs_reg_dtime                          AS "csp.regDtime" ,
       csp.cs_reg_ip		 					 AS "csp.regIp" ,
       csp.cs_upd_member_seq                     AS "csp.updMemberSeq" ,
       csp.cs_upd_dtime                          AS "csp.updDtime" ,
       csp.cs_upd_ip		 					 AS "csp.updIp" ,
       m1.cs_member_name						 AS "csp.regMemberName" ,
       m2.cs_member_name						 AS "csp.updMemberName" ,
       (
       SELECT COUNT(*)
         FROM cs_survey_paper_element element
        WHERE element.cs_survey_paper_seq = csp.cs_survey_paper_seq
          AND element.cs_delete_yn = 'N'
       ) AS "csp.surveyCount" 
  FROM cs_survey_paper csp 
  	INNER JOIN cs_member m1
  		ON m1.cs_member_seq = csp.cs_reg_member_seq
	INNER JOIN cs_member m2
  		ON m2.cs_member_seq = csp.cs_upd_member_seq
 WHERE csp.cs_delete_yn = 'N' 
		<if test='srchSurveyPaperTypeCd != null and !srchSurveyPaperTypeCd.equals("")'>
   AND csp.cs_survey_paper_type_cd = #{srchSurveyPaperTypeCd}		
		</if>
		<if test='srchUseYn != null and !srchUseYn.equals("")'>
   AND csp.cs_use_yn = #{srchUseYn}		
		</if>   	   	
		<if test='srchOnOffCd != null and !srchOnOffCd.equals("")'>
   AND csp.cs_onoff_cd = #{srchOnOffCd}		
		</if>
		<if test='srchWord != null and !srchWord.equals("")'>
			<if test='srchKey.equals("title")'>
   AND csp.cs_survey_paper_title LIKE '%' + #{srchWordDB} + '%'				
			</if>
			<if test='srchKey.equals("description")'>
   AND csp.cs_description LIKE '%' + #{srchWordDB} + '%'				
			</if>
		</if>
		 <if test='currentPage != 0'>
) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo} ORDER BY Z.rownumber
        </if>       	   	
	</select>
	
	<select id="countList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivSurveyPaperCondition" resultType="int">
/* UIUnivSurveyPaperMapper.countList */
SELECT COUNT(*)
  FROM cs_survey_paper csp 
  	INNER JOIN cs_member m1
  		ON m1.cs_member_seq = csp.cs_reg_member_seq
	INNER JOIN cs_member m2
  		ON m2.cs_member_seq = csp.cs_upd_member_seq
 WHERE csp.cs_delete_yn = 'N' 
		<if test='srchSurveyPaperTypeCd != null and !srchSurveyPaperTypeCd.equals("")'>
   AND csp.cs_survey_paper_type_cd = #{srchSurveyPaperTypeCd}		
		</if>
		<if test='srchUseYn != null and !srchUseYn.equals("")'>
   AND csp.cs_use_yn = #{srchUseYn}		
		</if>   	   	
		<if test='srchOnOffCd != null and !srchOnOffCd.equals("")'>
   AND csp.cs_onoff_cd = #{srchOnOffCd}		
		</if>
		<if test='srchWord != null and !srchWord.equals("")'>
			<if test='srchKey.equals("title")'>
   AND csp.cs_survey_paper_title LIKE '%' + #{srchWordDB} + '%'				
			</if>
			<if test='srchKey.equals("description")'>
   AND csp.cs_description LIKE '%' + #{srchWordDB} + '%'				
			</if>
		</if>	
	</select>
	
</mapper>