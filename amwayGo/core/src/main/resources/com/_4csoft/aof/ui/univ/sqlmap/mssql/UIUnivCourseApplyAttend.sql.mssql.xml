<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.univ.mapper.UnivCourseApplyAttendMapper">
	<insert id="insert" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseApplyAttendVO">
			/* UIUnivCourseApplyAttend.insert */
			INSERT INTO cs_course_apply_attend 
			       ( 
			           cs_course_apply_seq,
			           cs_course_active_seq,
			           cs_lesson_seq,
			           cs_active_element_seq,
			           cs_attend_type_cd,
			           cs_onoff_cd,
			           cs_delete_yn, 
			           cs_reg_member_seq, 
			           cs_upd_member_seq, 
			           cs_reg_dtime, 
			           cs_upd_dtime, 
			           cs_reg_ip, 
			           cs_upd_ip 
			       ) 
			   VALUES
			   	   (
			   	   	   #{courseApplySeq,   		jdbcType=NUMERIC},
			   	   	   #{courseActiveSeq,   	jdbcType=NUMERIC},
			           #{lessonSeq,   			jdbcType=NUMERIC},
			           #{activeElementSeq,   	jdbcType=NUMERIC},
			           #{attendTypeCd,   		jdbcType=VARCHAR},
			           #{onoffCd,   			jdbcType=VARCHAR},
			   		   'N',
			           #{regMemberSeq,   jdbcType=NUMERIC},
			           #{updMemberSeq,   jdbcType=NUMERIC},
			           dbo.FN_NOW_TO_CHAR(),
			           dbo.FN_NOW_TO_CHAR(),
			           #{regIp,          jdbcType=VARCHAR},
			           #{updIp,          jdbcType=VARCHAR}
			   	   )
    </insert>
    
    <update id="update" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseApplyAttendVO">
		/* UIUnivCourseApplyAttend.update */
		UPDATE cs_course_apply_attend 
		   SET 
		   	<if test='courseApplySeq != null and !courseApplySeq.equals("")'>
		   	   cs_course_apply_seq		= #{courseApplySeq} ,
		   	</if>
		   	<if test='courseActiveSeq != null and !courseActiveSeq.equals("")'>
		   	   cs_course_active_seq		= #{courseActiveSeq} ,
		   	</if>
		   	<if test='lessonSeq != null and !lessonSeq.equals("")'>
			   cs_lesson_seq			= #{lessonSeq} ,
			</if>
			<if test='activeElementSeq != null and !activeElementSeq.equals("")'>
			   cs_active_element_seq	= #{activeElementSeq} ,
			</if>
			<if test='attendTypeCd != null and !attendTypeCd.equals("")'>
			   cs_attend_type_cd		= #{attendTypeCd} ,
			</if>
			<if test='onoffCd != null and !onoffCd.equals("")'>
			   cs_onoff_cd				= #{onoffCd} ,
			</if>
		   	   cs_upd_dtime  			= dbo.FN_NOW_TO_CHAR() ,
		       cs_upd_member_seq 		= #{updMemberSeq, jdbcType=NUMERIC} ,
		       cs_upd_ip         		= #{updIp, jdbcType=VARCHAR} 
		 WHERE cs_delete_yn = 'N'
		   AND cs_course_apply_attend_seq 	= #{courseApplyAttendSeq}
    </update>

    <update id="delete" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseApplyAttendVO">
		/* UIUnivCourseApplyAttend.delete */
		UPDATE cs_course_apply_attend 
		   SET cs_upd_dtime  	 = dbo.FN_NOW_TO_CHAR() ,
		       cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} ,
		       cs_upd_ip         = #{updIp, jdbcType=VARCHAR} ,
		       cs_delete_yn      = 'Y' 
		 WHERE cs_delete_yn = 'N'
		   AND cs_course_apply_attend_seq 	= #{courseApplyAttendSeq}
    </update>
    
    <resultMap id="detailResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
        <result column="attend.courseApplyAttendSeq"   	property="applyAttend.courseApplyAttendSeq"/>
        <result column="attend.courseActiveSeq"   		property="applyAttend.courseActiveSeq"/>
        <result column="attend.courseApplySeq"   		property="applyAttend.courseApplySeq"/>
        <result column="attend.lessonSeq"   			property="applyAttend.lessonSeq"/>
        <result column="attend.activeElementSeq"   		property="applyAttend.activeElementSeq"/>
        <result column="attend.attendTypeCd"   			property="applyAttend.attendTypeCd"/>
        <result column="attend.onoffCd"   				property="applyAttend.onoffCd"/>
        <result column="attend.deleteYn"   				property="applyAttend.deleteYn"/>
        <result column="attend.regMemberSeq"   			property="applyAttend.regMemberSeq"/>
        <result column="attend.updMemberSeq"   			property="applyAttend.updMemberSeq"/>
        <result column="attend.regDtime"   				property="applyAttend.regDtime"/>
        <result column="attend.updDtime"   				property="applyAttend.updDtime"/>
        <result column="attend.regIp"   					property="applyAttend.regIp"/>
        <result column="attend.updIp"   					property="applyAttend.updIp"/>
    </resultMap>
                 
    <select id="getDetail" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseApplyAttendVO" resultMap="detailResultMap">
		/* UIUnivCourseApplyAttend.getDetail */
		SELECT
		    attend.cs_course_apply_attend_seq 	AS "attend.courseApplyAttendSeq"
		    attend.cs_course_active_seq			AS "attend.courseActiveSeq" ,  
			attend.cs_course_apply_seq			AS "attend.courseApplySeq" ,  
			attend.cs_lesson_seq				AS "attend.lessonSeq" ,        
			attend.cs_active_element_seq		AS "attend.activeElementSeq" ,
			attend.cs_attend_type_cd			AS "attend.attendTypeCd" ,    
			attend.cs_onoff_cd					AS "attend.onoffCd" ,          
			attend.cs_delete_yn					AS "attend.deleteYn" ,         
			attend.cs_reg_member_seq			AS "attend.regMemberSeq" ,    
			attend.cs_upd_member_seq			AS "attend.updMemberSeq" ,    
			attend.cs_reg_dtime					AS "attend.regDtime" ,         
			attend.cs_upd_dtime					AS "attend.updDtime" ,         
			attend.cs_reg_ip					AS "attend.regIp" ,            
			attend.cs_upd_ip                	AS "attend.updIp" 
		FROM
			cs_course_apply_attend attend
		WHERE
				attend.cs_delete_yn = 'N'
			AND attend.cs_course_apply_attend_seq = #{courseApplyAttendSeq}
    </select>
    
    <select id="getDetailByLcms" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseApplyAttendVO" resultType="com._4csoft.aof.univ.vo.UnivCourseApplyAttendVO">
		/* UIUnivCourseApplyAttend.getDetailByLcms */
		SELECT
		    attend.cs_course_apply_attend_seq 	AS "courseApplyAttendSeq" ,
		    attend.cs_course_active_seq			AS "courseActiveSeq" ,  
			attend.cs_course_apply_seq			AS "courseApplySeq" ,  
			attend.cs_lesson_seq				AS "lessonSeq" ,        
			attend.cs_active_element_seq		AS "activeElementSeq" ,
			attend.cs_attend_type_cd			AS "attendTypeCd" ,    
			attend.cs_onoff_cd					AS "onoffCd" ,          
			attend.cs_delete_yn					AS "deleteYn" ,         
			attend.cs_reg_member_seq			AS "regMemberSeq" ,    
			attend.cs_upd_member_seq			AS "updMemberSeq" ,    
			attend.cs_reg_dtime					AS "regDtime" ,         
			attend.cs_upd_dtime					AS "updDtime" ,         
			attend.cs_reg_ip					AS "regIp" ,            
			attend.cs_upd_ip                	AS "updIp" 
		FROM
			cs_course_apply_attend attend
			INNER JOIN cs_course_active_element element
				ON  attend.cs_active_element_seq = element.cs_active_element_seq
				AND element.cs_reference_type_cd = '${CD.COURSE_ELEMENT_TYPE.ORGANIZATION}'
				AND element.cs_course_week_type_cd = '${CD.COURSE_WEEK_TYPE.LECTURE}'
				AND element.cs_delete_yn = 'N'
		WHERE
				attend.cs_delete_yn = 'N'
			AND attend.cs_course_apply_seq = #{courseApplySeq}
			AND element.cs_reference_seq = #{referenceSeq}
			AND attend.cs_lesson_seq = #{lessonSeq}
    </select>
    
    <resultMap id="listResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="attend.courseApplyAttendSeq"   	property="applyAttend.courseApplyAttendSeq"/>
        <result column="attend.courseApplySeq"   		property="applyAttend.courseApplySeq"/>
        <result column="attend.lessonSeq"   				property="applyAttend.lessonSeq"/>
        <result column="attend.activeElementSeq"   		property="applyAttend.activeElementSeq"/>
        <result column="attend.attendTypeCd"   			property="applyAttend.attendTypeCd"/>
        <result column="attend.onoffCd"   				property="applyAttend.onoffCd"/>
        <result column="attend.deleteYn"   				property="applyAttend.deleteYn"/>
        <result column="attend.regMemberSeq"   			property="applyAttend.regMemberSeq"/>
        <result column="attend.updMemberSeq"   			property="applyAttend.updMemberSeq"/>
        <result column="attend.regDtime"   				property="applyAttend.regDtime"/>
        <result column="attend.updDtime"   				property="applyAttend.updDtime"/>
        <result column="attend.regIp"   					property="applyAttend.regIp"/>
        <result column="attend.updIp"   					property="applyAttend.updIp"/>
	</resultMap>
	
	<select id="getList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAttendCondition" resultMap="listResultMap">
		/* UIUnivCourseApplyAttend.getList */
		<if test='currentPage != 0'>
		SELECT Z.* FROM (SELECT Row_Number() OVER (
	        <choose>
	            <otherwise>ORDER BY "apply.regDtime" DESC</otherwise>
	        </choose>
			) AS rownumber, * FROM (
	 	</if>
		SELECT
		    attend.cs_course_apply_attend_seq 	AS "attend.courseApplyAttendSeq"
			attend.cs_course_apply_seq			AS "attend.courseApplySeq" ,  
			attend.cs_lesson_seq				AS "attend.lessonSeq" ,        
			attend.cs_active_element_seq		AS "attend.activeElementSeq" ,
			attend.cs_attend_type_cd			AS "attend.attendTypeCd" ,    
			attend.cs_onoff_cd					AS "attend.onoffCd" ,          
			attend.cs_delete_yn					AS "attend.deleteYn" ,         
			attend.cs_reg_member_seq			AS "attend.regMemberSeq" ,    
			attend.cs_upd_member_seq			AS "attend.updMemberSeq" ,    
			attend.cs_reg_dtime					AS "attend.regDtime" ,         
			attend.cs_upd_dtime					AS "attend.updDtime" ,         
			attend.cs_reg_ip					AS "attend.regIp" ,            
			attend.cs_upd_ip                	AS "attend.updIp" 
		FROM
			cs_course_apply_attend attend
		WHERE
				attend.cs_delete_yn = 'N'
		<if test='currentPage != 0'>
		) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo} ORDER BY Z.rownumber
        </if>
    </select>
    
    <select id="countList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAttendCondition" resultType="int">
		/* UIUnivCourseApplyAttend.countList */
		SELECT
		    COUNT(*) 
		FROM
			cs_course_apply_attend attend
		WHERE
				attend.cs_delete_yn = 'N'
    </select>
        
     <resultMap id="listByOnlineApplyMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="attend.courseActiveSeq"   				property="applyAttend.courseActiveSeq"/>
   	 	<result column="attend.courseApplySeq"   				property="applyAttend.courseApplySeq"/>
   	 	<result column="attend.progressMeasure"   				property="applyAttend.progressMeasure"/>
   	 	<result column="attend.attendTypeAttendCnt"   			property="applyAttend.attendTypeAttendCnt"/>
   	 	<result column="attend.attendTypeAbsenceCnt"   			property="applyAttend.attendTypeAbsenceCnt"/>
   	 	<result column="attend.attendTypePerceptionCnt"   		property="applyAttend.attendTypePerceptionCnt"/>
   	 	<result column="attend.attempt"   						property="applyAttend.attempt"/>
   	 	<result column="attend.sessionTime"   					property="applyAttend.sessionTime"/>
   	 	<result column="attend.attendScore"   					property="applyAttend.attendScore"/>
   	 	<result column="member.memberSeq"   					property="member.memberSeq"/>
   	 	<result column="member.memberName"   					property="member.memberName"/>
   	 	<result column="member.memberId"   						property="member.memberId"/>
   	 	<result column="member.categoryOrganizationSeq"   		property="member.categoryOrganizationSeq"/>
   	 	<result column="cate.categoryName"   					property="cate.categoryName"/>
	</resultMap>

    <select id="getListByOnlineApply" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAttendCondition" resultMap="listByOnlineApplyMap">
    	/* UIUnivCourseApplyAttend.getListByOnlineApply */
		SELECT
				el.cs_course_active_seq				AS "attend.courseActiveSeq" ,
				el.cs_course_apply_seq				AS "attend.courseApplySeq" ,
				el.cs_progress_measure 				AS "attend.progressMeasure" ,
				el.attend_type_attend_cnt			AS "attend.attendTypeAttendCnt" ,
				el.attend_type_absence_cnt			AS "attend.attendTypeAbsenceCnt" ,
				el.attend_type_perception_cnt		AS "attend.attendTypePerceptionCnt" ,
				el.cs_attempt						AS "attend.attempt" ,
				el.cs_session_time 					AS "attend.sessionTime" ,
				el.cs_member_seq					AS "member.memberSeq" ,
				el.cs_member_name 					AS "member.memberName" ,
				el.cs_member_id 					AS "member.memberId" ,
				el.cs_category_organization_seq		AS "member.categoryOrganizationSeq" ,
				el.cs_category_name					AS "cate.categoryName",
				CASE
					WHEN (el.attend_type_absence_cnt + ISNULL((el.attend_type_perception_cnt / eval003.cs_count),0)) >= eval002.cs_permission_count THEN
							(100 -
								(
									(el.attend_type_absence_cnt + ISNULL((el.attend_type_perception_cnt / eval003.cs_count),0)) * eval002.CS_MINUS_SCORE
								)
								-
								(
									ISNULL(((el.attend_type_absence_cnt * eval003.cs_count) + el.attend_type_perception_cnt) % eval003.cs_count, 0) * eval003.CS_MINUS_SCORE
								)
							)
							+ (eval002.CS_PERMISSION_COUNT * eval002.CS_MINUS_SCORE)
					ELSE 100
				END 								AS "attend.attendScore"
		FROM
		(
			SELECT
				el.rownumber ,
				el.cs_member_name,
				el.cs_member_id , 
				el.cs_category_organization_seq , 
				el.cs_category_name ,
				el.cs_course_active_seq,
				el.cs_course_apply_seq,
				el.cs_member_seq,
				AVG(el.cs_progress_measure) AS cs_progress_measure ,
				SUM(attend_type_attend_cnt) AS attend_type_attend_cnt,
				SUM(attend_type_absence_cnt) AS attend_type_absence_cnt,
				SUM(attend_type_perception_cnt) AS attend_type_perception_cnt,
				SUM(el.cs_attempt) AS cs_attempt,
				SUM(el.cs_session_time) AS cs_session_time
			FROM
			(
			SELECT
				el.rownumber ,
				el.cs_member_name,
				el.cs_member_id , 
				el.cs_category_organization_seq , 
				el.cs_category_name ,
				el.cs_course_active_seq,
				el.cs_course_apply_seq,
				el.cs_member_seq,
				el.cs_progress_measure,
				CASE
					WHEN el.attend_type = 'ATTEND' THEN 1
					else 0
				END attend_type_attend_cnt,
				CASE
					WHEN el.attend_type = 'ABSENCE' THEN 1
					ELSE 0
				END attend_type_absence_cnt,
				CASE
					WHEN el.attend_type = 'PERCEPTION' THEN 1
					ELSE 0
				END attend_type_perception_cnt,
				el.cs_attempt,
				el.cs_session_time
			FROM
				(
					SELECT
						<if test='currentPage != 0'>
						app.rownumber , 
						</if>
						<if test='currentPage == 0'>
						0 AS rownumber ,
						</if>
						<if test='!"${CD.COURSE_TYPE.ALWAYS}".equals(courseTypeCd)'>
							app.cs_member_name,
							app.cs_member_id , 
							app.cs_category_organization_seq , 
							app.cs_category_name ,
							el.cs_active_element_seq,
							el.cs_course_active_seq,
							el.cs_reference_seq,
							el.cs_start_dtime,
							el.cs_end_dtime,
							item.cs_item_seq,
							app.cs_course_apply_seq,
							app.cs_member_seq,
							CONVERT(FLOAT,ISNULL(lm.cs_progress_measure,0)) AS cs_progress_measure,
							CASE
								WHEN attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.001}' THEN 'ATTEND'
								WHEN el.cs_end_dtime <![CDATA[<]]> DBO.FN_NOW_TO_CHAR() AND (attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.002}' OR attend.cs_attend_type_cd IS NULL) THEN 'ABSENCE'
								WHEN el.cs_end_dtime <![CDATA[<]]> DBO.FN_NOW_TO_CHAR() AND attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.003}' THEN 'PERCEPTION'
								ELSE 'NON'
							END AS attend_type ,
							ISNULL(CONVERT(INT, lm.cs_attempt), 0) AS cs_attempt ,
							ISNULL(CONVERT(INT, lm.cs_session_time), 0) AS cs_session_time
						</if>
						<if test='"${CD.COURSE_TYPE.ALWAYS}".equals(courseTypeCd)'>
							app.cs_member_name,
							app.cs_member_id , 
							app.cs_category_organization_seq , 
							app.cs_category_name ,
							el.cs_active_element_seq,
							el.cs_course_active_seq,
							el.cs_reference_seq,
							REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(100), DATEADD(d, el.cs_start_day ,dbo.FN_TO_DATE(app.cs_study_start_date)), 120), '-', ''), ':', ''), ' ', '') AS cs_start_dtime,
							REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(100), DATEADD(d, el.cs_end_day ,dbo.FN_TO_DATE(app.cs_study_start_date)), 120), '-', ''), ':', ''), ' ', '') AS cs_end_dtime,
							item.cs_item_seq,
							app.cs_course_apply_seq,
							app.cs_member_seq,
							CONVERT(FLOAT,ISNULL(lm.cs_progress_measure,0)) AS cs_progress_measure,
							CASE
								WHEN attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.001}' THEN 'ATTEND'
								WHEN REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(100), DATEADD(d, el.cs_end_day ,dbo.FN_TO_DATE(app.cs_study_start_date)), 120), '-', ''), ':', ''), ' ', '') <![CDATA[<]]> DBO.FN_NOW_TO_CHAR() AND (attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.002}' OR attend.cs_attend_type_cd IS NULL) THEN 'ABSENCE'
								WHEN REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(100), DATEADD(d, el.cs_end_day ,dbo.FN_TO_DATE(app.cs_study_start_date)), 120), '-', ''), ':', ''), ' ', '') <![CDATA[<]]> DBO.FN_NOW_TO_CHAR() AND attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.003}' THEN 'PERCEPTION'
								ELSE 'NON'
							END AS attend_type ,
							ISNULL(CONVERT(INT, lm.cs_attempt), 0) AS cs_attempt ,
							ISNULL(CONVERT(INT, lm.cs_session_time), 0) AS cs_session_time
						</if>
					FROM
						cs_course_active_element el
						INNER JOIN
						 (
							<if test='currentPage != 0'>
							SELECT Z.* FROM (SELECT Row_Number() OVER (
						        <choose>
						        	<when test='orderby == 1'> ORDER BY cs_member_name ASC</when>
						            <when test='orderby == -1'>ORDER BY cs_member_name DESC</when>
						            <when test='orderby == 2'> ORDER BY cs_member_id ASC</when>
						            <when test='orderby == -2'>ORDER BY cs_member_id DESC</when>
						            <when test='orderby == 3'> ORDER BY cs_category_name ASC</when>
						            <when test='orderby == -3'>ORDER BY cs_category_name DESC</when>
						            <otherwise>ORDER BY cs_member_name ASC</otherwise>
						        </choose>
								) AS rownumber, * FROM (
						 	</if>
								SELECT 
							         app.cs_course_active_seq ,
									 app.cs_course_apply_seq , 
									 app.cs_member_seq , 
									 app.cs_study_start_date,
									 mem.cs_member_name , 
									 mem.cs_member_id , 
									 mem.cs_category_organization_seq , 
									 cate.cs_category_name 
								FROM cs_course_apply app 
								 INNER JOIN cs_member mem 
									 ON app.cs_member_seq = mem.cs_member_seq 
									 AND app.cs_delete_yn = 'N' 
									 AND app.cs_apply_status_cd = '${CD.APPLY_STATUS.002}' 
									 AND app.cs_course_active_seq = #{srchCourseActiveSeq}
								 INNER JOIN cs_category cate 
									 ON mem.cs_category_organization_seq = cate.cs_category_seq 
							    WHERE
							    	    app.cs_course_active_seq = #{srchCourseActiveSeq}
							   	<if test="srchCourseApplySeq != null">
							   		AND app.cs_course_apply_seq = #{srchCourseApplySeq}
							   	</if>
								<if test='srchWord != null and !srchWord.equals("")'>
						            <if test='srchKey.equals("memberName")'>
						       		AND mem.cs_member_name LIKE '%' + #{srchWordDB} + '%'
						            </if>
						            <if test='srchKey.equals("memberId")'>
						       		AND mem.cs_member_id LIKE '%' + #{srchWordDB} + '%'
						            </if>
						        </if>
						        <if test='srchCategoryName != null and !srchCategoryName.equals("")'>
								   AND cate.cs_category_string LIKE '%' + #{srchCategoryNameDB} + '%'
								</if>
							<if test='currentPage != 0'>
							) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo}
					        </if>
					     ) app
					        ON el.cs_course_active_seq = app.cs_course_active_seq
						INNER JOIN cs_lcms_organization orga
							ON el.cs_reference_seq = orga.cs_organization_seq
						INNER JOIN cs_lcms_item item
							ON item.cs_organization_seq = orga.cs_organization_seq
						LEFT OUTER JOIN cs_lcms_learner_datamodel lm
						    ON  item.cs_organization_seq = lm.cs_organization_seq
						    AND item.cs_item_seq = lm.cs_item_seq
						    AND app.cs_course_apply_seq = lm.cs_course_apply_seq
						    AND app.cs_course_active_seq = #{srchCourseActiveSeq}
						    AND lm.cs_delete_yn = 'N'
						    AND lm.cs_course_apply_seq != -1
						LEFT OUTER JOIN 
							(
								SELECT
									attend.cs_course_apply_attend_seq,
									attend.cs_course_apply_seq,
									attend.cs_lesson_seq,
									attend.cs_active_element_seq,
									attend.cs_attend_type_cd,
									attend.cs_onoff_cd
								FROM
									cs_course_apply_attend attend
								WHERE attend.cs_onoff_cd = '${CD.ONOFF_TYPE.ON}' 
								  AND attend.cs_delete_yn = 'N' 
								  AND attend.cs_course_active_seq = #{srchCourseActiveSeq}
							) attend
                            ON el.cs_active_element_seq = attend.cs_active_element_seq 
                            AND lm.cs_course_apply_seq = attend.cs_course_apply_seq 
                            AND lm.cs_item_seq = attend.cs_lesson_seq 
					WHERE
							el.cs_course_active_seq = #{srchCourseActiveSeq}
						AND el.cs_delete_yn = 'N'
						AND el.cs_reference_type_cd = '${CD.COURSE_ELEMENT_TYPE.ORGANIZATION}'
						AND el.cs_course_week_type_cd = '${CD.COURSE_WEEK_TYPE.LECTURE}'
						<if test='srchReferenceSeq != null and !srchReferenceSeq.equals("")'>
						AND el.cs_reference_seq = #{srchReferenceSeq}
						</if>
				) el
			) el
			GROUP BY
				el.rownumber ,
				el.cs_member_name ,
				el.cs_member_id , 
				el.cs_category_organization_seq , 
				el.cs_category_name ,
				el.cs_course_active_seq, 
				el.cs_course_apply_seq, 
				el.cs_member_seq
		) el
		LEFT OUTER JOIN
			(
				SELECT 
					eval.cs_course_active_seq,
					eval.cs_minus_score,
					eval.cs_permission_count
				FROM 
					cs_course_attend_evaluate eval
				WHERE
						eval.cs_onoff_cd = '${CD.ONOFF_TYPE.ON}'
					AND eval.cs_delete_yn = 'N'
					AND eval.cs_attend_type_cd = '${CD.ATTEND_TYPE.002}'
					AND eval.cs_course_active_seq = #{srchCourseActiveSeq}
			) eval002
			ON eval002.cs_course_active_seq = el.cs_course_active_seq
		LEFT OUTER JOIN
			(
				SELECT 
					eval.cs_course_active_seq,
					eval.cs_minus_score,
					CASE
					  	WHEN eval.cs_count = 0 THEN NULL
						ELSE eval.cs_count
					END AS cs_count
				FROM 
					cs_course_attend_evaluate eval
				WHERE
						eval.cs_onoff_cd = '${CD.ONOFF_TYPE.ON}'
					AND eval.cs_delete_yn = 'N'
					AND eval.cs_attend_type_cd = '${CD.ATTEND_TYPE.003}'
					AND eval.cs_course_active_seq = #{srchCourseActiveSeq}
			) eval003
			ON eval003.cs_course_active_seq = el.cs_course_active_seq
		WHERE
			el.cs_course_active_seq = #{srchCourseActiveSeq}
		<if test='currentPage != 0'>
		ORDER BY el.rownumber
        </if>
    </select>
    
    <select id="countListByOnlineApply" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAttendCondition" resultType="int">
    	/* UIUnivCourseApplyAttend.countListByOnlineApply */
    	SELECT 
    		COUNT(*)
    	FROM
	    	cs_course_apply app
	    	INNER JOIN cs_member mem
	    		ON  app.cs_member_seq = mem.cs_member_seq
				AND app.cs_delete_yn = 'N'
				AND app.cs_apply_status_cd = '${CD.APPLY_STATUS.002}'
				AND app.cs_course_active_seq = #{srchCourseActiveSeq}
			INNER JOIN cs_category cate
				ON  mem.cs_category_organization_seq = cate.cs_category_seq
		WHERE
			app.cs_course_active_seq = #{srchCourseActiveSeq}
		<if test="srchCourseApplySeq != null">
	   		AND app.cs_course_apply_seq = #{srchCourseApplySeq}
	   	</if>
		<if test='srchWord != null and !srchWord.equals("")'>
            <if test='srchKey.equals("memberName")'>
       		AND mem.cs_member_name LIKE '%' + #{srchWordDB} + '%'
            </if>
            <if test='srchKey.equals("memberId")'>
       		AND mem.cs_member_id LIKE '%' + #{srchWordDB} + '%'
            </if>
        </if>
        <if test='srchCategoryName != null and !srchCategoryName.equals("")'>
			AND cate.cs_category_string LIKE '%' + #{srchCategoryNameDB} + '%'
		</if>
    </select>

	<!-- 오프라인 수강생 목록 -->
     <resultMap id="listByOfflineApplyMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="attend.courseActiveSeq"   				property="applyAttend.courseActiveSeq"/>
   	 	<result column="attend.courseApplySeq"   				property="applyAttend.courseApplySeq"/>
   	 	<result column="member.memberSeq"   					property="member.memberSeq"/>
   	 	<result column="member.memberName"   					property="member.memberName"/>
   	 	<result column="member.memberId"   						property="member.memberId"/>
   	 	<result column="member.phoneMobile"   					property="member.phoneMobile"/>
   	 	<result column="member.categoryOrganizationSeq"   		property="member.categoryOrganizationSeq"/>
   	 	<result column="cate.categoryName"   					property="cate.categoryName"/>
	</resultMap>
	<select id="getListByOfflineApplyMember" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAttendCondition" resultMap="listByOfflineApplyMap">
	/* UIUnivCourseApplyAttend.getListByOfflineApplyMember */
	SELECT
		app.cs_course_active_seq		  as "attend.courseActiveSeq",
		app.cs_course_apply_seq			  as "attend.courseApplySeq",
		mem.cs_member_seq				  as "member.memberSeq",
		mem.cs_member_name				  as "member.memberName",
		mem.cs_member_id				  as "member.memberId",
		mem.cs_phone_mobile				  as "member.phoneMobile",
		mem.cs_category_organization_seq  as "member.categoryOrganizationSeq",
		cate.cs_category_name			  as "cate.categoryName"
	FROM
		cs_course_apply app
	INNER JOIN 	cs_member mem
		ON app.cs_member_seq = mem.cs_member_seq
		AND mem.cs_delete_yn = 'N'	
	INNER JOIN cs_category cate
		ON mem.cs_category_organization_seq = cate.cs_category_seq
	WHERE app.cs_delete_yn = 'N'
		AND app.cs_apply_status_cd = '${CD.APPLY_STATUS.002}'
		AND app.cs_course_active_seq = #{srchCourseActiveSeq}
		<choose>
	        	<when test='orderby == 1'> ORDER BY "member.memberName" ASC</when>
	            <when test='orderby == -1'>ORDER BY "member.memberName" DESC</when>
	            <when test='orderby == 2'> ORDER BY "member.memberId" ASC</when>
	            <when test='orderby == -2'>ORDER BY "member.memberId" DESC</when>
	            <when test='orderby == 3'> ORDER BY "cate.categoryName" ASC</when>
	            <when test='orderby == -3'>ORDER BY "cate.categoryName" DESC</when>
	            <otherwise>ORDER BY "member.memberName" ASC</otherwise>
		</choose>	
	</select>

	<!-- 주차별 회차별 오프라인 출석부 목록 -->
     <resultMap id="ListCourseApplyOfflineAttendMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="attend.courseActiveSeq"   				property="applyAttend.courseActiveSeq"/>
   	 	<result column="attend.courseApplySeq"   				property="applyAttend.courseApplySeq"/>
   	 	<result column="member.memberSeq"   					property="member.memberSeq"/>
   	 	<result column="member.memberName"   					property="member.memberName"/>
   	 	<result column="member.memberId"   						property="member.memberId"/>
   	 	<result column="member.categoryOrganizationSeq"   		property="member.categoryOrganizationSeq"/>
   	 	<result column="cate.categoryName"   					property="cate.categoryName"/>
   	 	<result column="attend.courseApplyAttendSeq"   			property="applyAttend.courseApplyAttendSeq"/>
   	 	<result column="attend.attendTypeCd"   					property="applyAttend.attendTypeCd"/>
	</resultMap>
	<select id="getListCourseApplyOfflineAttend" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAttendCondition" resultMap="ListCourseApplyOfflineAttendMap">	
	/* UIUnivCourseApplyAttend.getListCourseApplyOfflineAttend */
	SELECT
		app.cs_course_active_seq		 					AS "attend.courseActiveSeq",
		app.cs_course_apply_seq			 					AS "attend.courseApplySeq",
		mem.cs_member_seq				  					AS "member.memberSeq",
		mem.cs_member_name				  					AS "member.memberName",
		mem.cs_member_id				  					AS "member.memberId",
		mem.cs_category_organization_seq  					AS "member.categoryOrganizationSeq",
		cate.cs_category_name			  					AS "cate.categoryName",
		isnull(att.cs_course_apply_attend_seq, 0)			AS "attend.courseApplyAttendSeq",
		isnull(att.cs_attend_type_cd, '${CD.ATTEND_TYPE.001}') 	AS "attend.attendTypeCd"
	FROM
		cs_course_apply app
	INNER JOIN 	cs_member mem
		ON app.cs_member_seq = mem.cs_member_seq
		AND mem.cs_delete_yn = 'N'
	INNER JOIN cs_category cate
		ON mem.cs_category_organization_seq = cate.cs_category_seq
	LEFT OUTER JOIN cs_course_apply_attend att
		ON app.CS_COURSE_APPLY_SEQ = att.CS_COURSE_APPLY_SEQ
		AND att.CS_ONOFF_CD = '${CD.ONOFF_TYPE.OFF}'
		AND att.CS_ACTIVE_ELEMENT_SEQ = #{activeElementSeq}
		AND att.CS_LESSON_SEQ = #{lessonSeq}
	WHERE app.cs_delete_yn = 'N'
		AND app.cs_apply_status_cd = '${CD.APPLY_STATUS.002}'
		AND app.cs_course_active_seq = #{srchCourseActiveSeq}
		<choose>
	        	<when test='orderby == 1'> ORDER BY "member.memberName" ASC</when>
	            <when test='orderby == -1'>ORDER BY "member.memberName" DESC</when>
	            <when test='orderby == 2'> ORDER BY "member.memberId" ASC</when>
	            <when test='orderby == -2'>ORDER BY "member.memberId" DESC</when>
	            <when test='orderby == 3'> ORDER BY "cate.categoryName" ASC</when>
	            <when test='orderby == -3'>ORDER BY "cate.categoryName" DESC</when>
	            <otherwise>ORDER BY "member.memberName" ASC</otherwise>
		</choose>		
	</select>
	
	
	<!-- 주차별 오프라인 출석정보 -->
     <resultMap id="listByOfflineApplyAttendMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="attend.courseActiveSeq"   				property="applyAttend.courseActiveSeq"/>
   	 	<result column="attend.courseApplySeq"   				property="applyAttend.courseApplySeq"/>
   	 	<result column="attend.activeElementSeq"   				property="applyAttend.activeElementSeq"/>
   	 	<result column="element.sortOrder"   					property="element.sortOrder"/>
   	 	<result column="attend.lessonSeq"   					property="applyAttend.lessonSeq"/>
   	 	<result column="attend.attendTypeCd"   					property="applyAttend.attendTypeCd"/>   
	</resultMap>
	<select id="getListByOfflineApplyAttend" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseActiveElementVO" resultMap="listByOfflineApplyAttendMap">
	/* UIUnivCourseApplyAttend.getListByOfflineApplyAttend */
	SELECT
		app.cs_course_active_seq		AS "attend.courseActiveSeq"
		,app.cs_course_apply_seq		AS "attend.courseApplySeq"
		,el.cs_active_element_seq		AS "attend.activeElementSeq"
		,el.cs_sort_order				AS "element.sortOrder"
		,att.cs_lesson_seq				AS "attend.lessonSeq"
		,att.cs_attend_type_cd			AS "attend.attendTypeCd"		
	FROM cs_course_apply app
	INNER JOIN cs_course_active_element el
		ON  el.cs_course_active_seq = app.cs_course_active_seq
		AND el.cs_reference_type_cd = '${CD.COURSE_ELEMENT_TYPE.ORGANIZATION}'
		AND el.cs_sort_order between #{sortOrder} -2 and #{sortOrder} 
	INNER JOIN cs_course_apply_attend att
		ON el.cs_active_element_seq = att.cs_active_element_seq
		AND app.cs_course_apply_seq = att.cs_course_apply_seq
		AND att.cs_onoff_cd = '${CD.ONOFF_TYPE.OFF}'
	WHERE app.cs_delete_yn = 'N'
		AND app.cs_apply_status_cd = '${CD.APPLY_STATUS.002}'
		AND app.cs_course_active_seq = #{courseActiveSeq}
	ORDER BY el.cs_sort_order, att.cs_lesson_seq
	</select>	

	 <!-- 주차별 오프라인 출석여부등록 카운트 -->
     <resultMap id="getListByOfflineApplyCountMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="element.activeElementSeq"   		property="element.activeElementSeq"/>
   	 	<result column="element.sortOrder"   				property="element.sortOrder"/>
   	 	<result column="attend.offlineAttendCnt"   			property="applyAttend.offlineAttendCnt"/>
   	 	<result column="element.offlineLessonCount"   		property="element.offlineLessonCount"/>
	</resultMap>
	<select id="getListByOfflineApplyCount" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseApplyAttendVO" resultMap="getListByOfflineApplyCountMap">
	/* UIUnivCourseApplyAttend.getListByOfflineApplyCount */
	SELECT
		el.cs_active_element_seq			AS "element.activeElementSeq"
		,el.cs_sort_order					AS "element.sortOrder"
		,count(att.cs_active_element_seq)	AS "attend.offlineAttendCnt"
		,el.cs_offline_lesson_count			AS "element.offlineLessonCount"
	FROM cs_course_apply app
	INNER JOIN cs_course_active_element el
		ON  el.cs_course_active_seq = app.cs_course_active_seq
		AND el.cs_reference_type_cd = '${CD.COURSE_ELEMENT_TYPE.ORGANIZATION}'
	LEFT OUTER JOIN cs_course_apply_attend att
		ON el.cs_active_element_seq = att.cs_active_element_seq
		AND app.cs_course_apply_seq = att.cs_course_apply_seq
		AND att.cs_onoff_cd = '${CD.ONOFF_TYPE.OFF}'
	WHERE app.cs_delete_yn = 'N'
		AND app.cs_apply_status_cd = '${CD.APPLY_STATUS.002}'
		AND app.cs_course_active_seq = #{courseActiveSeq}
    GROUP BY el.cs_active_element_seq, el.cs_sort_order, el.cs_offline_lesson_count
    </select>

	<!-- 오프라인 출석점수 리스트 -->
	<resultMap id="getListByOfflineApplyAttendScoreMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="attend.courseActiveSeq"	        		property="applyAttend.courseActiveSeq"/>
   	 	<result column="attend.courseApplySeq"          		property="applyAttend.courseApplySeq"/>
   	 	<result column="attend.attendTypeAttendCnt"     		property="applyAttend.attendTypeAttendCnt"/>
   	 	<result column="attend.attendTypeAbsenceCnt"    		property="applyAttend.attendTypeAbsenceCnt"/>
   	 	<result column="attend.attendTypePerceptionCnt" 		property="applyAttend.attendTypePerceptionCnt"/>
   	 	<result column="attend.attendTypeExcuseCnt"       		property="applyAttend.attendTypeExcuseCnt"/>
   	 	<result column="member.memberSeq"               		property="member.memberSeq"/>
   	 	<result column="member.memberName"              		property="member.memberName"/>
   	 	<result column="member.memberId"                		property="member.memberId"/>
   	 	<result column="member.phoneMobile"             		property="member.phoneMobile"/>
   	 	<result column="member.categoryOrganizationSeq" 		property="member.categoryOrganizationSeq"/>
   	 	<result column="cate.categoryName"              		property="cate.categoryName"/>
   	 	<result column="attend.attendScore"              		property="applyAttend.attendScore"/>
	</resultMap>
	<select id="getListByOfflineApplyAttendScore" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAttendCondition" resultMap="getListByOfflineApplyAttendScoreMap">
	/* UIUnivCourseApplyAttend.getListByOfflineApplyAttendScore */
	SELECT 
		   el.cs_course_active_seq 					AS "attend.courseActiveSeq" , 
	       el.cs_course_apply_seq 					AS "attend.courseApplySeq" , 
	       el.attend_type_attend_cnt 				AS "attend.attendTypeAttendCnt" , 
	       el.attend_type_absence_cnt 				AS "attend.attendTypeAbsenceCnt" , 
	       el.attend_type_perception_cnt 			AS "attend.attendTypePerceptionCnt" , 
	       el.attend_type_excuse_cnt 				AS "attend.attendTypeExcuseCnt" , 
	       el.cs_member_seq 						AS "member.memberSeq" , 
	       el.cs_member_name 						AS "member.memberName" , 
	       el.cs_member_id 							AS "member.memberId" ,
		   el.cs_phone_mobile 						AS "member.phoneMobile",
	       el.cs_category_organization_seq 			AS "member.categoryOrganizationSeq" , 
	       el.cs_category_name 						AS "cate.categoryName", 
		   CASE
			WHEN <![CDATA[ (el.attend_type_absence_cnt + ISNULL((el.attend_type_perception_cnt / eval003.cs_count),0)) >= eval002.cs_permission_count THEN
							   (100 -
									(
										(el.attend_type_absence_cnt + ISNULL((el.attend_type_perception_cnt / eval003.cs_count),0)) * eval002.CS_MINUS_SCORE
									)
									-
									(
										ISNULL(((el.attend_type_absence_cnt * eval003.cs_count) + el.attend_type_perception_cnt) % eval003.cs_count, 0) * eval003.CS_MINUS_SCORE
									)
								)
								+ (eval002.CS_PERMISSION_COUNT * eval002.CS_MINUS_SCORE) ]]>
						ELSE 100
					END 								AS "attend.attendScore"					
	  FROM 
	       (SELECT att.cs_member_name, 
	              att.cs_member_id , 
	              att.cs_category_organization_seq , 
	              att.cs_category_name ,
				  att.cs_phone_mobile ,
	              att.cs_course_active_seq, 
	              att.cs_course_apply_seq, 
	              att.cs_member_seq, 
	              SUM(attend_type_attend_cnt) AS attend_type_attend_cnt, 
	              SUM(attend_type_absence_cnt) AS attend_type_absence_cnt, 
	              SUM(attend_type_perception_cnt) AS attend_type_perception_cnt, 
	              SUM(attend_type_excuse_cnt) AS attend_type_excuse_cnt 
	         FROM 
	              (SELECT app.cs_course_active_seq , 
	                     app.cs_course_apply_seq , 
	                     app.cs_member_seq , 
	                     app.cs_member_name, 
	                     app.cs_member_id,
						 app.cs_phone_mobile, 
	                     app.cs_category_organization_seq , 
	                     app.cs_category_name, 
	                     attend.cs_course_apply_attend_seq, 
	                     attend.cs_active_element_seq, 
	                     attend.cs_lesson_seq, 
	                     attend.cs_attend_type_cd, 
	                     attend.cs_onoff_cd, 
	                     CASE 
	                         WHEN attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.001}' 
	                         THEN 1 
	                         ELSE 0 
	                     END attend_type_attend_cnt, 
	                     CASE 
	                         WHEN attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.002}' 
	                         THEN 1 
	                         ELSE 0 
	                     END attend_type_absence_cnt, 
	                     CASE 
	                         WHEN attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.003}' 
	                         THEN 1 
	                         ELSE 0 
	                     END attend_type_perception_cnt, 
	                     CASE 
	                         WHEN attend.cs_attend_type_cd = '${CD.ATTEND_TYPE.005}' 
	                         THEN 1 
	                         ELSE 0 
	                     END attend_type_excuse_cnt 
	                FROM 
	                     (SELECT app.cs_course_active_seq , 
	                            app.cs_course_apply_seq , 
	                            app.cs_member_seq , 
	                            mem.cs_member_name , 
	                            mem.cs_member_id , 
								mem.cs_phone_mobile,
	                            mem.cs_category_organization_seq , 
	                            cate.cs_category_name 
	                       FROM cs_course_apply app 
	                        INNER JOIN cs_member mem 
	                            ON app.cs_member_seq = mem.cs_member_seq 
	                            AND app.cs_delete_yn = 'N' 
	                            AND app.cs_apply_status_cd = '${CD.APPLY_STATUS.002}' 
	                            AND app.cs_course_active_seq = #{srchCourseActiveSeq}
	                        INNER JOIN cs_category cate 
	                            ON mem.cs_category_organization_seq = cate.cs_category_seq 
	                      WHERE app.cs_course_active_seq = #{srchCourseActiveSeq}
	                      <if test="srchCourseApplySeq != null"> 
	                      		and app.cs_course_apply_seq = #{srchCourseApplySeq}
	                      </if>
	                     ) app 
	                 LEFT OUTER JOIN 
	                     (SELECT attend.cs_course_apply_attend_seq, 
	                            attend.cs_course_apply_seq, 
	                            attend.cs_lesson_seq, 
	                            attend.cs_active_element_seq, 
	                            attend.cs_attend_type_cd, 
	                            attend.cs_onoff_cd 
	                       FROM cs_course_apply_attend attend 
	                      WHERE attend.cs_onoff_cd = '${CD.ONOFF_TYPE.OFF}' 
	                            AND attend.cs_delete_yn = 'N' 
	                            AND attend.cs_course_active_seq = #{srchCourseActiveSeq}
	                     ) attend 
	                     ON app.cs_course_apply_seq = attend.cs_course_apply_seq 
	              ) att 
	        GROUP BY att.cs_member_name , 
	              att.cs_member_id , 
	              att.cs_category_organization_seq , 
	              att.cs_category_name ,
				  att.cs_phone_mobile, 
	              att.cs_course_active_seq, 
	              att.cs_course_apply_seq, 
	              att.cs_member_seq 
	       ) el 
	   LEFT OUTER JOIN 
	       (SELECT eval.cs_course_active_seq, 
	              eval.cs_minus_score, 
	              eval.cs_permission_count 
	         FROM cs_course_attend_evaluate eval 
	        WHERE eval.cs_onoff_cd = '${CD.ONOFF_TYPE.OFF}' 
	              AND eval.cs_delete_yn = 'N' 
	              AND eval.cs_attend_type_cd = '${CD.ATTEND_TYPE.002}' 
	              AND eval.cs_course_active_seq = #{srchCourseActiveSeq}
	       ) eval002 
	       ON eval002.cs_course_active_seq = el.cs_course_active_seq 
	   LEFT OUTER JOIN 
	       (SELECT eval.cs_course_active_seq, 
	              eval.cs_minus_score,
	              CASE
					  	WHEN eval.cs_count = 0 THEN NULL
						ELSE eval.cs_count
				  END AS cs_count
	         FROM cs_course_attend_evaluate eval 
	        WHERE eval.cs_onoff_cd = '${CD.ONOFF_TYPE.OFF}' 
	              AND eval.cs_delete_yn = 'N' 
	              AND eval.cs_attend_type_cd = '${CD.ATTEND_TYPE.003}' 
	              AND eval.cs_course_active_seq = #{srchCourseActiveSeq} 
	       ) eval003 
	       ON eval003.cs_course_active_seq = el.cs_course_active_seq 
	 WHERE el.cs_course_active_seq = #{srchCourseActiveSeq}
 		<choose>
	        	<when test='orderby == 1'> ORDER BY "member.memberName" ASC</when>
	            <when test='orderby == -1'>ORDER BY "member.memberName" DESC</when>
	            <when test='orderby == 2'> ORDER BY "member.memberId" ASC</when>
	            <when test='orderby == -2'>ORDER BY "member.memberId" DESC</when>
	            <when test='orderby == 3'> ORDER BY "cate.categoryName" ASC</when>
	            <when test='orderby == -3'>ORDER BY "cate.categoryName" DESC</when>
	            <otherwise>ORDER BY "member.memberName" ASC</otherwise>
		</choose>
	</select>
	
	<!-- 오프라인 수업 출석 현황상세 -->
	<resultMap id="getDetailByOffApplyAttend" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="attend.activeElementSeq"	    property="applyAttend.activeElementSeq"/>
   	 	<result column="attend.lessonSeq"          		property="applyAttend.lessonSeq"/>
   	 	<result column="attend.attendTypeCd"     		property="applyAttend.attendTypeCd"/>
	</resultMap>
	<select id="getDetailByOffApplyAttend" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseApplyAttendVO" resultMap="getDetailByOffApplyAttend">
	/* UIUnivCourseApplyAttend.getDetailByOffApplyAttend */
	SELECT
		cs_active_element_seq		AS "attend.activeElementSeq"
		,cs_lesson_seq				AS "attend.lessonSeq"
		,cs_attend_type_cd			AS "attend.attendTypeCd"
	FROM cs_course_apply_attend
	WHERE cs_course_apply_seq = #{courseApplySeq}
		AND cs_onoff_cd = '${CD.ONOFF_TYPE.OFF}'
		AND cs_course_active_seq = #{courseActiveSeq}
		AND cs_delete_yn = 'N'
	</select>
	
	<!-- 오프라인 수업 출석 현황상세 총 합 -->
	<resultMap id="getDetailTotalByOffApplyAttend" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAttendRS">
   	 	<result column="attend.courseApplySeq"	    	property="applyAttend.courseApplySeq"/>
   	 	<result column="attend.attendTypeAttendCnt"	    property="applyAttend.attendTypeAttendCnt"/>
   	 	<result column="attend.attendTypeAbsenceCnt"	property="applyAttend.attendTypeAbsenceCnt"/>
   	 	<result column="attend.attendTypePerceptionCnt"	property="applyAttend.attendTypePerceptionCnt"/>
   	 	<result column="attend.attendTypeExcuseCnt"	    property="applyAttend.attendTypeExcuseCnt"/>
	</resultMap>
	<select id="getDetailTotalByOffApplyAttend" parameterType="Long" resultMap="getDetailTotalByOffApplyAttend">
	/* UIUnivCourseApplyAttend.getDetailTotalByOffApplyAttend */
	SELECT
		 att.cs_course_apply_seq  			AS "attend.courseApplySeq"
		,SUM(att.attendTypeAttendCnt) 		AS "attend.attendTypeAttendCnt"
		,SUM(att.attendTypeAbsenceCnt) 		AS "attend.attendTypeAbsenceCnt"
		,SUM(att.attendTypePerceptionCnt) 	AS "attend.attendTypePerceptionCnt"
		,SUM(att.attendTypeExcuseCnt) 		AS "attend.attendTypeExcuseCnt"
	FROM
	(
		SELECT
				 cs_course_apply_seq
				,cs_active_element_seq
				,cs_lesson_seq
				,cs_attend_type_cd
				,CASE
					WHEN cs_attend_type_cd = '${CD.ATTEND_TYPE.001}' THEN 1
					ELSE 0
				END AS attendTypeAttendCnt
				,CASE
					WHEN cs_attend_type_cd = '${CD.ATTEND_TYPE.002}' THEN 1
					ELSE 0
				END AS attendTypeAbsenceCnt
				,CASE
					WHEN cs_attend_type_cd = '${CD.ATTEND_TYPE.003}' THEN 1
					ELSE 0
				END AS attendTypePerceptionCnt
				,CASE
					WHEN cs_attend_type_cd = '${CD.ATTEND_TYPE.005}' THEN 1
					ELSE 0
				END AS attendTypeExcuseCnt
			FROM cs_course_apply_attend
			WHERE cs_course_apply_seq = #{courseApplySeq}
				AND cs_onoff_cd = '${CD.ONOFF_TYPE.OFF}'
				AND cs_delete_yn = 'N'
	) att
	GROUP BY att.cs_course_apply_seq
	</select>
	
	<select id="countSumOfflineLessonCount" parameterType="Long" resultType="int">
	/* UIUnivCourseApplyAttend.countSumOfflineLessonCount */
	SELECT ISNULL(SUM(element.cs_offline_lesson_count),0)
	FROM (
	SELECT
		cs_offline_lesson_count
	FROM
		cs_course_active_element
	WHERE
			cs_delete_yn = 'N'
		AND cs_course_active_seq = #{courseActiveSeq}
		AND cs_reference_type_cd = '${CD.COURSE_ELEMENT_TYPE.ORGANIZATION}'
	GROUP BY cs_course_active_seq, cs_offline_lesson_count
	) element
	</select>
</mapper>