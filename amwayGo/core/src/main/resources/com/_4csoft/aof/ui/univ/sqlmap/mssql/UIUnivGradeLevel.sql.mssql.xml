<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.univ.mapper.UnivGradeLevelMapper">

	<resultMap id="listResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivGradeLevelRS">
        <result column="gl.yearTerm"			property="univGradeLevel.yearTerm"			/>
        <result column="gl.gradeLevelCd"		property="univGradeLevel.gradeLevelCd"		/>
        <result column="gl.ratingScore"			property="univGradeLevel.ratingScore"		/>
        <result column="gl.evalAbsoluteScore"	property="univGradeLevel.evalAbsoluteScore"	/>
        <result column="gl.evelRelativeScore"	property="univGradeLevel.evelRelativeScore" />
        <result column="gl.deleteYn"			property="univGradeLevel.deleteYn"			/>
        <result column="gl.regMemberSeq"		property="univGradeLevel.regMemberSeq"		/>
        <result column="gl.updMemberSeq"		property="univGradeLevel.updMemberSeq"		/>
        <result column="gl.regDtime"			property="univGradeLevel.regDtime"			/>
        <result column="gl.updDtime"			property="univGradeLevel.updDtime"			/>
        <result column="gl.regIp"				property="univGradeLevel.regIp"				/>
        <result column="gl.updIp"				property="univGradeLevel.updIp"				/>
    </resultMap>
    <select id="getList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivGradeLevelCondition" resultMap="listResultMap">
/* UnivGradeLevelMapper.getList */
        <if test='currentPage != 0'>
SELECT Z.* FROM (SELECT Row_Number() OVER (
        ORDER BY "gl.gradeLevelCd"
) AS rownumber, * FROM (
        </if>
SELECT gl.cs_yearterm AS "gl.yearTerm",
       gl.cs_grade_level_cd AS "gl.gradeLevelCd",
       gl.cs_rating_score AS "gl.ratingScore",
       gl.cs_eval_absolute_score AS "gl.evalAbsoluteScore",
       gl.cs_eval_relative_score AS "gl.evelRelativeScore",
       gl.cs_delete_yn AS "gl.deleteYn",
       gl.cs_reg_member_seq AS "gl.regMemberSeq",
       gl.cs_upd_member_seq AS "gl.updMemberSeq",
       gl.cs_reg_dtime AS "gl.regDtime",
       gl.cs_upd_dtime AS "gl.updDtime",
       gl.cs_reg_ip AS "gl.regIp",
       gl.cs_upd_ip  AS "gl.updIp"
  FROM cs_univ_grade_level gl 
WHERE
	gl.cs_delete_yn = 'N'
	<if test='srchYearTerm != null and !srchYearTerm.equals("")'>
	AND gl.cs_yearterm = #{srchYearTerm}
	</if>
        <if test='currentPage != 0'>
) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo} ORDER BY Z.rownumber
        </if>   
    </select>
   
   	<select id="countList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivGradeLevelCondition" resultType="int">
/* UnivGradeLevelMapper.countList */
SELECT COUNT(*)
  FROM cs_univ_grade_level gl 
WHERE
	gl.cs_delete_yn = 'N'
	<if test='srchYearTerm != null and !srchYearTerm.equals("")'>
	AND gl.cs_yearterm = #{srchYearTerm}
	</if>    
    </select>
    
    <insert id="insert" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivGradeLevelVO">
/* UnivGradeLevelMapper.insert */
INSERT INTO cs_univ_grade_level 
       ( 
           cs_yearterm,
           cs_grade_level_cd,
           cs_rating_score,
           cs_eval_absolute_score,
           cs_eval_relative_score,
           cs_reg_member_seq,
           cs_upd_member_seq,
           cs_reg_dtime,
           cs_upd_dtime,
           cs_reg_ip,
           cs_upd_ip 
       ) 
       VALUES 
       ( 
           #{yearTerm, jdbcType=VARCHAR}, 
           #{gradeLevelCd, jdbcType=VARCHAR}, 
           #{ratingScore, jdbcType=NUMERIC}, 
           #{evalAbsoluteScore, jdbcType=NUMERIC}, 
           #{evelRelativeScore, jdbcType=NUMERIC}, 
           #{regMemberSeq, jdbcType=NUMERIC},
           #{updMemberSeq, jdbcType=NUMERIC},
           dbo.FN_NOW_TO_CHAR(),
           dbo.FN_NOW_TO_CHAR(),
           #{regIp, jdbcType=VARCHAR},
           #{updIp, jdbcType=VARCHAR} 
       )
    </insert>
    
    <update id="update" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivGradeLevelVO">
/* UnivGradeLevelMapper.update */
UPDATE
	cs_univ_grade_level
SET
	cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} ,
    cs_upd_dtime = dbo.FN_NOW_TO_CHAR() ,
	cs_upd_ip = #{updIp, jdbcType=VARCHAR} ,
	cs_rating_score = #{ratingScore, jdbcType=NUMERIC} ,
    cs_eval_absolute_score = #{evalAbsoluteScore, jdbcType=NUMERIC} ,
    cs_eval_relative_score = #{evelRelativeScore, jdbcType=NUMERIC}
WHERE
	cs_delete_yn = 'N'
	AND cs_yearterm = #{yearTerm}
    AND cs_grade_level_cd = #{gradeLevelCd} 
    </update>
    
    <select id="countGradeLevelByYearTerm" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivGradeLevelVO" resultType="com._4csoft.aof.ui.univ.vo.UIUnivGradeLevelVO">
/* UnivGradeLevelMapper.update */
SELECT
	SUM(
		CASE
			WHEN CS_GRADE_LEVEL_CD = #{gradeLevelCd} THEN 1
			ELSE 0
		END
	) AS "gradeLevelCount",
	SUM(
		CASE
			WHEN CS_RATING_SCORE = #{ratingScore} THEN 1
			ELSE 0
		END
	) AS "ratingScoreCount",
	SUM(
		CASE
			WHEN CS_EVAL_ABSOLUTE_SCORE = #{evalAbsoluteScore} THEN 1
			ELSE 0
		END
	) as "evalAbsoluteScoreCount",
	SUM(
		CASE
			WHEN CS_EVAL_RELATIVE_SCORE = #{evelRelativeScore} THEN 1
			ELSE 0
		END
	) AS "evalRelativeScoreCount"
FROM
	cs_univ_grade_level
WHERE
	cs_yearterm = #{yearTerm}
	AND cs_delete_yn = 'N'
    </select>
    
    <insert id="insertCopy" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivGradeLevelVO">
/* UnivGradeLevelMapper.insertCopy */
INSERT INTO cs_univ_grade_level 
       ( 
           cs_yearterm,
           cs_grade_level_cd,
           cs_rating_score,
           cs_eval_absolute_score,
           cs_eval_relative_score,
           cs_reg_member_seq,
           cs_upd_member_seq,
           cs_reg_dtime,
           cs_upd_dtime,
           cs_reg_ip,
           cs_upd_ip 
       ) 
       SELECT
       	   #{yearTerm, jdbcType=VARCHAR}, 
	       cs_grade_level_cd,
	       cs_rating_score,
	       cs_eval_absolute_score,
	       cs_eval_relative_score,
	       #{regMemberSeq, jdbcType=NUMERIC},
           #{updMemberSeq, jdbcType=NUMERIC},
           dbo.FN_NOW_TO_CHAR(),
           dbo.FN_NOW_TO_CHAR(),
           #{regIp, jdbcType=VARCHAR},
           #{updIp, jdbcType=VARCHAR} 
	  FROM cs_univ_grade_level
	WHERE
		cs_delete_yn = 'N'
		AND cs_yearterm = #{beforeYearTerm}
        
    </insert>
    
    <delete id="dropByTargetYearTerm" parameterType="String">
    	DELETE FROM cs_univ_grade_level WHERE cs_delete_yn = 'N' AND cs_yearterm = #{yearTerm}
    </delete>
</mapper>