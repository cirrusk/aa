<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.infra.mapper.BatchHistoryMapper">

	<resultMap id="listResultMap" type="com._4csoft.aof.ui.infra.vo.resultset.UIBatchHistoryRS">
		<result column="history.batchHistorySeq" 		property="history.batchHistorySeq" />
		<result column="history.batchSeq"        		property="history.batchSeq"        />
		<result column="history.batchStartDtime" 		property="history.batchStartDtime" />
		<result column="history.batchEndDtime"   		property="history.batchEndDtime"   />
		<result column="history.batchYn"         		property="history.batchYn"         />
		<result column="history.batchLog"        		property="history.batchLog"        />
		<result column="history.batchRunningTime"		property="history.batchRunningTime"/>
		<result column="history.memberSeq"       		property="history.memberSeq"       />
		<result column="history.regMemberSeq"    		property="history.regMemberSeq"    />
		<result column="history.updMemberSeq"    		property="history.updMemberSeq"    />
		<result column="history.regDtime"        		property="history.regDtime"        />
		<result column="history.updDtime"        		property="history.updDtime"        />
	</resultMap>         
	
	<select id="getList" parameterType="com._4csoft.aof.ui.infra.vo.condition.UIBatchHistoryCondition" resultMap="listResultMap">
		/* UIBatchHistoryMapper.getList */
		SELECT Z.* FROM (SELECT Row_Number() OVER (
		   ORDER BY "history.regDtime" DESC
		) AS rownumber, * FROM (
		
		SELECT 
			  history.cs_batch_history_seq 	AS "history.batchHistorySeq"
			, history.cs_batch_seq 			AS "history.batchSeq"
			, history.cs_batch_start_dtime 	AS "history.batchStartDtime"
			, history.cs_batch_end_dtime 	AS "history.batchEndDtime"
			, history.cs_batch_yn 			AS "history.batchYn"
			, history.cs_batch_log 			AS "history.batchLog"
			, history.cs_batch_running_time AS "history.batchRunningTime"
			, history.cs_member_seq 		AS "history.memberSeq"
			, history.cs_reg_member_seq 	AS "history.regMemberSeq"
			, history.cs_upd_member_seq 	AS "history.updMemberSeq"
			, history.cs_reg_dtime 			AS "history.regDtime"
			, history.cs_upd_dtime 			AS "history.updDtime"
		FROM cs_batch_history history
		WHERE history.cs_batch_seq = #{srchBatchSeq}
		AND history.cs_delete_yn = 'N'
		
		<if test='srchStartDtime != null'>
			<if test='srchEndDtime != null'>
		AND history.cs_batch_start_dtime <![CDATA[>=]]> #{srchStartDtime}
		AND history.cs_batch_start_dtime <![CDATA[<=]]> #{srchEndDtime}
			</if>
		</if>
		
		) Y ) Z WHERE Z.rownumber BETWEEN 1 AND 30 ORDER BY Z.rownumber
	</select>
	
    <insert id="insert" parameterType="com._4csoft.aof.ui.infra.vo.UIBatchHistoryVO">
        <selectKey resultType="Long" keyProperty="batchHistorySeq" order="AFTER">
		SELECT @@IDENTITY
        </selectKey>
		/* UIBatchHistoryMapper.insert */
		INSERT INTO cs_batch_history
	       ( 
				  cs_batch_seq
				, cs_batch_start_dtime
				, cs_batch_end_dtime
				, cs_batch_yn
				, cs_batch_log
				, cs_batch_running_time
				, cs_member_seq
				, cs_reg_member_seq
				, cs_upd_member_seq
				, cs_delete_yn
				, cs_reg_dtime
				, cs_upd_dtime
				, cs_reg_ip
				, cs_upd_ip
	       ) 
	       VALUES 
	       ( 
	       		  #{batchSeq, jdbcType=NUMERIC}
				, #{batchStartDtime, jdbcType=VARCHAR}
				, #{batchEndDtime, jdbcType=VARCHAR}
				, #{batchYn, jdbcType=VARCHAR}
				, #{batchLog, jdbcType=VARCHAR}
				, #{batchRunningTime, jdbcType=NUMERIC}
				, #{memberSeq, jdbcType=NUMERIC}
				, #{regMemberSeq, jdbcType=NUMERIC}
				, #{updMemberSeq, jdbcType=NUMERIC}
				, 'N'
				, dbo.FN_NOW_TO_CHAR()
				, dbo.FN_NOW_TO_CHAR()
				, #{regIp, jdbcType=VARCHAR}
				, #{updIp, jdbcType=VARCHAR}
	       )
    </insert>
    
    <update id="update" parameterType="com._4csoft.aof.ui.infra.vo.UIBatchHistoryVO">
		/* UIBatchHistoryMapper.update */
		UPDATE cs_batch_history
		   SET 
				cs_upd_dtime = dbo.FN_NOW_TO_CHAR()
				, cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC}
   				, cs_upd_ip = #{updIp, jdbcType=VARCHAR}
   				, cs_batch_end_dtime = #{batchEndDtime, jdbcType=VARCHAR}
	     		, cs_batch_yn = #{batchYn, jdbcType=VARCHAR}
				, cs_batch_log = #{batchLog, jdbcType=VARCHAR}
				, cs_batch_running_time = #{batchRunningTime, jdbcType=NUMERIC}
		 WHERE cs_batch_history_seq = #{batchHistorySeq}
		   AND cs_delete_yn = 'N'  
    </update>    
    

</mapper>
