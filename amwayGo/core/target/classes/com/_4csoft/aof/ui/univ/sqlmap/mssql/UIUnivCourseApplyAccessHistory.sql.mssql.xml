<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.univ.mapper.UnivCourseApplyAccessHistoryMapper">

    <insert id="insert" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseApplyAccessHistoryVO">
/* UIUnivCourseApplyAccessHistoryMapper.insert */
INSERT INTO cs_course_apply_access_history 
       ( 
        cs_member_seq,
        cs_course_active_seq,
        cs_course_apply_seq,
        cs_session_id,
        cs_site,
        cs_user_agent,
        cs_rolegroup_seq,
        cs_device,
        cs_classroom_info,
        cs_delete_yn,
        cs_reg_member_seq,
        cs_upd_member_seq,
        cs_reg_dtime,
        cs_upd_dtime,
        cs_reg_ip,
        cs_upd_ip
       ) 
SELECT #{memberSeq, jdbcType=NUMERIC} ,
       #{courseActiveSeq, jdbcType=NUMERIC} ,
       #{courseApplySeq, jdbcType=NUMERIC} ,
       #{sessionId, jdbcType=VARCHAR} ,
       #{site, jdbcType=VARCHAR} ,
       #{userAgent, jdbcType=VARCHAR} ,
       #{rolegroupSeq, jdbcType=NUMERIC} ,
       #{device, jdbcType=VARCHAR} ,
       (SELECT '[' + ISNULL(cs_yearterm,cs_year) + ']' + cs_course_active_title + #{separator} +
                CONVERT(VARCHAR,ISNULL(cs_division,'')) + #{separator} +
                ISNULL(cs_member_name,'') +#{separator} +
                ISNULL(cs_organization_string,'') + #{separator} +
                ISNULL(cs_study_start_date,'') + #{separator} +
                ISNULL(cs_study_end_date,'') + #{separator} +
                ISNULL(CONVERT(VARCHAR,cs_member_count),'') + #{separator}
          FROM (SELECT ca.cs_yearterm,
                       cs_year, 
                       ca.cs_course_active_title, 
                       ca.cs_division, 
                       ca.cs_organization_string, 
                       ca.cs_study_start_date, 
                       ca.cs_study_end_date, 
                       cas.cs_member_count, 
                       cal.cs_member_seq,
                       member.cs_member_name
                  FROM cs_course_active ca
				  INNER JOIN cs_course_active_summary cas
					   ON ca.cs_course_active_seq = cas.cs_course_active_seq
				  LEFT JOIN cs_course_active_lecturer cal 
				  	   ON ca.cs_course_active_seq = cal.cs_course_active_seq 
					   AND cal.cs_delete_yn = 'N' 
                   	   AND cal.cs_prof_president_yn = 'Y' 
                  LEFT OUTER JOIN cs_member member
                  	   ON member.cs_member_seq = cal.cs_member_seq
                 WHERE ca.cs_course_active_seq = #{courseActiveSeq}
                   AND ca.cs_delete_yn = 'N' 
               ) a
       ),
       'N',
       #{regMemberSeq, jdbcType=NUMERIC} ,
       #{updMemberSeq, jdbcType=NUMERIC} ,
       dbo.FN_NOW_TO_CHAR() ,
       dbo.FN_NOW_TO_CHAR() ,
       #{regIp, jdbcType=VARCHAR} ,
       #{updIp, jdbcType=VARCHAR}
    </insert>

    <resultMap id="listForStaticsResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseApplyAccessHistoryRS">
       <result column="accessHistory.courseActiveSeq"      property="accessHistory.courseActiveSeq"    />
       <result column="accessHistory.totalAccessCount"     property="accessHistory.totalAccessCount"   />
       <result column="courseActive.courseActiveTitle"     property="courseActive.courseActiveTitle"   />
       <result column="courseActive.completeDivisionCd"    property="courseActive.completeDivisionCd"  />
       <result column="courseActive.courseTypeCd"          property="courseActive.courseTypeCd"        />
       <result column="courseActive.studyStartDate"        property="courseActive.studyStartDate"      />
       <result column="courseActive.studyEndDate"          property="courseActive.studyEndDate"        />
       <result column="cate.categoryTypeCd"                property="cate.categoryTypeCd"              />
       <result column="cate.categoryString"                property="cate.categoryString"              />
       <result column="cate.categoryName"                  property="cate.categoryName"                />
       <result column="accessHistory.totalApplyCount"	   property="accessHistory.totalApplyCount"	   />
       <result column="accessHistory.peofPresidentName"	   property="accessHistory.peofPresidentName"  />
    </resultMap>
    
    <select id="getListForStatistics" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAccessHistoryCondition" resultMap="listForStaticsResultMap">
/* UIUnivCourseApplyAccessHistoryMapper.getListForStatics */
SELECT A.*,
(
SELECT mem.cs_member_name
  FROM cs_course_active_lecturer lec
 INNER JOIN cs_member mem
    ON lec.cs_member_seq = mem.cs_member_seq
   AND mem.cs_delete_yn = 'N' 
 WHERE lec.cs_delete_yn = 'N'
   AND lec.cs_use_yn = 'Y'
   AND lec.cs_prof_president_yn = 'Y'
   AND lec.cs_course_active_seq = "accessHistory.courseActiveSeq"
) AS "accessHistory.peofPresidentName"
FROM
(
<if test='currentPage != 0'>
SELECT Z.* FROM (SELECT Row_Number() OVER (
        <choose>
            <when test='orderby == 1'>ORDER BY "courseActive.courseActiveTitle" ASC</when>
            <when test='orderby == -1'>ORDER BY "courseActive.courseActiveTitle" DESC</when>
            <when test='orderby == 2'>ORDER BY "cate.categoryName" ASC</when>
            <when test='orderby == -2'>ORDER BY "cate.categoryName" DESC</when>
            <when test='orderby == 3'>ORDER BY "accessHistory.totalApplyCount" ASC</when>
            <when test='orderby == -3'>ORDER BY "accessHistory.totalApplyCount" DESC</when>
            <otherwise>ORDER BY "accessHistory.totalApplyCount" DESC</otherwise>
        </choose>
) AS rownumber, * FROM (
        </if>
SELECT 
		history.cs_course_active_seq 	AS "accessHistory.courseActiveSeq"
		,history.totalAccessCount 		AS "accessHistory.totalAccessCount"
		,active.cs_course_active_title 	AS "courseActive.courseActiveTitle"
		,active.cs_complete_division_cd AS "courseActive.completeDivisionCd"
		,active.cs_course_type_cd 		AS "courseActive.courseTypeCd"
		,active.cs_study_start_date 	AS "courseActive.studyStartDate"
		,active.cs_study_end_date 		AS "courseActive.studyEndDate"
		,category.cs_category_type_cd 	AS "cate.categoryTypeCd"
		,category.cs_category_string 	AS "cate.categoryString"
		,category.cs_category_name 		AS "cate.categoryName"
		,summary.cs_member_count 		AS "accessHistory.totalApplyCount"	   
  FROM
	(
	SELECT 
			cs_course_active_seq, 
			COUNT(cs_course_apply_seq) AS totalAccessCount
	  FROM cs_course_apply_access_history
	 WHERE cs_delete_yn = 'N'
	   AND cs_course_apply_seq != -1
	<if test='srchStartRegDate != null and !srchStartRegDate.equals("")'>	 
	   AND cs_reg_dtime <![CDATA[>=]]> #{srchStartRegDate}
	</if>
	<if test='srchEndRegDate != null and !srchEndRegDate.equals("")'>	   
	   AND cs_reg_dtime <![CDATA[<=]]> #{srchEndRegDate}
	</if>   
	 GROUP BY cs_course_active_seq
	)  history 
 INNER JOIN cs_course_active active
    ON history.cs_course_active_seq =  active.cs_course_active_seq
   AND active.cs_delete_yn = 'N'
	<if test='srchCategoryTypeCd != null and srchCategoryTypeCd.equals("${CD.CATEGORY_TYPE.DEGREE}")'>
		<if test='srchYearTerm != null and !srchYearTerm.equals("")'>
   AND active.cs_yearterm = #{srchYearTerm}
		</if>
	</if>
	<if test='srchYear != null and !srchYear.equals("")'>
   AND active.cs_year = #{srchYear}
	</if>	
	<if test='srchCourseTitle != null and !srchCourseTitle.equals("")'>
   AND active.cs_course_active_title LIKE '%' + #{srchCourseTitleDB} + '%'
	</if>
 INNER JOIN cs_course_active_summary summary
    ON summary.cs_course_active_seq = active.cs_course_active_seq
 INNER JOIN cs_category category
    ON category.cs_delete_yn = 'N'
		<if test='srchCategoryTypeCd != null and !srchCategoryTypeCd.equals("")'>
   AND category.cs_category_type_cd = #{srchCategoryTypeCd}
		</if>
   AND category.cs_category_seq = active.cs_category_organization_seq        
        <if test='currentPage != 0'>
) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo} 
        </if>
) A  ORDER BY rownumber        
    </select>
    
    <select id="countListForStatistics" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivCourseApplyAccessHistoryCondition" resultType="int">
/* UIUnivCourseApplyAccessHistoryMapper.countListForStatics */
SELECT COUNT(*)	   
  FROM
	(
	SELECT 
			cs_course_active_seq, 
			COUNT(cs_course_apply_seq) AS totalAccessCount
	  FROM cs_course_apply_access_history
	 WHERE cs_delete_yn = 'N'
	   AND cs_course_apply_seq != -1
	<if test='srchStartRegDate != null and !srchStartRegDate.equals("")'>	 
	   AND cs_reg_dtime <![CDATA[>=]]> #{srchStartRegDate}
	</if>
	<if test='srchEndRegDate != null and !srchEndRegDate.equals("")'>	   
	   AND cs_reg_dtime <![CDATA[<=]]> #{srchEndRegDate}
	</if>
	 GROUP BY cs_course_active_seq
	)  history 
 INNER JOIN cs_course_active active
    ON history.cs_course_active_seq =  active.cs_course_active_seq
   AND active.cs_delete_yn = 'N'
	<if test='srchCategoryTypeCd != null and srchCategoryTypeCd.equals("${CD.CATEGORY_TYPE.DEGREE}")'>
		<if test='srchYearTerm != null and !srchYearTerm.equals("")'>
   AND active.cs_yearterm = #{srchYearTerm}
		</if>
	</if>
	<if test='srchYear != null and !srchYear.equals("")'>
   AND active.cs_year = #{srchYear}
	</if>	
	<if test='srchCourseTitle != null and !srchCourseTitle.equals("")'>
   AND active.cs_course_active_title LIKE '%' + #{srchCourseTitleDB} + '%'
	</if>
 INNER JOIN cs_course_active_summary summary
    ON summary.cs_course_active_seq = active.cs_course_active_seq
 INNER JOIN cs_category category
    ON category.cs_delete_yn = 'N'
		<if test='srchCategoryTypeCd != null and !srchCategoryTypeCd.equals("")'>
   AND category.cs_category_type_cd = #{srchCategoryTypeCd}
		</if>
   AND category.cs_category_seq = active.cs_category_organization_seq    
    </select>
</mapper>