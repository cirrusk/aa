<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.univ.mapper.UnivMigEmsDbMapper">

	<insert id="insert" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivMigEmsDbVO">
		<selectKey resultType="Long" keyProperty="migEmsSeq" order="AFTER">
SELECT @@IDENTITY		
		</selectKey>
/* UnivMigEmsDbMapper.insert */
INSERT INTO cs_mig_emsdb
		(
			cs_start_dtime ,
			cs_end_dtime ,
			cs_mig_info_item ,
			cs_job_time ,
			cs_yearterm ,
			cs_demon_status_yn ,
			cs_batch_schedule_cd ,
			cs_batch_hour ,
			cs_batch_min ,
			cs_reg_member_seq ,
			cs_reg_dtime ,
			cs_upd_member_seq ,
			cs_upd_dtime
		)
		VALUES
		(
			#{startDtime, jdbcType=VARCHAR} ,
			#{endDtime, jdbcType=VARCHAR} ,
			#{migInfoItem, jdbcType=VARCHAR} ,
			#{jobTime, jdbcType=NUMERIC} ,
			#{yearTerm, jdbcType=VARCHAR} ,
			#{demonStatusYn, jdbcType=VARCHAR} ,
			#{batchScheduleCd, jdbcType=VARCHAR} ,
			#{batchHour, jdbcType=NUMERIC} ,
			#{batchMin, jdbcType=NUMERIC} ,
			#{regMemberSeq, jdbcType=NUMERIC} ,
           	dbo.FN_NOW_TO_CHAR() ,
           	#{updMemberSeq, jdbcType=NUMERIC} ,
            dbo.FN_NOW_TO_CHAR()
		)
	</insert>
	
	<update id="update" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivMigEmsDbVO">
/* UnivMigEmsDbMapper.update */
UPDATE cs_mig_emsdb
   SET cs_upd_dtime = dbo.FN_NOW_TO_CHAR()
   	   ,cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC}
   	   <if test='startDtime != null'>
   	   ,cs_start_dtime = #{startDtime, jdbcType=VARCHAR}
   	   </if>
   	   <if test='endDtime != null'>
   	   ,cs_end_dtime = #{endDtime, jdbcType=VARCHAR}
   	   </if>
   	   <if test='migInfoItem != null'>
   	   ,cs_mig_info_item = #{migInfoItem, jdbcType=VARCHAR}
   	   </if>
   	   <if test='jobTime != null'>
   	   ,cs_job_time = #{jobTime, jdbcType=NUMERIC}
   	   </if>
   	   <if test='yearTerm !=  null'>
   	   ,cs_yearterm = #{yearTerm, jdbcType=VARCHAR}
   	   </if>
       <if test='demonStatusYn !=  null'>
       ,cs_demon_status_yn = #{demonStatusYn, jdbcType=VARCHAR}
       </if>
       <if test='batchScheduleCd !=  null'>
       ,cs_batch_schedule_cd = #{batchScheduleCd, jdbcType=VARCHAR}
       </if>  
       <if test='batchHour !=  null'>
       ,cs_batch_hour = #{batchHour, jdbcType=NUMERIC}
       </if>  
       <if test='batchMin !=  null'>
       ,cs_batch_min = #{batchMin, jdbcType=NUMERIC}
       </if>       
 WHERE cs_mig_ems_seq = #{migEmsSeq, jdbcType=NUMERIC}
	</update>
	
	<resultMap id="detailResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivMigEmsDbRS">
		<result column="migdb.migEmsSeq"       property="univMigEmsDb.migEmsSeq"          />
		<result column="migdb.startDtime"      property="univMigEmsDb.startDtime"         />
		<result column="migdb.endDtime"        property="univMigEmsDb.endDtime"           />
		<result column="migdb.migInfoItem"     property="univMigEmsDb.migInfoItem"        />
		<result column="migdb.jobTime"         property="univMigEmsDb.jobTime"            />
		<result column="migdb.yearTerm"        property="univMigEmsDb.yearTerm"           />
		<result column="migdb.demonStatusYn"   property="univMigEmsDb.demonStatusYn"      />
		<result column="migdb.batchScheduleCd" property="univMigEmsDb.batchScheduleCd"    />
		<result column="migdb.batchHour"   	   property="univMigEmsDb.batchHour"          />
		<result column="migdb.batchMin"        property="univMigEmsDb.batchMin"           />
		<result column="migdb.regMemberSeq"    property="univMigEmsDb.regMemberSeq"       />
		<result column="migdb.regDtime"        property="univMigEmsDb.regDtime"           />
		<result column="migdb.updMemberSeq"    property="univMigEmsDb.updMemberSeq"       />
		<result column="migdb.updDtime" 	   property="univMigEmsDb.updDtime" 	      />
		<result column="mdbht.migLastTime" 	   property="univMigEmsDbHistory.migLastTime" />
	</resultMap>
	
	<select id="getDetail" resultMap="detailResultMap">
/* UnivMigEmsDbMapper.getDetail */
SELECT migdb.cs_mig_ems_seq			AS "migdb.migEmsSeq" ,
	   migdb.cs_start_dtime			AS "migdb.startDtime" ,
	   migdb.cs_end_dtime			AS "migdb.endDtime" ,
	   migdb.cs_mig_info_item		AS "migdb.migInfoItem" , 
	   migdb.cs_job_time 			AS "migdb.jobTime" ,
	   migdb.cs_yearterm			AS "migdb.yearTerm" , 
	   migdb.cs_demon_status_yn		AS "migdb.demonStatusYn" , 
	   migdb.cs_batch_schedule_cd	AS "migdb.batchScheduleCd" , 
	   migdb.cs_batch_hour			AS "migdb.batchHour" , 
	   migdb.cs_batch_min			AS "migdb.batchMin" , 
	   migdb.cs_reg_member_seq		AS "migdb.regMemberSeq" , 
	   migdb.cs_reg_dtime			AS "migdb.regDtime" , 
	   migdb.cs_upd_member_seq		AS "migdb.updMemberSeq" , 
	   migdb.cs_upd_dtime			AS "migdb.updDtime" ,
	   (SELECT MAX(cs_mig_lasttime) FROM cs_mig_emsdb_history) AS "mdbht.migLastTime" 	
  FROM cs_mig_emsdb migdb
	</select>
	
	<resultMap id="listResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivMigEmsDbRS">
		<result column="migdb.migEmsSeq"       property="univMigEmsDb.migEmsSeq"      />
		<result column="migdb.startDtime"      property="univMigEmsDb.startDtime"     />
		<result column="migdb.endDtime"        property="univMigEmsDb.endDtime"       />
		<result column="migdb.migInfoItem"     property="univMigEmsDb.migInfoItem"    />
		<result column="migdb.jobTime"         property="univMigEmsDb.jobTime"        />
		<result column="migdb.yearTerm"        property="univMigEmsDb.yearTerm"       />
		<result column="migdb.demonStatusYn"   property="univMigEmsDb.demonStatusYn"  />
		<result column="migdb.batchScheduleCd" property="univMigEmsDb.batchScheduleCd"/>
		<result column="migdb.batchHour"   	   property="univMigEmsDb.batchHour"      />
		<result column="migdb.batchMin"        property="univMigEmsDb.batchMin"       />		
		<result column="migdb.regMemberSeq"    property="univMigEmsDb.regMemberSeq"   />
		<result column="migdb.regDtime"        property="univMigEmsDb.regDtime"       />
		<result column="migdb.updMemberSeq"    property="univMigEmsDb.updMemberSeq"   />
		<result column="migdb.updDtime" 	   property="univMigEmsDb.updDtime" 	  />
	</resultMap>
	
	<select id="getList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivMigEmsDbCondition" resultMap="listResultMap">
/* UnivMigEmsDbMapper.getList */
		<if test='currentPage != 0'>
SELECT Z.* FROM (SELECT Row_Number() OVER (
        <choose>
            <when test='orderby == 1'>ORDER BY "migdb.regDtime" ASC</when>
            <when test='orderby ==-1'>ORDER BY "migdb.regDtime" DESC</when>
            <otherwise>ORDER BY "migdb.regDtime" DESC</otherwise>
        </choose>
) AS rownumber, * FROM (
		</if>
SELECT migdb.cs_mig_ems_seq			AS "migdb.migEmsSeq" ,
	   migdb.cs_start_dtime			AS "migdb.startDtime" ,
	   migdb.cs_end_dtime			AS "migdb.endDtime" ,
	   migdb.cs_mig_info_item		AS "migdb.migInfoItem" , 
	   migdb.cs_job_time 			AS "migdb.jobTime" ,
	   migdb.cs_yearterm			AS "migdb.yearTerm" , 
	   migdb.cs_demon_status_yn		AS "migdb.demonStatusYn" , 
	   migdb.cs_batch_schedule_cd	AS "migdb.batchScheduleCd" , 
	   migdb.cs_batch_hour			AS "migdb.batchHour" , 
	   migdb.cs_batch_min			AS "migdb.batchMin" , 
	   migdb.cs_reg_member_seq		AS "migdb.regMemberSeq" , 
	   migdb.cs_reg_dtime			AS "migdb.regDtime" , 
	   migdb.cs_upd_member_seq		AS "migdb.updMemberSeq" , 
	   migdb.cs_upd_dtime			AS "migdb.updDtime" 	
  FROM cs_mig_emsdb migdb
		 <if test='currentPage != 0'>
) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo} ORDER BY Z.rownumber
        </if>	        
	</select>
	
	<select id="countList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivMigEmsDbCondition" resultType="int">
/* UnivMigEmsDbMapper.countList */
SELECT COUNT(*)
  FROM cs_mig_emsdb migdb	
	</select>
	
	<update id="synchronize" statementType="CALLABLE" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivMigEmsDbVO">
{CALL SP_MIGRATION(
	#{yearTerm, mode=IN, jdbcType=VARCHAR},
	#{startDtime, mode=IN, jdbcType=VARCHAR},
	#{endDtime, mode=IN, jdbcType=VARCHAR},
	#{memberInfoYn, mode=IN, jdbcType=VARCHAR},
	#{categoryInfoYn, mode=IN, jdbcType=VARCHAR},
	#{masterInfoYn, mode=IN, jdbcType=VARCHAR},
	#{courseInfoYn, mode=IN, jdbcType=VARCHAR},
	#{applyInfoYn, mode=IN, jdbcType=VARCHAR}
	)}
	</update>

</mapper>	