<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.univ.mapper.UnivSurveyMapper">

	<insert id="insert" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivSurveyVO">
/* UIUnivSurveyMapper.insert */
		<selectKey resultType="Long" keyProperty="surveySeq" order="AFTER">
SELECT @@IDENTITY
        </selectKey>
INSERT INTO cs_survey 
       ( 
           cs_survey_title ,
           cs_survey_type_cd ,
           cs_survey_item_type_cd ,
           cs_onoff_cd ,
           cs_use_count ,
           cs_reg_member_seq ,
           cs_reg_dtime ,
           cs_reg_ip ,
           cs_upd_member_seq ,
           cs_upd_dtime ,
           cs_upd_ip
       ) 
       VALUES 
       ( 
           #{surveyTitle, jdbcType=VARCHAR} ,
           #{surveyTypeCd, jdbcType=VARCHAR} ,
           #{surveyItemTypeCd, jdbcType=VARCHAR} ,
           #{onOffCd, jdbcType=VARCHAR} ,
           0 ,
           #{regMemberSeq, jdbcType=NUMERIC} ,
           dbo.FN_NOW_TO_CHAR() ,
           #{regIp, jdbcType=VARCHAR} ,
           #{updMemberSeq, jdbcType=NUMERIC} ,
           dbo.FN_NOW_TO_CHAR() ,
           #{updIp, jdbcType=VARCHAR} 
       )	
	</insert>
	
	<update id="update" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivSurveyVO">
/* UIUnivSurveyMapper.update */
UPDATE cs_survey 
   SET cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} ,
       cs_upd_ip = #{updIp, jdbcType=VARCHAR} ,
       cs_upd_dtime = dbo.FN_NOW_TO_CHAR() ,
       cs_survey_title = #{surveyTitle, jdbcType=VARCHAR} ,
       cs_survey_type_cd = #{surveyTypeCd, jdbcType=VARCHAR} ,
       cs_survey_item_type_cd = #{surveyItemTypeCd, jdbcType=VARCHAR} ,
       cs_use_yn = #{useYn, jdbcType=VARCHAR} 
 WHERE cs_survey_seq = #{surveySeq} 
   AND cs_delete_yn = 'N'	
	</update>
	
	<update id="updateUseCount" parameterType="Long">
/* UIUnivSurveyMapper.updateUseCount */
UPDATE cs_survey 
       SET cs_use_count = 
       (SELECT COUNT(*) 
          FROM cs_survey_paper_element 
         WHERE cs_survey_seq = #{surveySeq} 
           AND cs_delete_yn = 'N'
       ) 
 WHERE cs_survey_seq = #{surveySeq} 
   AND cs_delete_yn = 'N'	
	</update>
	
	<update id="delete" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivSurveyVO">
/* UIUnivSurveyMapper.delete */
UPDATE cs_survey 
       SET cs_delete_yn = 'Y' ,
       cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} ,
       cs_upd_ip = #{updIp, jdbcType=VARCHAR} ,
       cs_upd_dtime = dbo.FN_NOW_TO_CHAR() 
 WHERE cs_survey_seq = #{surveySeq} 
   AND cs_delete_yn = 'N'	
	</update>
	
	<resultMap id="detailResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivSurveyRS">
		<result column="sv.surveySeq"         property="univSurvey.surveySeq"         />
	    <result column="sv.surveyTitle"       property="univSurvey.surveyTitle"       />
	    <result column="sv.surveyTypeCd"      property="univSurvey.surveyTypeCd"      />
	    <result column="sv.surveyItemTypeCd"  property="univSurvey.surveyItemTypeCd"  />
	    <result column="sv.useCount"          property="univSurvey.useCount"          />
	    <result column="sv.useYn"             property="univSurvey.useYn"             />
	    <result column="sv.onOffCd"           property="univSurvey.onOffCd"           />
	    <result column="sv.deleteYn"          property="univSurvey.deleteYn"          />
	    <result column="sv.regMemberSeq"      property="univSurvey.regMemberSeq"      />
	    <result column="sv.regDtime"          property="univSurvey.regDtime"          />
	    <result column="sv.regIp"             property="univSurvey.regIp"             />
	    <result column="sv.updMemberSeq"      property="univSurvey.updMemberSeq"      />
	    <result column="sv.updDtime"          property="univSurvey.updDtime"          />
	    <result column="sv.updIp"             property="univSurvey.updIp"             />
	    <result column="sv.regMemberName"     property="univSurvey.regMemberName"     />
	    <result column="sv.updMemberName"     property="univSurvey.updMemberName"     />
	    <collection  column="sv.surveySeq" 	  property="listSurveyExample" javaType="List" 
	    	ofType="com._4csoft.aof.ui.univ.vo.resultset.UIUnivSurveyExampleRS" select="com._4csoft.aof.univ.mapper.UnivSurveyExampleMapper.getList" />
	</resultMap>
	
	<select id="getDetail" parameterType="Long" resultMap="detailResultMap">
/* UIUnivSurveyMapper.getDetail */
SELECT sv.cs_survey_seq	                    	AS "sv.surveySeq" ,
       sv.cs_survey_title                   	AS "sv.surveyTitle" ,
       sv.cs_survey_type_cd                 	AS "sv.surveyTypeCd" ,
       sv.cs_survey_item_type_cd            	AS "sv.surveyItemTypeCd" ,
       sv.cs_use_count                      	AS "sv.useCount" ,
       sv.cs_use_yn                         	AS "sv.useYn" ,
       sv.cs_onoff_cd                         	AS "sv.onOffCd" ,
       sv.cs_delete_yn                      	AS "sv.deleteYn" ,
       sv.cs_reg_member_seq                 	AS "sv.regMemberSeq" ,
       sv.cs_reg_dtime                      	AS "sv.regDtime" ,
       sv.cs_reg_ip		 						AS "sv.regIp" ,
       sv.cs_upd_member_seq                 	AS "sv.updMemberSeq" ,
       sv.cs_upd_dtime                      	AS "sv.updDtime" ,
       sv.cs_upd_ip		 						AS "sv.updIp" ,
       (SELECT cs_member_name 
         FROM cs_member 
        WHERE cs_member_seq = sv.cs_reg_member_seq
       ) AS "sv.regMemberName" ,
       (SELECT cs_member_name 
         FROM cs_member 
        WHERE cs_member_seq = sv.cs_upd_member_seq
       ) AS "sv.updMemberName"
  FROM cs_survey sv 
 WHERE sv.cs_survey_seq = #{surveySeq} 
   AND sv.cs_delete_yn = 'N'	
	</select>
	
	<resultMap id="listResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivSurveyRS">
		<result column="sv.surveySeq"         property="univSurvey.surveySeq"         />
	    <result column="sv.surveyTitle"       property="univSurvey.surveyTitle"       />
	    <result column="sv.surveyTypeCd"      property="univSurvey.surveyTypeCd"      />
	    <result column="sv.surveyItemTypeCd"  property="univSurvey.surveyItemTypeCd"  />
	    <result column="sv.useCount"          property="univSurvey.useCount"          />
	    <result column="sv.useYn"             property="univSurvey.useYn"             />
	    <result column="sv.onOffCd"           property="univSurvey.onOffCd"           />
	    <result column="sv.deleteYn"          property="univSurvey.deleteYn"          />
	    <result column="sv.regMemberSeq"      property="univSurvey.regMemberSeq"      />
	    <result column="sv.regDtime"          property="univSurvey.regDtime"          />
	    <result column="sv.regIp"             property="univSurvey.regIp"             />
	    <result column="sv.updMemberSeq"      property="univSurvey.updMemberSeq"      />
	    <result column="sv.updDtime"          property="univSurvey.updDtime"          />
	    <result column="sv.updIp"             property="univSurvey.updIp"             />
	    <result column="sv.regMemberName"     property="univSurvey.regMemberName"     />
	    <result column="sv.updMemberName"     property="univSurvey.updMemberName"     />
	</resultMap>
	
	<select id="getList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivSurveyCondition" resultMap="listResultMap">
/* UIUnivSurveyMapper.getList */
		<if test='currentPage != 0'>
SELECT Z.* FROM (SELECT Row_Number() OVER (
        <choose>
            <when test='orderby == 1'>ORDER BY "sv.regDtime" ASC</when>
            <when test='orderby ==-1'>ORDER BY "sv.regDtime" DESC</when>
            <when test='orderby == 2'>ORDER BY "sv.surveyTitle" ASC</when>
            <when test='orderby ==-2'>ORDER BY "sv.surveyTitle" DESC</when>
            <when test='orderby == 3'>ORDER BY "sv.useCount" ASC</when>
            <when test='orderby ==-3'>ORDER BY "sv.useCount" DESC</when>
            <otherwise>ORDER BY "sv.regDtime" DESC</otherwise>
        </choose>
) AS rownumber, * FROM (
        </if>
SELECT sv.cs_survey_seq	                    	AS "sv.surveySeq" ,
       sv.cs_survey_title                   	AS "sv.surveyTitle" ,
       sv.cs_survey_type_cd                 	AS "sv.surveyTypeCd" ,
       sv.cs_survey_item_type_cd            	AS "sv.surveyItemTypeCd" ,
       sv.cs_use_count                      	AS "sv.useCount" ,
       sv.cs_use_yn                         	AS "sv.useYn" ,
       sv.cs_onoff_cd                         	AS "sv.onOffCd" ,
       sv.cs_delete_yn                      	AS "sv.deleteYn" ,
       sv.cs_reg_member_seq                 	AS "sv.regMemberSeq" ,
       sv.cs_reg_dtime                      	AS "sv.regDtime" ,
       sv.cs_reg_ip		 						AS "sv.regIp" ,
       sv.cs_upd_member_seq                 	AS "sv.updMemberSeq" ,
       sv.cs_upd_dtime                      	AS "sv.updDtime" ,
       sv.cs_upd_ip		 						AS "sv.updIp" ,
       m1.cs_member_name						AS "sv.regMemberName" ,
       m2.cs_member_name						AS "sv.updMemberName"       
  FROM cs_survey sv 
  	INNER JOIN cs_member m1
  		ON m1.cs_member_seq = sv.cs_reg_member_seq
  	INNER JOIN cs_member m2
  		ON m2.cs_member_seq = sv.cs_upd_member_seq
 WHERE sv.cs_delete_yn = 'N'
		<if test='srchNotInSurveyPaperSeq != null and !srchNotInSurveyPaperSeq.equals("") and srchNotInSurveyPaperSeq > 0'>
   AND sv.cs_survey_seq NOT IN 
       (SELECT cse.cs_survey_seq 
         FROM cs_survey_paper_element cse 
        WHERE cse.cs_survey_paper_seq = #{srchNotInSurveyPaperSeq} 
          AND cse.cs_delete_yn = 'N'
       )		
		</if>
		<if test='srchOnOffCd != null and !srchOnOffCd.equals("")'>
   AND sv.cs_onoff_cd = #{srchOnOffCd}		
		</if>
		<if test='srchSurveyTypeCd != null and !srchSurveyTypeCd.equals("")'>
   AND sv.cs_survey_type_cd = #{srchSurveyTypeCd}		
		</if>
		<if test='srchSurveyPaperTypeCd != null and !srchSurveyPaperTypeCd.equals("")'>
			<choose>
				<when test='srchSurveyPaperTypeCd.equals("${CD.SURVEY_PAPER_TYPE.GENERAL}")'>
   AND sv.cs_survey_type_cd = '${CD.SURVEY_TYPE.GENERAL}'		
				</when>
				<when test='srchSurveyPaperTypeCd.equals("${CD.SURVEY_PAPER_TYPE.SATISFY}")'>
   AND (sv.cs_survey_type_cd = '${CD.SURVEY_TYPE.COURSESATISFY}' or sv.cs_survey_type_cd = '${CD.SURVEY_TYPE.PROFSATISFY}') 		
				</when>
			</choose>
		</if>
		<if test='srchSurveyItemTypeCd != null and !srchSurveyItemTypeCd.equals("")'>
   AND sv.cs_survey_item_type_cd = #{srchSurveyItemTypeCd}		
		</if>
		<if test='srchUseYn != null and !srchUseYn.equals("")'>
   AND sv.cs_use_yn = #{srchUseYn}		
		</if>
		<if test='srchWord != null and !srchWord.equals("")'>
			<if test='srchKey.equals("title")'>
   AND sv.cs_survey_title LIKE '%' + #{srchWordDB} + '%'				
			</if>
		</if>          
        <if test='currentPage != 0'>
) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo} ORDER BY Z.rownumber
        </if>        	
	</select>
	
	<select id="countList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivSurveyCondition" resultType="int">
/* UIUnivSurveyMapper.countList */
SELECT COUNT(*) 
  FROM cs_survey sv 
  	INNER JOIN cs_member m1
  		ON m1.cs_member_seq = sv.cs_reg_member_seq
  	INNER JOIN cs_member m2
  		ON m2.cs_member_seq = sv.cs_upd_member_seq
 WHERE sv.cs_delete_yn = 'N'
 		<if test='srchNotInSurveyPaperSeq != null and !srchNotInSurveyPaperSeq.equals("") and srchNotInSurveyPaperSeq > 0'>
   AND sv.cs_survey_seq NOT IN 
       (SELECT cse.cs_survey_seq 
         FROM cs_survey_paper_element cse 
        WHERE cse.cs_survey_paper_seq = #{srchNotInSurveyPaperSeq} 
          AND cse.cs_delete_yn = 'N'
       )		
		</if>
		<if test='srchOnOffCd != null and !srchOnOffCd.equals("")'>
   AND sv.cs_onoff_cd = #{srchOnOffCd}		
		</if>
		<if test='srchSurveyTypeCd != null and !srchSurveyTypeCd.equals("")'>
   AND sv.cs_survey_type_cd = #{srchSurveyTypeCd}		
		</if>
		<if test='srchSurveyPaperTypeCd != null and !srchSurveyPaperTypeCd.equals("")'>
			<choose>
				<when test='srchSurveyPaperTypeCd.equals("${CD.SURVEY_PAPER_TYPE.GENERAL}")'>
   AND sv.cs_survey_type_cd = '${CD.SURVEY_TYPE.GENERAL}'		
				</when>
				<when test='srchSurveyPaperTypeCd.equals("${CD.SURVEY_PAPER_TYPE.SATISFY}")'>
   AND (sv.cs_survey_type_cd = '${CD.SURVEY_TYPE.COURSESATISFY}' or sv.cs_survey_type_cd = '${CD.SURVEY_TYPE.PROFSATISFY}')	
				</when>
			</choose>
		</if>
		<if test='srchSurveyItemTypeCd != null and !srchSurveyItemTypeCd.equals("")'>
   AND sv.cs_survey_item_type_cd = #{srchSurveyItemTypeCd}		
		</if>
		<if test='srchUseYn != null and !srchUseYn.equals("")'>
   AND sv.cs_use_yn = #{srchUseYn}		
		</if>
		<if test='srchWord != null and !srchWord.equals("")'>
			<if test='srchKey.equals("title")'>
   AND sv.cs_survey_title LIKE '%' + #{srchWordDB} + '%'				
			</if>
		</if>
	</select>

</mapper>
