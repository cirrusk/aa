<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.univ.mapper.UnivYearTermMapper">

    <insert id="insert" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO">
/* UnivYearTermMapper.insert */
INSERT INTO cs_univ_yearterm 
       ( 
           cs_yearterm, 
           cs_yearterm_name, 
           cs_study_start_date, 
           cs_study_end_date, 
           cs_default_yn, 
           cs_open_admin_date, 
           cs_open_prof_date, 
           cs_open_student_date, 
           cs_use_count, 
           cs_review_open_yn, 
           cs_mig_yearterm,
           cs_plan_reg_start_dtime,
           cs_plan_reg_end_dtime,
		   cs_middle_exam_upd_start_dtime,
		   cs_middle_exam_upd_end_dtime,
		   cs_final_exam_upd_start_dtime,
		   cs_final_exam_upd_end_dtime,    
           cs_grade_make_start_dtime,
           cs_grade_make_end_dtime,
           cs_delete_yn, 
           cs_reg_member_seq, 
           cs_upd_member_seq, 
           cs_reg_dtime, 
           cs_upd_dtime, 
           cs_reg_ip, 
           cs_upd_ip 
       ) 
    SELECT #{yearTerm,       			jdbcType=VARCHAR},
           #{yearTermName,   			jdbcType=VARCHAR},
           #{studyStartDate, 			jdbcType=VARCHAR},
           #{studyEndDate,   			jdbcType=VARCHAR},
           'N',
           #{openAdminDate,  			jdbcType=VARCHAR},
           #{openProfDate,   			jdbcType=VARCHAR},
           #{openStudentDate,			jdbcType=VARCHAR},
           0,
           'N',
           #{migYearTerm,	  			jdbcType=VARCHAR},
           #{planRegStartDtime,         jdbcType=VARCHAR},
           #{planRegEndDtime,           jdbcType=VARCHAR},
		   #{middleExamUpdStartDtime,	jdbcType=VARCHAR},
		   #{middleExamUpdEndDtime,	  	jdbcType=VARCHAR},
		   #{finalExamUpdStartDtime,	jdbcType=VARCHAR},
		   #{finalExamUpdEndDtime,	  	jdbcType=VARCHAR},
           #{gradeMakeStartDtime,       jdbcType=VARCHAR},
           #{gradeMakeEndDtime,         jdbcType=VARCHAR},
           'N',
           #{regMemberSeq,   			jdbcType=NUMERIC},
           #{updMemberSeq,   			jdbcType=NUMERIC},
           dbo.FN_NOW_TO_CHAR(),
           dbo.FN_NOW_TO_CHAR(),
           #{regIp,          			jdbcType=VARCHAR},
           #{updIp,          			jdbcType=VARCHAR}
    </insert>

    <update id="update" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO">
/* UnivYearTermMapper.update */
UPDATE cs_univ_yearterm 
   SET cs_upd_dtime          = dbo.FN_NOW_TO_CHAR()
       ,cs_upd_member_seq    = #{updMemberSeq, jdbcType=NUMERIC}
       ,cs_upd_ip            = #{updIp, jdbcType=VARCHAR}
       ,cs_use_count         = (SELECT COUNT(*) FROM cs_course_active WHERE cs_yearterm = #{yearTerm} AND  cs_delete_yn = 'N')
       <if test="yearTermName != null">
       ,cs_yearterm_name     = #{yearTermName,   jdbcType=VARCHAR}
       </if>
       <if test="studyStartDate != null">
       ,cs_study_start_date  = #{studyStartDate, jdbcType=VARCHAR}
       </if>
       <if test="studyEndDate != null">
       ,cs_study_end_date    = #{studyEndDate,   jdbcType=VARCHAR}
       </if>
       <if test="defaultYn != null">
       ,cs_default_yn        = #{defaultYn,      jdbcType=VARCHAR}
       </if>
       <if test="openAdminDate != null">
       ,cs_open_admin_date   = #{openAdminDate,  jdbcType=VARCHAR}
       </if>
       <if test="openProfDate != null">
       ,cs_open_prof_date    = #{openProfDate,   jdbcType=VARCHAR}
       </if>
       <if test="openStudentDate != null">
       ,cs_open_student_date = #{openStudentDate,jdbcType=VARCHAR}
       </if>
       <if test="reviewOpenYn != null">
       ,cs_review_open_yn    = #{reviewOpenYn,   jdbcType=VARCHAR}
       </if>
       <if test="migYearTerm != null">
       ,cs_mig_yearterm      = #{migYearTerm,   jdbcType=VARCHAR}
       </if>
       <if test="planRegStartDtime != null">
       ,cs_plan_reg_start_dtime  = #{planRegStartDtime,   jdbcType=VARCHAR}
       </if>
       <if test="planRegEndDtime != null">
       ,cs_plan_reg_end_dtime    = #{planRegEndDtime,   jdbcType=VARCHAR}
       </if>
       <if test="middleExamUpdStartDtime != null">
       ,cs_middle_exam_upd_start_dtime	= #{middleExamUpdStartDtime,   jdbcType=VARCHAR}
       </if>
       <if test="middleExamUpdEndDtime != null">
       ,cs_middle_exam_upd_end_dtime    = #{middleExamUpdEndDtime,   jdbcType=VARCHAR}
       </if>
       <if test="finalExamUpdStartDtime != null">
       ,cs_final_exam_upd_start_dtime   = #{finalExamUpdStartDtime,   jdbcType=VARCHAR}
       </if>
       <if test="finalExamUpdEndDtime != null">
       ,cs_final_exam_upd_end_dtime     = #{finalExamUpdEndDtime,   jdbcType=VARCHAR}
       </if>
       <if test="gradeMakeStartDtime != null">
       ,cs_grade_make_start_dtime  = #{gradeMakeStartDtime,   jdbcType=VARCHAR}
       </if>
       <if test="gradeMakeEndDtime != null">
       ,cs_grade_make_end_dtime    = #{gradeMakeEndDtime,   jdbcType=VARCHAR}
       </if>
       <if test="competitionYn != null">
       ,CX_COMPETITION_YN     = #{competitionYn,   jdbcType=VARCHAR}
       </if>
 WHERE cs_yearterm = #{yearTerm}
   AND cs_delete_yn = 'N'
    </update>
    
    <update id="updateUseCount" parameterType="String">
/* UnivYearTermMapper.updateUseCount */
UPDATE cs_univ_yearterm
   SET cs_use_count = 
       (SELECT COUNT(*) 
         FROM cs_course_active 
        WHERE cs_yearterm = #{yearTerm, jdbcType=NUMERIC} 
          AND cs_delete_yn = 'N' 
       ) 
 WHERE cs_yearterm = #{yearTerm} 
   AND cs_delete_yn = 'N'  
    </update>
    
    <update id="updateReviewOpenYn" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO">
/* UnivYearTermMapper.updateReviewOpenYn */
UPDATE cs_univ_yearterm 
   SET cs_upd_dtime          = dbo.FN_NOW_TO_CHAR()
       ,cs_upd_member_seq    = #{updMemberSeq, jdbcType=NUMERIC}
       ,cs_upd_ip            = #{updIp, jdbcType=VARCHAR}
       ,cs_review_open_yn    = #{reviewOpenYn,   jdbcType=VARCHAR}
 WHERE cs_yearterm = #{yearTerm}
   AND cs_delete_yn = 'N'
    </update>

    <update id="delete" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO">
/* UnivYearTermMapper.delete */
UPDATE cs_univ_yearterm 
       SET cs_upd_dtime  = dbo.FN_NOW_TO_CHAR() ,
       cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} ,
       cs_upd_ip         = #{updIp, jdbcType=VARCHAR} ,
       cs_delete_yn      = 'Y' 
 WHERE cs_yearterm = #{yearTerm} 
   AND cs_delete_yn = 'N'
    </update>

    <resultMap id="detailResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivYearTermRS">
        <result column="cs_yearterm"                        property="univYearTerm.yearTerm"/>
        <result column="cs_yearterm_name"                   property="univYearTerm.yearTermName"/>
        <result column="cs_study_start_date"                property="univYearTerm.studyStartDate"/>
        <result column="cs_study_end_date"                  property="univYearTerm.studyEndDate"/>
        <result column="cs_default_yn"                      property="univYearTerm.defaultYn"/>
        <result column="cs_open_admin_date"                 property="univYearTerm.openAdminDate"/>
        <result column="cs_open_prof_date"                  property="univYearTerm.openProfDate"/>
        <result column="cs_open_student_date"               property="univYearTerm.openStudentDate"/>
        <result column="cs_use_count"                       property="univYearTerm.useCount"/>
        <result column="cs_review_open_yn"                  property="univYearTerm.reviewOpenYn"/>
        <result column="cs_plan_reg_start_dtime"            property="univYearTerm.planRegStartDtime"/>
        <result column="cs_plan_reg_end_dtime"              property="univYearTerm.planRegEndDtime"/>
        <result column="cs_middle_exam_upd_start_dtime"     property="univYearTerm.middleExamUpdStartDtime"/>
        <result column="cs_middle_exam_upd_end_dtime"      	property="univYearTerm.middleExamUpdEndDtime"/>
        <result column="cs_final_exam_upd_start_dtime"      property="univYearTerm.finalExamUpdStartDtime"/>
        <result column="cs_final_exam_upd_end_dtime"      	property="univYearTerm.finalExamUpdEndDtime"/>
        <result column="cs_grade_make_start_dtime"          property="univYearTerm.gradeMakeStartDtime"/>
        <result column="cs_grade_make_end_dtime"            property="univYearTerm.gradeMakeEndDtime"/>
        <result column="isMiddleExamDtime"              	property="univYearTerm.isMiddleExamDtime"/>
        <result column="isFinalExamDtime"               	property="univYearTerm.isFinalExamDtime"/>
        <result column="isPlanRegDtime"                 	property="univYearTerm.isPlanRegDtime"/>
        <result column="isGradeMakeDtime"               	property="univYearTerm.isGradeMakeDtime"/>
        <result column="cs_delete_yn"                       property="univYearTerm.deleteYn"/>
        <result column="cs_reg_member_seq"                  property="univYearTerm.regMemberSeq"/>
        <result column="cs_reg_dtime"                       property="univYearTerm.regDtime"/>
        <result column="cs_reg_ip"                          property="univYearTerm.regIp"/>
        <result column="cs_upd_member_seq"                  property="univYearTerm.updMemberSeq"/>
        <result column="cs_upd_dtime"                       property="univYearTerm.updDtime"/>
        <result column="cs_upd_ip"                          property="univYearTerm.updIp"/>
        <result column="cx_competition_yn"                  property="univYearTerm.competitionYn"/>
    </resultMap>
    <select id="getDetail" parameterType="map" resultMap="detailResultMap">
/* UnivYearTermMapper.getDetail */
SELECT cs_yearterm, 
       cs_yearterm_name, 
       cs_study_start_date, 
       cs_study_end_date, 
       cs_default_yn, 
       cs_open_admin_date, 
       cs_open_prof_date, 
       cs_open_student_date, 
       cs_use_count, 
       cs_review_open_yn,
       cs_plan_reg_start_dtime,
       cs_plan_reg_end_dtime,
	   cs_middle_exam_upd_start_dtime,
	   cs_middle_exam_upd_end_dtime,
	   cs_final_exam_upd_start_dtime,
	   cs_final_exam_upd_end_dtime,
       cs_grade_make_start_dtime,
       cs_grade_make_end_dtime,
       CASE WHEN cs_middle_exam_upd_start_dtime <![CDATA[<]]> dbo.FN_NOW_TO_CHAR() 
             AND cs_middle_exam_upd_end_dtime <![CDATA[>=]]> dbo.FN_NOW_TO_CHAR() 
            THEN 'true' 
            ELSE 'false'
             END AS isMiddleExamDtime, 
       CASE WHEN cs_final_exam_upd_start_dtime <![CDATA[<]]> dbo.FN_NOW_TO_CHAR() 
             AND cs_final_exam_upd_end_dtime <![CDATA[>=]]> dbo.FN_NOW_TO_CHAR() 
            THEN 'true' 
            ELSE 'false' 
             END AS isFinalExamDtime, 
       CASE WHEN cs_plan_reg_start_dtime <![CDATA[<]]> dbo.FN_NOW_TO_CHAR() 
             AND cs_plan_reg_end_dtime <![CDATA[>=]]> dbo.FN_NOW_TO_CHAR() 
            THEN 'true' 
            ELSE 'false'
             END AS isPlanRegDtime, 
       CASE WHEN cs_grade_make_start_dtime <![CDATA[<]]> dbo.FN_NOW_TO_CHAR() 
             AND cs_grade_make_end_dtime <![CDATA[>=]]> dbo.FN_NOW_TO_CHAR() 
            THEN 'true' 
            ELSE 'false'
          END AS isGradeMakeDtime,
       cs_delete_yn, 
       cs_reg_member_seq, 
       cs_upd_member_seq, 
       cs_reg_dtime, 
       cs_upd_dtime, 
       cs_reg_ip, 
       cs_upd_ip,
       cx_competition_yn
  FROM cs_univ_yearterm 
 WHERE cs_yearterm = #{yearTerm}
   AND cs_delete_yn = 'N'
    </select>

<resultMap id="listResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivYearTermRS">
    <result column="cs_yearterm"            property="univYearTerm.yearTerm"/>
    <result column="cs_yearterm_name"       property="univYearTerm.yearTermName"/>
    <result column="cs_study_start_date"    property="univYearTerm.studyStartDate"/>
    <result column="cs_study_end_date"      property="univYearTerm.studyEndDate"/>
    <result column="cs_default_yn"          property="univYearTerm.defaultYn"/>
    <result column="cs_open_admin_date"     property="univYearTerm.openAdminDate"/>
    <result column="cs_open_prof_date"      property="univYearTerm.openProfDate"/>
    <result column="cs_open_student_date"   property="univYearTerm.openStudentDate"/>
    <result column="cs_use_count"           property="univYearTerm.useCount"/>
    <result column="cs_review_open_yn"      property="univYearTerm.reviewOpenYn"/>
    <result column="cs_plan_reg_start_dtime"            property="univYearTerm.planRegStartDtime"/>
    <result column="cs_plan_reg_end_dtime"              property="univYearTerm.planRegEndDtime"/>
    <result column="cs_middle_exam_upd_start_dtime"     property="univYearTerm.middleExamUpdStartDtime"/>
    <result column="cs_middle_exam_upd_end_dtime"       property="univYearTerm.middleExamUpdEndDtime"/>
    <result column="cs_final_exam_upd_start_dtime"      property="univYearTerm.finalExamUpdStartDtime"/>
    <result column="cs_final_exam_upd_end_dtime"        property="univYearTerm.finalExamUpdEndDtime"/>
    <result column="cs_grade_make_start_dtime"          property="univYearTerm.gradeMakeStartDtime"/>
    <result column="cs_grade_make_end_dtime"            property="univYearTerm.gradeMakeEndDtime"/>
    <result column="cs_delete_yn"           property="univYearTerm.deleteYn"/>
    <result column="cs_reg_member_seq"      property="univYearTerm.regMemberSeq"/>
    <result column="cs_reg_dtime"           property="univYearTerm.regDtime"/>
    <result column="cs_reg_ip"              property="univYearTerm.regIp"/>
    <result column="cs_upd_member_seq"      property="univYearTerm.updMemberSeq"/>
    <result column="cs_upd_dtime"           property="univYearTerm.updDtime"/>
    <result column="cs_upd_ip"              property="univYearTerm.updIp"/>
</resultMap>
<select id="getList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivYearTermCondition" resultMap="listResultMap">
/* UnivYearTermMapper.getList */
    <if test='currentPage != 0'>
SELECT Z.* FROM (SELECT Row_Number() OVER (ORDER BY cs_reg_dtime ASC) AS rownumber, * FROM (
    </if>
SELECT cs_yearterm, 
       cs_yearterm_name, 
       cs_study_start_date, 
       cs_study_end_date, 
       cs_default_yn, 
       cs_open_admin_date, 
       cs_open_prof_date, 
       cs_open_student_date, 
       cs_use_count, 
       cs_review_open_yn,
       cs_plan_reg_start_dtime,
       cs_plan_reg_end_dtime,
       cs_middle_exam_upd_start_dtime,
       cs_middle_exam_upd_end_dtime,
       cs_final_exam_upd_start_dtime,
       cs_final_exam_upd_end_dtime,
       cs_grade_make_start_dtime,
       cs_grade_make_end_dtime,          
       cs_delete_yn, 
       cs_reg_member_seq, 
       cs_upd_member_seq, 
       cs_reg_dtime, 
       cs_upd_dtime, 
       cs_reg_ip, 
       cs_upd_ip 
  FROM cs_univ_yearterm
 WHERE cs_yearterm = #{srchYearTerm}
   AND cs_delete_yn = 'N'
        <if test='currentPage != 0'>
) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo} ORDER BY Z.rownumber
        </if>
    </select>

    <select id="countList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivYearTermCondition" resultType="int">
/* UnivYearTermMapper.countList */
SELECT COUNT(*)
  FROM cs_univ_yearterm
 WHERE cs_yearterm = #{srchYearterm}
   AND cs_delete_yn = 'N'
    </select>
    
    <resultMap id="listWithCourseResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivYearTermRS">
        <result column="cs_yearterm"            property="univYearTerm.yearTerm"/>
        <result column="cs_yearterm_name"       property="univYearTerm.yearTermName"/>
        <result column="cs_use_count"           property="univYearTerm.useCount"/>
        <result column="cs_review_open_yn"      property="univYearTerm.reviewOpenYn"/>
    </resultMap>
    <select id="getListWithCourse" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivYearTermCondition" resultMap="listWithCourseResultMap">
/* UnivYearTermMapper.getListWithCourse */
SELECT cs_yearterm, 
       cs_yearterm_name,
       cs_use_count, 
       cs_review_open_yn
  FROM cs_univ_yearterm
 WHERE cs_yearterm = #{srchYearTerm}
   AND cs_delete_yn = 'N'
 ORDER BY cs_yearterm
    </select>
    
    <select id="countYearTerm" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO" resultType="int">
/* UnivYearTermMapper.countYearTerm */
SELECT COUNT(*)
  FROM cs_univ_yearterm
 WHERE cs_yearterm = #{yearTerm}
   AND cs_delete_yn = 'N'
    </select>
    
    <resultMap id="systemYearTermResultMap" type="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO">
        <result column="cs_yearterm"            property="yearTerm"/>
        <result column="cs_yearterm_name"       property="yearTermName"/>
        <result column="cs_year"                property="year"/>
        <result column="cs_term"                property="term"/>
        <result column="cs_study_start_date"    property="studyStartDate"/>
        <result column="cs_study_end_date"      property="studyEndDate"/>
    </resultMap>
    <select id="getSystemYearTerm" parameterType="String" resultMap="systemYearTermResultMap">
/* UnivYearTermMapper.getSystemYearTerm */
SELECT TOP 1 * 
FROM (
	SELECT cs_yearterm, 
	       cs_yearterm_name,
	       SUBSTRING(cs_yearterm, 1, 4) AS year,
	       SUBSTRING(cs_yearterm, 5, 2) AS term,
	       cs_study_start_date,
	       cs_study_end_date,
	       1                            AS cx_sort_order
	  FROM cs_univ_yearterm 
	 WHERE cs_delete_yn = 'N' 
	   AND cs_yearterm = (SELECT MAX(cs_yearterm) 
	                      FROM cs_univ_yearterm 
	                     WHERE cs_delete_yn = 'N' 
	                       AND cs_yearterm like CONVERT(VARCHAR, DATEPART(yy, GETDATE())) + '%'
	                             <choose>
	                                <when test='systemRoleGroup == null or systemRoleGroup.equals("admin")'>
	                       AND cs_open_admin_date <![CDATA[<=]]> dbo.FN_NOW_TO_CHAR()) 
	                                </when>
	                                <when test='systemRoleGroup.equals("prof")'>
	                       AND cs_open_prof_date <![CDATA[<=]]> dbo.FN_NOW_TO_CHAR())
	                                </when>
	                                <when test='systemRoleGroup.equals("user")'>
	                       AND cs_open_student_date <![CDATA[<=]]> dbo.FN_NOW_TO_CHAR())
	                                </when>
	                                <otherwise>
	                       AND cs_open_admin_date <![CDATA[<=]]> dbo.FN_NOW_TO_CHAR())
	                                </otherwise>
	                           </choose>
   UNION ALL 
      SELECT CONVERT(VARCHAR, DATEPART(yy, GETDATE())) + '10'                 AS cs_yearterm, 
             CONVERT(VARCHAR, DATEPART(yy, GETDATE())) + '년-' + CS_CODE_NAME AS cs_yearterm_name, 
             CONVERT(VARCHAR, DATEPART(yy, GETDATE()))                        AS year, 
             '10'                                                             AS term, 
             CONVERT(VARCHAR, DATEPART(yy, GETDATE())) + cs_code_name_ex1     AS cs_study_start_date, 
             CONVERT(VARCHAR, DATEPART(yy, GETDATE())) + cs_code_name_ex2     AS cs_study_end_date,
             2                                                                AS cx_sort_order
        FROM cs_code 
       WHERE CS_CODE_GROUP = '${CD.TERM_TYPE}' 
         AND cs_code = '${CD.TERM_TYPE.10}' 
    ) A
ORDER BY cx_sort_order
    </select>
    
    <select id="countStudyDate" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO" resultType="int">
/* UnivYearTermMapper.countStudyDate */
SELECT COUNT(*)
  FROM 
       (
       SELECT a.cs_yearterm, 
              start_yearterm, 
              end_yearterm,
              ISNULL(admin_start_date,'19001231000000') AS admin_start_date, 
              ISNULL(admin_end_date,'22001231000000')   AS admin_end_date,
              ISNULL(prof_start_date,'19001231000000')  AS prof_start_date,
              ISNULL(prof_end_date,'22001231000000')    AS prof_end_date,
              ISNULL(stu_start_date,'19001231000000')   AS stu_start_date,
              ISNULL(stu_end_date,'22001231000000')     AS stu_end_date
         FROM 
             (
             SELECT #{yearTerm} AS cs_yearterm
             ) a 
LEFT OUTER JOIN (SELECT #{yearTerm}        AS cs_yearterm, 
                     cs_yearterm           AS start_yearterm, 
                     cs_open_admin_date    AS admin_start_date, 
                     cs_open_prof_date     AS prof_start_date, 
                     cs_open_student_date  AS stu_start_date 
                FROM cs_univ_yearterm 
               WHERE cs_delete_yn = 'N' 
                 AND cs_yearterm = (SELECT MAX(cs_yearterm) 
                                      FROM cs_univ_yearterm 
                                     WHERE cs_delete_yn = 'N' 
                                       AND cs_yearterm <![CDATA[>=]]> CONVERT(VARCHAR,SUBSTRING(#{yearTerm},1,4)-1)+'10'
                                       AND cs_yearterm <![CDATA[<]]> #{yearTerm} 
                                    ) 
              ) b
           ON a.cs_yearterm = b.cs_yearterm
           LEFT OUTER JOIN 
             (SELECT #{yearTerm}           AS cs_yearterm, 
                     cs_yearterm           AS end_yearterm, 
                     cs_open_admin_date    AS admin_end_date, 
                     cs_open_prof_date     AS prof_end_date, 
                     cs_open_student_date  AS stu_end_date 
                FROM cs_univ_yearterm 
               WHERE cs_delete_yn = 'N' 
                 AND cs_yearterm = (SELECT MIN(cs_yearterm) 
                                      FROM cs_univ_yearterm 
                                     WHERE cs_delete_yn = 'N' 
                                       AND cs_yearterm <![CDATA[>]]> #{yearTerm} 
                     ) 
              ) c
           ON a.cs_yearterm = b.cs_yearterm
       ) c
       <choose>
            <when test='openType.equals("admin")'>
 WHERE admin_start_date <![CDATA[<]]> #{openAdminDate} 
   AND admin_end_date <![CDATA[>]]> #{openAdminDate}
            </when>
            <when test='openType.equals("prof")'>
WHERE admin_start_date <![CDATA[<]]> #{openProfDate} 
  AND admin_end_date <![CDATA[>]]> #{openProfDate}
            </when>
            <when test='openType.equals("user")'>
 WHERE admin_start_date <![CDATA[<]]> #{openStudentDate} 
   AND admin_end_date <![CDATA[>]]> #{openStudentDate}
            </when>
       </choose>
    </select>
    
    <insert id="insertDefaultYearTerm" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO">
    INSERT INTO cs_univ_yearterm 
                (cs_yearterm
                 ,cs_yearterm_name
                 ,cs_study_start_date
                 ,cs_study_end_date
                 ,cs_default_yn
                 ,cs_open_admin_date
                 ,cs_open_prof_date
                 ,cs_open_student_date
                 ,cs_use_count
                 ,cs_review_open_yn
                 ,cs_delete_yn
                 ,cs_reg_member_seq
                 ,cs_upd_member_seq
                 ,cs_reg_dtime
                 ,cs_upd_dtime
                 ,cs_reg_ip
                 ,cs_upd_ip)
          SELECT A.cs_year + substring (b.cs_code, 12, 2)
                ,A.cs_year + '년-' + b.cs_code_name
                ,CASE b.cs_sort_order WHEN 4 THEN str (CAST (A.cs_year AS INT) + 1, 4) + b.cs_code_name_ex1 ELSE A.cs_year + b.cs_code_name_ex1 END
                ,CASE b.cs_sort_order WHEN 4 THEN str (CAST (A.cs_year AS INT) + 1, 4) + b.cs_code_name_ex2 ELSE A.cs_year + b.cs_code_name_ex2 END
                ,'N'
                ,CASE b.cs_sort_order WHEN 4 THEN str (CAST (A.cs_year AS INT) + 1, 4) + b.cs_code_name_ex1 ELSE A.cs_year + b.cs_code_name_ex1 END
                ,CASE b.cs_sort_order WHEN 4 THEN str (CAST (A.cs_year AS INT) + 1, 4) + b.cs_code_name_ex1 ELSE A.cs_year + b.cs_code_name_ex1 END
                ,CASE b.cs_sort_order WHEN 4 THEN str (CAST (A.cs_year AS INT) + 1, 4) + b.cs_code_name_ex1 ELSE A.cs_year + b.cs_code_name_ex1 END
                ,0
                ,'N'
                ,'N'
                ,1
                ,1
                ,dbo.fn_now_to_char ()
                ,dbo.fn_now_to_char ()
                ,'127.0.0.1'
                ,'127.0.0.1'
            FROM (SELECT SUBSTRING(#{yearTerm}, 1, 4) AS cs_year) A,
                 (SELECT cs_code,
                         cs_code_name,
                         cs_code_name_ex1,
                         cs_code_name_ex2,
                         cs_sort_order
                    FROM cs_code
                   WHERE cs_code_group IN ( 'TERM_TYPE' )
                     AND cs_delete_yn = 'N'
                     AND cs_sort_order > 0
              ) b
    </insert>
    
    <resultMap id="listAllResultMap" type="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO">
        <result column="cs_yearterm"            property="yearTerm"/>
        <result column="cs_yearterm_name"       property="yearTermName"/>
        <result column="cs_study_start_date"    property="studyStartDate"/>
        <result column="cs_study_end_date"      property="studyEndDate"/>
        <result column="cs_default_yn"          property="defaultYn"/>
        <result column="cs_open_admin_date"     property="openAdminDate"/>
        <result column="cs_open_prof_date"      property="openProfDate"/>
        <result column="cs_open_student_date"   property="openStudentDate"/>
        <result column="cs_use_count"           property="useCount"/>
        <result column="cs_review_open_yn"      property="reviewOpenYn"/>
        <result column="cs_delete_yn"           property="deleteYn"/>
        <result column="cs_reg_member_seq"      property="regMemberSeq"/>
        <result column="cs_reg_dtime"           property="regDtime"/>
        <result column="cs_reg_ip"              property="regIp"/>
        <result column="cs_upd_member_seq"      property="updMemberSeq"/>
        <result column="cs_upd_dtime"           property="updDtime"/>
        <result column="cs_upd_ip"              property="updIp"/>
        <result column="year"                   property="year"/>
        <result column="term"                   property="term"/>
        <result column="competitionYn"          property="competitionYn"/>
    </resultMap>
    <select id="getListYearTermAll" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivYearTermVO" resultMap="listAllResultMap">
    /* UnivYearTermMapper.getListYearTermAll */
    SELECT cs_yearterm, 
           cs_yearterm_name, 
           cs_study_start_date, 
           cs_study_end_date, 
           cs_default_yn, 
           cs_open_admin_date, 
           cs_open_prof_date, 
           cs_open_student_date, 
           cs_use_count, 
           cs_review_open_yn, 
           cs_delete_yn, 
           cs_reg_member_seq, 
           cs_upd_member_seq, 
           cs_reg_dtime, 
           cs_upd_dtime, 
           cs_reg_ip, 
           cs_upd_ip,
           SUBSTRING(cs_yearterm, 1, 4) AS year,
           SUBSTRING(cs_yearterm, 5, 2) AS term,
           cx_competition_yn AS competitionYn
      FROM cs_univ_yearterm
     WHERE cs_delete_yn = 'N'
           <if test="yearTerm != null">
       AND cs_yearterm like SUBSTRING(#{yearTerm}, 1, 4)+ '%'
           </if>
  ORDER BY cs_yearterm DESC
    </select>
    
    <select id="getListYearAll" resultType="String">
    /* UnivYearTermMapper.getListYearAll */
SELECT year
  FROM (
        SELECT SUBSTRING(cs_yearterm, 1, 4) AS year
          FROM cs_univ_yearterm
         WHERE cs_delete_yn = 'N'
     ) y
  GROUP BY year
  ORDER BY year DESC
    </select>
    
    <resultMap id="listLimitResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivYearTermRS">
        <result column="cs_yearterm"            property="univYearTerm.yearTerm"/>
        <result column="cs_yearterm_name"       property="univYearTerm.yearTermName"/>
        <result column="cs_use_count"           property="univYearTerm.useCount"/>
        <result column="cs_review_open_yn"      property="univYearTerm.reviewOpenYn"/>
    </resultMap>
    
    <select id="getCourseActiveLimitList" parameterType="com._4csoft.aof.ui.univ.vo.condition.UIUnivYearTermCondition" resultMap="listLimitResultMap">
/* UnivYearTermMapper.getCourseActiveLimitList */
SELECT cs_yearterm, 
       cs_yearterm_name, 
       cs_use_count, 
       cs_review_open_yn
  FROM cs_univ_yearterm
 WHERE cs_yearterm <![CDATA[>=]]> #{srchStartYearTerm}
   AND cs_yearterm <![CDATA[<=]]> #{srchEndYearTerm}
   AND cs_delete_yn = 'N'
 ORDER BY cs_yearterm
    </select>
</mapper>