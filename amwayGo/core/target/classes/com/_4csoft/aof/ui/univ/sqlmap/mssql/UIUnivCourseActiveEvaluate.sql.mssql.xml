<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.univ.mapper.UnivCourseActiveEvaluateMapper">

	<insert id="insert" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseActiveEvaluateVO">
		<selectKey resultType="Long" keyProperty="evaluateSeq" order="AFTER">
			SELECT @@IDENTITY
        </selectKey>
        /* UnivCourseActiveEvaluateMapper.insert */
		INSERT INTO cs_course_active_evaluate ( 
			cs_course_active_seq,
			cs_evaluate_type_cd,
			cs_score,
			cs_limit_score,
			cs_reg_member_seq,
			cs_upd_member_seq,
			cs_reg_dtime,
			cs_upd_dtime,
			cs_reg_ip,
			cs_upd_ip 
		) VALUES ( 
			#{courseActiveSeq, jdbcType=VARCHAR}, 
			#{evaluateTypeCd, jdbcType=VARCHAR}, 
			#{score, jdbcType=NUMERIC}, 
			#{limitScore, jdbcType=NUMERIC}, 
			#{regMemberSeq, jdbcType=NUMERIC} ,
			#{updMemberSeq, jdbcType=NUMERIC} ,
			dbo.FN_NOW_TO_CHAR() ,
			dbo.FN_NOW_TO_CHAR() ,
			#{regIp, jdbcType=VARCHAR} ,
			#{updIp, jdbcType=VARCHAR} 
		)
	</insert>

	<update id="update" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseActiveEvaluateVO">
		/* UnivCourseActiveEvaluateMapper.update */
		UPDATE
			cs_course_active_evaluate
		SET
			cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} , 
			cs_upd_dtime = dbo.FN_NOW_TO_CHAR() ,
			cs_upd_ip = #{updIp, jdbcType=VARCHAR} ,
		<if test="score != null">
			cs_score = #{score, jdbcType=NUMERIC} ,
		</if>
		<if test="limitScore != null">
			cs_limit_score = #{limitScore, jdbcType=NUMERIC}
		</if> 
		WHERE
			cs_delete_yn = 'N'
		AND cs_evaluate_seq = #{evaluateSeq}
	</update>
	
	<update id="delete" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseActiveEvaluateVO">
		/* UnivCourseActiveEvaluateMapper.delete */
		UPDATE
			cs_course_active_evaluate 
		SET
			cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} , 
			cs_upd_dtime = dbo.FN_NOW_TO_CHAR() ,
			cs_upd_ip = #{updIp, jdbcType=VARCHAR} ,
			cs_delete_yn = 'Y'
		WHERE
			cs_delete_yn = 'N'
		AND cs_evaluate_seq = #{evaluateSeq}
	</update>
    
    <update id="deleteByCourseActiveSeq" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseActiveEvaluateVO">
/* UnivCourseActiveEvaluateMapper.deleteByCourseActiveSeq */
UPDATE cs_course_active_evaluate 
   SET cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} , 
       cs_upd_dtime = dbo.FN_NOW_TO_CHAR() ,
       cs_upd_ip = #{updIp, jdbcType=VARCHAR} ,
       cs_delete_yn = 'Y'
 WHERE cs_delete_yn = 'N'
   AND cs_course_active_seq = #{courseActiveSeq}
    </update>
	
	<resultMap id="detailResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseActiveEvaluateRS">
		<result column="evaluate.evaluateSeq"		property="evaluate.evaluateSeq"			/>
		<result column="evaluate.courseActiveSeq"	property="evaluate.courseActiveSeq"		/>
		<result column="evaluate.evaluateTypeCd"	property="evaluate.evaluateTypeCd"		/>
		<result column="evaluate.score"				property="evaluate.score"				/>
		<result column="evaluate.limitScore"		property="evaluate.limitScore"			/>
		<result column="evaluate.deleteYn"			property="evaluate.deleteYn"			/>
        <result column="evaluate.regMemberSeq"		property="evaluate.regMemberSeq"		/>
        <result column="evaluate.regDtime"			property="evaluate.regDtime"			/>
        <result column="evaluate.regIp"				property="evaluate.regIp"				/>
        <result column="evaluate.updMemberSeq"		property="evaluate.updMemberSeq"		/>
        <result column="evaluate.updDtime"			property="evaluate.updDtime"			/>
        <result column="evaluate.updIp"				property="evaluate.updIp"				/>
	</resultMap>
	<select id="getDetail" parameterType="map" resultMap="detailResultMap">
		/* UnivCourseActiveEvaluateMapper.getDetail */
		SELECT
			evaluate.cs_evaluate_seq AS "evaluate.evaluateSeq",
			evaluate.cs_course_active_seq AS "evaluate.courseActiveSeq",
			evaluate.cs_evaluate_type_cd AS "evaluate.evaluateTypeCd",
			evaluate.cs_score AS "evaluate.score",
			evaluate.cs_limit_score AS "evaluate.limitScore",
			evaluate.cs_delete_yn AS "evaluate.deleteYn",
			evaluate.cs_reg_member_seq AS "evaluate.regMemberSeq",
			evaluate.cs_reg_dtime AS "evaluate.regDtime",
			evaluate.cs_reg_ip AS "evaluate.regIp",
			evaluate.cs_upd_member_seq AS "evaluate.updMemberSeq",
			evaluate.cs_upd_dtime AS "evaluate.updDtime",
			evaluate.cs_upd_ip AS "evaluate.updIp"
		FROM
			cs_course_active_evaluate evaluate
		WHERE
			evaluate.cs_delete_yn = 'N'
		AND evaluate.cs_course_active_seq = #{courseActiveSeq} 
		AND evaluate.cs_evaluate_type_cd = #{evaluateTypeCd} 
	</select>
	
	<resultMap id="listResultMap" type="com._4csoft.aof.ui.univ.vo.resultset.UIUnivCourseActiveEvaluateRS">
		<result column="evaluate.evaluateSeq"		property="evaluate.evaluateSeq"			/>
		<result column="evaluate.courseActiveSeq"	property="evaluate.courseActiveSeq"		/>
		<result column="evaluate.evaluateTypeCd"	property="evaluate.evaluateTypeCd"		/>
		<result column="evaluate.score"				property="evaluate.score"				/>
		<result column="evaluate.limitScore"		property="evaluate.limitScore"			/>
		<result column="evaluate.deleteYn"			property="evaluate.deleteYn"			/>
        <result column="evaluate.regMemberSeq"		property="evaluate.regMemberSeq"		/>
        <result column="evaluate.regDtime"			property="evaluate.regDtime"			/>
        <result column="evaluate.regIp"				property="evaluate.regIp"				/>
        <result column="evaluate.updMemberSeq"		property="evaluate.updMemberSeq"		/>
        <result column="evaluate.updDtime"			property="evaluate.updDtime"			/>
        <result column="evaluate.updIp"				property="evaluate.updIp"				/>
        <result column="evaluate.basicCount"		property="evaluate.basicCount"			/>
        <result column="evaluate.supplementCount"	property="evaluate.supplementCount"		/>
	</resultMap>
	<select id="getList" parameterType="Long" resultMap="listResultMap">
		/* UnivCourseActiveEvaluateMapper.getList */
		SELECT evaluate.cs_evaluate_seq AS "evaluate.evaluateSeq", 
		       evaluate.cs_course_active_seq AS "evaluate.courseActiveSeq", 
		       evaluate.cs_evaluate_type_cd AS "evaluate.evaluateTypeCd", 
		       evaluate.cs_score AS "evaluate.score", 
		       evaluate.cs_limit_score AS "evaluate.limitScore", 
		       evaluate.cs_delete_yn AS "evaluate.deleteYn", 
		       evaluate.cs_reg_member_seq AS "evaluate.regMemberSeq", 
		       evaluate.cs_reg_dtime AS "evaluate.regDtime", 
		       evaluate.cs_reg_ip AS "evaluate.regIp", 
		       evaluate.cs_upd_member_seq AS "evaluate.updMemberSeq", 
		       evaluate.cs_upd_dtime AS "evaluate.updDtime", 
		       evaluate.cs_upd_ip AS "evaluate.updIp", 
		       ISNULL(basic.basicCount,0) AS "evaluate.basicCount", 
		       ISNULL(supplement.supplementCount,0) AS "evaluate.supplementCount"
		  FROM cs_course_active_evaluate evaluate 
		   LEFT OUTER JOIN 
		       (SELECT COUNT(*) as basicCount, 
		              cs_course_active_seq, 
		              cs_reference_type_cd 
		         FROM cs_course_active_element 
		        WHERE cs_delete_yn = 'N' 
		              AND cs_course_active_seq = #{courseActiveSeq}  
		              AND cs_supplement_rate IS NULL 
		        GROUP BY cs_course_active_seq, 
		              cs_reference_type_cd 
		       ) basic 
		       ON basic.cs_course_active_seq = evaluate.cs_course_active_seq 
		       AND basic.cs_reference_type_cd = evaluate.cs_evaluate_type_cd 
		   LEFT OUTER JOIN 
		       (SELECT COUNT(*) AS supplementCount, 
		              cs_course_active_seq, 
		              cs_reference_type_cd 
		         FROM cs_course_active_element 
		        WHERE cs_delete_yn = 'N' 
		              AND cs_course_active_seq = #{courseActiveSeq} 
		              AND cs_supplement_rate IS NOT NULL 
		        GROUP BY cs_course_active_seq, 
		              cs_reference_type_cd 
		       ) supplement 
		       ON supplement.cs_course_active_seq = evaluate.cs_course_active_seq 
		       AND supplement.cs_reference_type_cd = evaluate.cs_evaluate_type_cd 
		 WHERE evaluate.cs_delete_yn = 'N' 
		       AND evaluate.cs_course_active_seq = #{courseActiveSeq} 
	</select>
	
	<select id="countList" parameterType="Long" resultType="int">
		/* UnivCourseActiveEvaluateMapper.countList */
		SELECT
			COUNT(*)
		FROM
			cs_course_active_evaluate evaluate
		WHERE
			evaluate.cs_delete_yn = 'N'
		AND evaluate.cs_course_active_seq = #{courseActiveSeq} 
    </select>
	
    <insert id="insertCopy" parameterType="com._4csoft.aof.ui.univ.vo.UIUnivCourseActiveEvaluateVO">
/* UnivCourseActiveEvaluateMapper.insertCopy */
INSERT INTO cs_course_active_evaluate
       (
       cs_course_active_seq,
       cs_evaluate_type_cd,
       cs_score,
       cs_limit_score,
       cs_delete_yn,
       cs_reg_member_seq,
       cs_reg_dtime,
       cs_reg_ip,
       cs_upd_member_seq,
       cs_upd_dtime,
       cs_upd_ip
       )
SELECT #{targetCourseActiveSeq, jdbcType=NUMERIC},
       cs_evaluate_type_cd,
       cs_score,
       cs_limit_score,
       'N',
       #{regMemberSeq, jdbcType=NUMERIC},
       dbo.FN_NOW_TO_CHAR(),
       #{regIp, jdbcType=VARCHAR},
       #{updMemberSeq, jdbcType=NUMERIC},
       dbo.FN_NOW_TO_CHAR(),
       #{updIp, jdbcType=VARCHAR}
  FROM cs_course_active_evaluate
 WHERE cs_delete_yn = 'N'
   AND cs_course_active_seq = #{sourceCourseActiveSeq}
    </insert>
</mapper>