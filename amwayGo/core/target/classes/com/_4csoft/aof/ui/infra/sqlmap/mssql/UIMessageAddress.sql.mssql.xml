<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._4csoft.aof.infra.mapper.MessageAddressMapper">

    <insert id="insert" parameterType="com._4csoft.aof.ui.infra.vo.UIMessageAddressVO">
	/* MessageAddressMapper.insert */
	INSERT INTO cs_message_address
	       ( 
	           cs_address_group_seq ,
	           cs_member_seq ,
	           cs_reg_member_seq ,
	           cs_reg_dtime ,
	           cs_reg_ip ,
	           cs_upd_member_seq ,
	           cs_upd_dtime ,
	           cs_upd_ip 
	       ) 
	       VALUES 
	       ( 
	           #{addressGroupSeq, jdbcType=NUMERIC} ,
	           #{memberSeq, jdbcType=NUMERIC} ,
	           #{regMemberSeq, jdbcType=NUMERIC} ,
	           dbo.FN_NOW_TO_CHAR() ,
	           #{regIp, jdbcType=VARCHAR} ,
	           #{updMemberSeq, jdbcType=NUMERIC} ,
	           dbo.FN_NOW_TO_CHAR() ,
	           #{updIp, jdbcType=VARCHAR} 
	       )
    </insert>    
      
    <!-- 주소록 그룹멤버 삭제 -->
    <update id="delete" parameterType="com._4csoft.aof.ui.infra.vo.UIMessageAddressVO">
	/* MessageAddressMapper.delete */	
	UPDATE cs_message_address 
	   SET cs_delete_yn = 'Y' ,
	       cs_upd_member_seq = #{updMemberSeq, jdbcType=NUMERIC} ,
	       cs_upd_dtime = dbo.FN_NOW_TO_CHAR() ,
	       cs_upd_ip = #{updIp, jdbcType=VARCHAR}
	  WHERE cs_delete_yn='N' 
	        AND cs_address_group_seq = #{addressGroupSeq}
	        AND cs_member_seq = #{memberSeq}
    </update>
    
    <!-- 주소록 그룹멤버 물리적삭제 -->
    <delete id="drop" parameterType="com._4csoft.aof.ui.infra.vo.UIMessageAddressVO" >
	/* MessageAddressMapper.drop */
	DELETE FROM
		cs_message_address 
	WHERE 
		cs_address_group_seq = #{addressGroupSeq}  
    </delete>

	<!-- 주소록등록 전체멤버 -->
    <resultMap id="listResultMap" type="com._4csoft.aof.ui.infra.vo.resultset.UIMessageAddressRS">
        <result column="a.addressGroupSeq"  		property="messageAddress.addressGroupSeq" />
        <result column="a.memeberSeq"      	    	property="messageAddress.memberSeq" />
        <result column="m.memberId"         		property="member.memberId" />
        <result column="m.memberName"       		property="member.memberName" />
        <result column="m.organizationString"  		property="member.organizationString" />
        <result column="m.smsYn"         	 	    property="member.smsYn" />       
        <result column="m.phoneMobile"         	 	property="member.phoneMobile" />        
        <result column="m.emailYn"         	 	    property="member.emailYn" />
        <result column="m.email"            		property="member.email" />
        <result column="ag.groupName"          	 	property="messageAddressGroup.groupName" />
        <result column="cate.categoryString"        property="category.categoryString" />
    </resultMap> 
    <select id="getList" parameterType="com._4csoft.aof.ui.infra.vo.condition.UIMessageAddressCondition" resultMap="listResultMap">
	/* MessageAddressMapper.getList */
	<if test='currentPage != 0'>
	SELECT Z.* FROM (SELECT Row_Number() OVER (
	ORDER BY "m.memberName" ASC
	) AS rownumber, * FROM (
	</if>
	SELECT
	       a.cs_address_group_seq         AS "a.addressGroupSeq",
	       a.cs_member_seq                AS "a.memeberSeq",
		   m.cs_member_id                 AS "m.memberId",
	       m.cs_member_name               AS "m.memberName",
		   m.cs_organization_string 	  AS "m.organizationString",
		   m.cs_sms_yn					  AS "m.smsYn",
		   m.cs_phone_mobile		      AS "m.phoneMobile",
		   m.cs_email_yn				  AS "m.emailYn",
		   m.cs_email					  AS "m.email",
	       ag.cs_group_name		          AS "ag.groupName",
	       cate.cs_category_string 		  AS "cate.categoryString"
	  FROM cs_message_address a
	 INNER JOIN cs_member m
	    ON a.cs_member_seq = m.cs_member_seq
	       AND m.cs_delete_yn = 'N'
	 INNER JOIN cs_message_address_group ag
	 	ON a.cs_address_group_seq = ag.cs_address_group_seq
		   AND ag.cs_delete_yn = 'N'
	 LEFT OUTER JOIN cs_category cate
		ON cate.cs_category_seq = m.cs_category_organization_seq
		AND cate.cs_delete_yn = 'N'	 		   
	 WHERE a.cs_delete_yn = 'N'
	 	AND a.cs_reg_member_seq = #{regMemberSeq}
	   	<if test='srchWord != null and !srchWord.equals("")'>
			AND ( m.cs_member_name LIKE '%' + #{srchWordDB} + '%'
			OR m.cs_phone_mobile LIKE '%' + #{srchWordDB} + '%'
	     	OR ag.cs_group_name LIKE '%' + #{srchWordDB} + '%' )
	    </if>
	    <if test='addressGroupSeq != null and !addressGroupSeq.equals("")'>
	    	AND a.cs_address_group_seq = #{addressGroupSeq}
	    </if>
		<if test='currentPage != 0'>
		) Y ) Z WHERE Z.rownumber BETWEEN #{firstItemNo} + 1 AND #{endItemNo} ORDER BY Z.rownumber
		</if>
	</select>

 	<!-- 전체 주소록 멤버 리스트 카운트 -->
    <select id="countList" parameterType="com._4csoft.aof.ui.infra.vo.condition.UIMessageAddressCondition" resultType="int">
    /* MessageAddressMapper.countList */
	 SELECT
	      COUNT(*)
	  FROM cs_message_address a
	 INNER JOIN cs_member m
	    ON a.cs_member_seq = m.cs_member_seq
	       AND m.cs_delete_yn = 'N'
	 INNER JOIN cs_message_address_group ag
	 	ON a.cs_address_group_seq = ag.cs_address_group_seq
		   AND ag.cs_delete_yn = 'N'
	 LEFT OUTER JOIN cs_category cate
		ON cate.cs_category_seq = m.cs_category_organization_seq
		AND cate.cs_delete_yn = 'N'			   
	 WHERE a.cs_delete_yn = 'N'
	 	 AND a.cs_reg_member_seq = #{regMemberSeq}
	   	<if test='srchWord != null and !srchWord.equals("")'>
			AND ( m.cs_member_name LIKE '%' + #{srchWordDB} + '%'
			OR m.cs_phone_mobile LIKE '%' + #{srchWordDB} + '%'
	     	OR ag.cs_group_name LIKE '%' + #{srchWordDB} + '%' )
	    </if>
	   	<if test='addressGroupSeq != null and !addressGroupSeq.equals("")'>
	    	AND a.cs_address_group_seq = #{addressGroupSeq}
	    </if>
	</select>
	
    <select id="countMembers" parameterType="Long" resultType="int">
    /* MessageAddressMapper.countList */
	 SELECT
	      COUNT(*)
	  FROM cs_message_address a
	  	WHERE a.cs_address_group_seq = #{addressGroupSeq}
	</select>
	
    <select id="getListByAddressGroupSeq" parameterType="Long" resultType="com._4csoft.aof.ui.infra.vo.UIMemberVO">
    /* MessageAddressMapper.getListByAddressGroupSeq */
	SELECT
		memb.cs_member_seq                   AS "memberSeq" ,
	       memb.cs_member_id                 AS "memberId" ,
		   memb.cs_member_name               AS "memberName" ,
	       memb.cs_email                     AS "email" ,
	       memb.cs_email_yn                  AS "emailYn" , 
	       memb.cs_phone_mobile              AS "phoneMobile" ,
	       memb.cs_sms_yn                    AS "smsYn" ,
	       memb.cs_category_organization_seq AS "categoryOrganizationSeq" ,
		   ISNULL(cate.cs_category_name, '') as "categoryOrganizationString"
	FROM cs_message_address address  	 
	INNER JOIN cs_member memb 
		ON address.cs_member_seq = memb.cs_member_seq
	LEFT OUTER JOIN cs_category cate
	  	ON memb.cs_category_organization_seq = cate.cs_category_seq
	  	AND cate.cs_delete_yn = 'N'	
	WHERE 
	    address.cs_address_group_seq = #{addressGroupSeq}
		AND address.CS_DELETE_YN = 'N'
   </select>

</mapper>
