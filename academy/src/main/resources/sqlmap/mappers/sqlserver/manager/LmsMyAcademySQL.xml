<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="amway.com.academy.lms.myAcademy.service.impl.LmsMyAcademyMapper">
	
	<select id="selectLmsMyAcademyCourseCalendarDay" parameterType="reqBox" resultType="dataBox">
		SELECT T.*,
			DBO.F_LMS_COURSETYPENAME(T.COURSETYPE) AS COURSETYPENAME ,
			DBO.F_LMS_COURSETYPENAME(T.REALCOURSETYPE) AS REALCOURSETYPENAME ,
			ROW_NUMBER() OVER ( PARTITION BY T.STARTDATE ORDER BY T.RN ASC) AS RNDATE
		FROM (
			SELECT
				ROW_NUMBER() OVER ( ORDER BY B.STARTDATE DESC) AS RN ,
				A.FINISHFLAG ,
				A.REQUESTFLAG ,
				B.COURSEID ,
				B.COURSENAME ,
				B.THEMENAME ,
				B.COURSETYPE AS REALCOURSETYPE,
				CASE WHEN B.COURSETYPE='R' OR B.OPENFLAG='C' THEN 'R'
					ELSE B.COURSETYPE END AS COURSETYPE ,
				B.OPENFLAG ,
				FORMAT(B.STARTDATE, 'yyyy-MM-dd') AS STARTDATE ,
				FORMAT(B.ENDDATE, 'yyyy-MM-dd') AS ENDDATE ,
				B.GROUPFLAG ,
				C.STEPSEQ ,
				C.MUSTFLAG AS UNITMUSTFLAG,
				D.COURSENAME AS REGULARCOURSENAME ,
				D.COURSEID AS REGULARCOURSEID ,
				D.GROUPFLAG AS  REGULARGROUPFLAG,
				FORMAT(D.STARTDATE, 'yyyy-MM-dd') AS COURSESTARTDATE ,
				FORMAT(D.ENDDATE, 'yyyy-MM-dd') AS COURSEENDDATE ,
				E.APNAME ,
				E.ROOMNAME,
				DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'T') AS STUDYSTATUSNAME, 
				DBO.F_LMS_STUDY_STATUS(D.STARTDATE, D.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'T') AS REGULARSTUDYSTATUSNAME,
				DBO.F_LMS_DATETYPE(B.STARTDATE, '3') AS STARTDATESTR,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '3') AS ENDDATESTR,
				FORMAT(B.ENDDATE, 'HH:mm') AS ENDDATESTR2,
				DBO.F_LMS_DATETYPE(D.STARTDATE, '3') AS COURSESTARTDATESTR,
				DBO.F_LMS_DATETYPE(D.ENDDATE, '3') AS COURSEENDDATESTR,
				(
					SELECT 
					STUFF((SELECT ',' + CONVERT(VARCHAR(100) , SEATNUMBER)
									FROM LMSSEATSTUDENT SEAT1 INNER JOIN LMSSEAT SEAT2 ON (SEAT1.COURSEID=SEAT2.COURSEID AND SEAT1.SEATSEQ = SEAT2.SEATSEQ)
									WHERE S1.COURSEID = SEAT1.COURSEID AND S1.UID = SEAT1.UID  FOR XML PATH ('')),1,1,'') AS SEATNUMBER
					FROM LMSSEATSTUDENT S1
						INNER JOIN LMSSEAT S2 ON (S1.COURSEID=S2.COURSEID AND S1.SEATSEQ = S2.SEATSEQ)
					where S1.COURSEID=A.COURSEID and S1.UID=A.UID
					GROUP BY S1.COURSEID, S1.UID
				) AS SEATNUMBER ,
				'[본방송] ' AS LIVEREALSTR
			FROM LMSSTUDENT A
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				LEFT OUTER JOIN LMSSTEPUNIT C ON (A.COURSEID = C.STEPCOURSEID)
				LEFT OUTER JOIN LMSCOURSE D ON (C.COURSEID = D.COURSEID)
				LEFT OUTER JOIN LMSOFFLINE E ON (A.COURSEID = E.COURSEID)
			WHERE 1=1
			AND A.REQUESTFLAG = 'Y' 
			AND A.UID = #{uid}
			AND B.OPENFLAG IN ('Y','C')
			AND B.COURSETYPE NOT IN ('R')
			AND B.USEFLAG = 'Y'
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.COURSEID ELSE '1' END IS NOT NULL
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.USEFLAG ELSE 'Y' END = 'Y'
			AND FORMAT(B.STARTDATE,'yyyyMMdd') = #{searchtoday}
			
			
			UNION ALL 
			
			SELECT
				ROW_NUMBER() OVER ( ORDER BY B.STARTDATE DESC) AS RN ,
				A.FINISHFLAG ,
				A.REQUESTFLAG ,
				B.COURSEID ,
				B.COURSENAME ,
				B.THEMENAME ,
				B.COURSETYPE AS REALCOURSETYPE,
				CASE WHEN B.COURSETYPE='R' OR B.OPENFLAG='C' THEN 'R'
					ELSE B.COURSETYPE END AS COURSETYPE ,
				B.OPENFLAG ,
				FORMAT(F.REPLAYSTART, 'yyyy-MM-dd') AS STARTDATE ,
				FORMAT(F.REPLAYEND, 'yyyy-MM-dd') AS ENDDATE ,
				B.GROUPFLAG ,
				C.STEPSEQ ,
				C.MUSTFLAG AS UNITMUSTFLAG,
				D.COURSENAME AS REGULARCOURSENAME ,
				D.COURSEID AS REGULARCOURSEID ,
				D.GROUPFLAG AS  REGULARGROUPFLAG,
				FORMAT(D.STARTDATE, 'yyyy-MM-dd') AS COURSESTARTDATE ,
				FORMAT(D.ENDDATE, 'yyyy-MM-dd') AS COURSEENDDATE ,
				E.APNAME ,
				E.ROOMNAME,
				DBO.F_LMS_STUDY_STATUS(F.REPLAYSTART, F.REPLAYEND, A.REQUESTFLAG, A.FINISHFLAG, 'T') AS STUDYSTATUSNAME, 
				DBO.F_LMS_STUDY_STATUS(D.STARTDATE, D.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'T') AS REGULARSTUDYSTATUSNAME,
				DBO.F_LMS_DATETYPE(F.REPLAYSTART, '3') AS STARTDATESTR,
				DBO.F_LMS_DATETYPE(F.REPLAYEND, '3') AS ENDDATESTR,
				FORMAT(F.REPLAYEND, 'HH:mm') AS ENDDATESTR2,
				DBO.F_LMS_DATETYPE(D.STARTDATE, '3') AS COURSESTARTDATESTR,
				DBO.F_LMS_DATETYPE(D.ENDDATE, '3') AS COURSEENDDATESTR,
				'' AS SEATNUMBER ,
				'[재방송] ' AS LIVEREALSTR
			FROM LMSSTUDENT A
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				LEFT OUTER JOIN LMSSTEPUNIT C ON (A.COURSEID = C.STEPCOURSEID)
				LEFT OUTER JOIN LMSCOURSE D ON (C.COURSEID = D.COURSEID)
				LEFT OUTER JOIN LMSOFFLINE E ON (A.COURSEID = E.COURSEID)
				LEFT OUTER JOIN LMSLIVE F ON (A.COURSEID = F.COURSEID)
			WHERE 1=1
			AND A.REQUESTFLAG = 'Y' 
			AND A.UID = #{uid}
			AND B.OPENFLAG IN ('Y','C')
			AND B.COURSETYPE IN ('L')
			AND B.USEFLAG = 'Y'
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.COURSEID ELSE '1' END IS NOT NULL
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.USEFLAG ELSE 'Y' END = 'Y'
			AND FORMAT(F.REPLAYSTART,'yyyyMMdd') = #{searchtoday}
			AND ISNULL(F.REPLAYSTART, '') != ''
			AND ISNULL(F.REPLAYEND, '') != ''
			AND ISNULL(F.LIVEREPLAYLINK, '') != ''
			
		) T
	</select>
	
	<select id="selectLmsMyAcademyDayCount" parameterType="reqBox" resultType="dataBox">
		/* selectLmsMyAcademyDayCount */
		SELECT
			AA.STARTDATE, AA.COURSETYPE
		FROM (
			SELECT
				CASE WHEN B.COURSETYPE='R' OR B.OPENFLAG='C' THEN 'R'
					ELSE B.COURSETYPE END AS COURSETYPE,
				FORMAT(B.STARTDATE, 'dd') AS STARTDATE
			FROM LMSSTUDENT A
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				LEFT OUTER JOIN LMSSTEPUNIT C ON (A.COURSEID = C.STEPCOURSEID)
				LEFT OUTER JOIN LMSCOURSE D ON (C.COURSEID = D.COURSEID)
				LEFT OUTER JOIN LMSOFFLINE E ON (A.COURSEID = E.COURSEID)
			WHERE 1=1
			AND A.REQUESTFLAG = 'Y' 
			AND A.UID = #{uid}
			AND B.OPENFLAG IN ('Y','C')
			AND B.COURSETYPE NOT IN ('R')
			AND B.USEFLAG = 'Y'
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.COURSEID ELSE '1' END IS NOT NULL
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.USEFLAG ELSE 'Y' END = 'Y'
			<if test='searchdate != null and !searchdate.equals("")' >
				AND B.STARTDATE BETWEEN #{searchdate}+'-01' AND DATEADD(m, 1, #{searchdate}+'-01' )
			</if>
			AND B.ENDDATE >= DATEADD(YYYY, -2, GETDATE())
			/* AND CASE WHEN B.ENDDATE <![CDATA[ < ]]> GETDATE() THEN A.FINISHFLAG ELSE 'Y' END = 'Y' */
			
			UNION ALL
			
			SELECT
				CASE WHEN B.COURSETYPE='R' OR B.OPENFLAG='C' THEN 'R'
					ELSE B.COURSETYPE END AS COURSETYPE,
				FORMAT(F.REPLAYSTART, 'dd') AS STARTDATE
			FROM LMSSTUDENT A
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				LEFT OUTER JOIN LMSSTEPUNIT C ON (A.COURSEID = C.STEPCOURSEID)
				LEFT OUTER JOIN LMSCOURSE D ON (C.COURSEID = D.COURSEID)
				LEFT OUTER JOIN LMSOFFLINE E ON (A.COURSEID = E.COURSEID)
				LEFT OUTER JOIN LMSLIVE F ON (A.COURSEID = F.COURSEID)
			WHERE 1=1
			AND A.REQUESTFLAG = 'Y' 
			AND A.UID = #{uid}
			AND B.OPENFLAG IN ('Y','C')
			AND B.COURSETYPE IN ('L')
			AND B.USEFLAG = 'Y'
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.COURSEID ELSE '1' END IS NOT NULL
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.USEFLAG ELSE 'Y' END = 'Y'
			<if test='searchdate != null and !searchdate.equals("")' >
				AND F.REPLAYSTART BETWEEN #{searchdate}+'-01' AND DATEADD(m, 1, #{searchdate}+'-01' )
			</if>
			AND B.ENDDATE >= DATEADD(YYYY, -2, GETDATE())
			AND ISNULL(F.REPLAYSTART, '') != ''
			AND ISNULL(F.REPLAYEND, '') != ''
			AND ISNULL(F.LIVEREPLAYLINK, '') != ''
			
		) AA
		GROUP BY AA.STARTDATE, AA.COURSETYPE
	</select>
	
	<!-- 신청현황 달력 목록 -->
	<select id="selectLmsMyAcademyCourseCalendar" parameterType="reqBox" resultType="dataBox">
		/* selectLmsMyAcademyCourseCalendar */
		SELECT T.*,
			DBO.F_LMS_COURSETYPENAME(T.COURSETYPE) AS COURSETYPENAME ,
			DBO.F_LMS_COURSETYPENAME(T.REALCOURSETYPE) AS REALCOURSETYPENAME ,
			ROW_NUMBER() OVER ( PARTITION BY T.STARTDATE ORDER BY T.RN ASC) AS RNDATE
		FROM (
			SELECT
				ROW_NUMBER() OVER ( ORDER BY FORMAT(B.STARTDATE, 'yyyy-MM-dd') ASC, C.STEPSEQ ASC, C.UNITORDER ASC) AS RN ,
				A.FINISHFLAG ,
				A.REQUESTFLAG ,
				B.COURSEID ,
				B.COURSENAME ,
				B.THEMENAME ,
				B.COURSETYPE AS REALCOURSETYPE,
				CASE WHEN B.COURSETYPE='R' OR B.OPENFLAG='C' THEN 'R'
					ELSE B.COURSETYPE END AS COURSETYPE ,
				B.OPENFLAG ,
				FORMAT(B.STARTDATE, 'yyyy-MM-dd') AS STARTDATE ,
				FORMAT(B.ENDDATE, 'yyyy-MM-dd') AS ENDDATE ,
				B.GROUPFLAG ,
				C.STEPSEQ ,
				C.UNITORDER ,
				D.COURSENAME AS REGULARCOURSENAME ,
				D.COURSEID AS REGULARCOURSEID ,
				E.APNAME ,
				E.ROOMNAME ,
				'[본방송] ' AS LIVEREALSTR
			FROM LMSSTUDENT A
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				LEFT OUTER JOIN LMSSTEPUNIT C ON (A.COURSEID = C.STEPCOURSEID)
				LEFT OUTER JOIN LMSCOURSE D ON (C.COURSEID = D.COURSEID)
				LEFT OUTER JOIN LMSOFFLINE E ON (A.COURSEID = E.COURSEID)
			WHERE 1=1
			AND A.REQUESTFLAG = 'Y' 
			AND A.UID = #{uid}
			AND B.OPENFLAG IN ('Y','C')
			AND B.COURSETYPE NOT IN ('R')
			AND B.USEFLAG = 'Y'
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.OPENFLAG ELSE 'Y' END = 'Y'
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.USEFLAG ELSE 'Y' END = 'Y'
			<if test='searchdate != null and !searchdate.equals("")' >
				AND B.STARTDATE BETWEEN #{searchdate}+'-01' AND DATEADD(m, 1, #{searchdate}+'-01' )
			</if>
			AND B.ENDDATE >= DATEADD(YYYY, -2, GETDATE())
			
			UNION ALL
			
			SELECT
				ROW_NUMBER() OVER ( ORDER BY FORMAT(F.REPLAYSTART, 'yyyy-MM-dd') ASC, C.STEPSEQ ASC, C.UNITORDER ASC) + 1000 AS RN ,
				A.FINISHFLAG ,
				A.REQUESTFLAG ,
				B.COURSEID ,
				B.COURSENAME ,
				B.THEMENAME ,
				B.COURSETYPE AS REALCOURSETYPE,
				CASE WHEN B.COURSETYPE='R' OR B.OPENFLAG='C' THEN 'R'
					ELSE B.COURSETYPE END AS COURSETYPE ,
				B.OPENFLAG ,
				FORMAT(F.REPLAYSTART, 'yyyy-MM-dd') AS STARTDATE ,
				FORMAT(F.REPLAYEND, 'yyyy-MM-dd') AS ENDDATE ,
				B.GROUPFLAG ,
				C.STEPSEQ ,
				C.UNITORDER ,
				D.COURSENAME AS REGULARCOURSENAME ,
				D.COURSEID AS REGULARCOURSEID ,
				E.APNAME ,
				E.ROOMNAME ,
				'[재방송] ' AS LIVEREALSTR
			FROM LMSSTUDENT A
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				LEFT OUTER JOIN LMSSTEPUNIT C ON (A.COURSEID = C.STEPCOURSEID)
				LEFT OUTER JOIN LMSCOURSE D ON (C.COURSEID = D.COURSEID)
				LEFT OUTER JOIN LMSOFFLINE E ON (A.COURSEID = E.COURSEID)
				LEFT OUTER JOIN LMSLIVE F ON (A.COURSEID = F.COURSEID)
			WHERE 1=1
			AND A.REQUESTFLAG = 'Y' 
			AND A.UID = #{uid}
			AND B.OPENFLAG IN ('Y','C')
			AND B.COURSETYPE IN ('L')
			AND B.USEFLAG = 'Y'
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.OPENFLAG ELSE 'Y' END = 'Y'
			AND CASE WHEN B.OPENFLAG = 'C' THEN D.USEFLAG ELSE 'Y' END = 'Y'
			<if test='searchdate != null and !searchdate.equals("")' >
				AND F.REPLAYSTART BETWEEN #{searchdate}+'-01' AND DATEADD(m, 1, #{searchdate}+'-01' )
			</if>
			AND B.ENDDATE >= DATEADD(YYYY, -2, GETDATE())
			AND ISNULL(F.REPLAYSTART, '') != ''
			AND ISNULL(F.REPLAYEND, '') != ''
			AND ISNULL(F.LIVEREPLAYLINK, '') != ''

		) T 
		ORDER BY RN ASC
	</select>
	
	<!-- 신청현황 페이징 목록 공통 조회조건 -->
	<sql id="selectLmsMyAcademyCourseListWhere">
				AND A.UID = #{uid }
				AND B.USEFLAG = 'Y'
				AND B.OPENFLAG IN ('Y')
				AND B.COURSETYPE IN ('R' ,'F' ,'L')
			<if test='searchcoursetypeArr != null and !searchcoursetypeArr.equals("") and searchcoursetypeArr.size()!=0'>
				AND B.COURSETYPE IN
					<foreach collection="searchcoursetypeArr" item="data" index="i" open="(" close=")" separator=",">#{data}</foreach>
			</if>
			<if test='searchstatus != null and !searchstatus.equals("")'>
				AND DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'C') = #{searchstatus}
			</if>
			<if test='searchstartyear != null and !searchstartyear.equals("") and searchstartmonth != null and !searchstartmonth.equals("")'>
				AND B.ENDDATE >= #{searchstartyear} + '-' + #{searchstartmonth} + '-01' 
			</if>
			<if test='searchendyear != null and !searchendyear.equals("") and searchendmonth != null and !searchendmonth.equals("")'>
				AND DATEADD(MM, 1, #{searchendyear} + '-' + #{searchendmonth} + '-01') > B.STARTDATE 
			</if>
			<if test='searchstartdate != null and !searchstartdate.equals("") '>
				AND B.ENDDATE >= #{searchstartdate} 
			</if>
			<if test='searchenddate != null and !searchenddate.equals("") '>
				AND DATEADD(DD, 1, #{searchenddate} ) > B.STARTDATE
			</if>
			<if test='searchtext != null and !searchtext.equals("")'>
				AND B.COURSENAME LIKE '%'+#{searchtext }+'%'
			</if>	
			AND B.ENDDATE >= DATEADD(YYYY, -2, GETDATE())
	</sql>
	
	
	<!-- 신청현황 페이징 목록 공통 조회조건 -->
	<sql id="selectLmsMyAcademyCourseListWhereReplay">
				AND A.UID = #{uid }
				AND B.USEFLAG = 'Y'
				AND B.OPENFLAG IN ('Y')
				AND B.COURSETYPE IN ('L')
			<if test='searchcoursetypeArr != null and !searchcoursetypeArr.equals("") and searchcoursetypeArr.size()!=0'>
				AND B.COURSETYPE IN
					<foreach collection="searchcoursetypeArr" item="data" index="i" open="(" close=")" separator=",">#{data}</foreach>
			</if>
			<if test='searchstatus != null and !searchstatus.equals("")'>
				AND DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'C') = #{searchstatus}
			</if>
			<if test='searchstartyear != null and !searchstartyear.equals("") and searchstartmonth != null and !searchstartmonth.equals("")'>
				AND F.REPLAYEND >= #{searchstartyear} + '-' + #{searchstartmonth} + '-01' 
			</if>
			<if test='searchendyear != null and !searchendyear.equals("") and searchendmonth != null and !searchendmonth.equals("")'>
				AND DATEADD(MM, 1, #{searchendyear} + '-' + #{searchendmonth} + '-01') > F.REPLAYSTART 
			</if>
			<if test='searchstartdate != null and !searchstartdate.equals("") '>
				AND F.REPLAYEND >= #{searchstartdate} 
			</if>
			<if test='searchenddate != null and !searchenddate.equals("") '>
				AND DATEADD(DD, 1, #{searchenddate} ) > F.REPLAYSTART 
			</if>
			<if test='searchtext != null and !searchtext.equals("")'>
				AND B.COURSENAME LIKE '%'+#{searchtext }+'%'
			</if>	
			AND B.ENDDATE >= DATEADD(YYYY, -2, GETDATE())
			AND ISNULL(F.REPLAYSTART, '') != ''
			AND ISNULL(F.REPLAYEND, '') != ''
			AND ISNULL(F.LIVEREPLAYLINK, '') != ''
	</sql>
	
	
	<!-- 신청현황 페이징 목록 카운트 -->
	<select id="selectLmsMyAcademyCourseListCount" parameterType="reqBox" resultType="int">
		/* selectLmsMyAcademyCourseListCount */
				SELECT COUNT(*) AS TOTAL_CNT
				FROM (
					SELECT A.COURSEID
					FROM LMSSTUDENT A
						INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
					WHERE 1 = 1

					<include refid="selectLmsMyAcademyCourseListWhere" />

					UNION ALL

					SELECT A.COURSEID
					FROM LMSSTUDENT A
						INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
						LEFT OUTER JOIN LMSLIVE F ON (A.COURSEID = F.COURSEID)
					WHERE 1 = 1
					<include refid="selectLmsMyAcademyCourseListWhereReplay" />
				) AA
	</select>

	<!-- 신청현황 페이징 목록 -->
	<select id="selectLmsMyAcademyCourseList" parameterType="reqBox" resultType="dataBox">
		/* selectLmsMyAcademyCourseList */
			SELECT T.* ,
				DBO.F_LMS_DATETYPE(T.STARTDATE, '4') AS STARTDATESTR ,
				DBO.F_LMS_DATETYPE(T.ENDDATE, '4') AS ENDDATESTR ,
				DBO.F_LMS_DATETYPE(T.STARTDATE, '2') AS STARTDATESTR2 ,
				DBO.F_LMS_DATETYPE(T.ENDDATE, '2') AS ENDDATESTR2 ,
				DBO.F_LMS_STUDY_STATUS(T.STARTDATE, T.ENDDATE, T.REQUESTFLAG, T.FINISHFLAG, 'C') AS STUDYSTATUS ,
				DBO.F_LMS_STUDY_STATUS(T.STARTDATE, T.ENDDATE, T.REQUESTFLAG, T.FINISHFLAG, 'T') AS STUDYSTATUSNAME ,	
				DBO.F_LMS_COURSETYPENAME(T.COURSETYPE) AS COURSETYPENAME 
			FROM (
				SELECT 
					ROW_NUMBER() OVER(ORDER BY AA.ENDDATE DESC) AS RN ,
					AA.*
					FROM (
						SELECT 
							A.COURSEID ,
							A.REQUESTFLAG ,
							A.FINISHFLAG ,
							B.STARTDATE ,
							B.ENDDATE ,
							B.COURSETYPE ,
							B.COURSENAME ,
							B.THEMENAME ,
							B.GROUPFLAG ,
							C.APNAME ,
							'[본방송] ' AS LIVEREALSTR
						FROM LMSSTUDENT A
							INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
							LEFT OUTER JOIN LMSOFFLINE C ON (A.COURSEID = C.COURSEID)
						WHERE 1 = 1
						<include refid="selectLmsMyAcademyCourseListWhere" />
						
						UNION ALL
						
						SELECT 
							A.COURSEID ,
							A.REQUESTFLAG ,
							A.FINISHFLAG ,
							F.REPLAYSTART AS STARTDATE ,
							F.REPLAYEND AS ENDDATE ,
							B.COURSETYPE ,
							B.COURSENAME ,
							B.THEMENAME ,
							B.GROUPFLAG ,
							C.APNAME ,
							'[재방송] ' AS LIVEREALSTR
						FROM LMSSTUDENT A
							INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
							LEFT OUTER JOIN LMSOFFLINE C ON (A.COURSEID = C.COURSEID)
							LEFT OUTER JOIN LMSLIVE F ON (A.COURSEID = F.COURSEID)
						WHERE 1 = 1
						<include refid="selectLmsMyAcademyCourseListWhereReplay" />
				) AA
			) T WHERE RN BETWEEN #{firstIndex} AND #{pageIndex} * #{rowPerPage}
	</select>

	<!-- 신청현황 정규과정 상세 -->
	<select id="selectLmsMyAcademyRegular" parameterType="reqBox" resultType="dataBox">
			/* selectLmsMyAcademyRegular */
			SELECT
				A.COURSEID ,
				A.UID ,
				A.REQUESTFLAG ,
				A.REQUESTDATE ,
				DBO.F_LMS_DATETYPE(A.REQUESTDATE, '') AS REQUESTDATESTR ,
				DBO.F_LMS_DATETYPE(A.REQUESTDATE, '2') AS REQUESTDATESTR2 ,
				A.FINISHFLAG ,
				A.STUDYFLAG ,
				DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'C') AS STUDYSTATUS ,
				DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'T') AS STUDYSTATUSNAME ,
				B.COURSENAME ,
				B.THEMENAME ,
				B.COURSECONTENT ,
				B.STARTDATE ,
				B.ENDDATE ,
				DBO.F_LMS_DATETYPE(B.STARTDATE, '4') AS STARTDATESTR ,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '4') AS ENDDATESTR ,
				FORMAT(B.STARTDATE, 'HH:mm') AS STARTDATEHH,
				FORMAT(B.ENDDATE, 'HH:mm') AS ENDDATEHH,
				DBO.F_LMS_DATETYPE(B.STARTDATE, '2') AS STARTDATESTR2 ,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '2') AS ENDDATESTR2 ,
				B.GROUPFLAG ,
				C.NOTE ,
				C.PASSNOTE ,
				C.LINKTITLE ,
				C.LINKURL ,
				C.PENALTYNOTE ,
				C.CANCELTERM ,
				(SELECT MIN(APNAME + '(' + ROOMNAME+')') FROM LMSSTEPUNIT U INNER JOIN LMSSTUDENT S ON (U.STEPCOURSEID = S.COURSEID) INNER JOIN LMSOFFLINE O ON (S.COURSEID = O.COURSEID)  WHERE U.COURSEID = A.COURSEID AND S.UID = A.UID) AS APNAME ,
				CASE WHEN FORMAT(DATEADD(DD ,-C.CANCELTERM , B.STARTDATE), 'yyyy-MM-dd') + ' 23:59:59' > GETDATE() AND B.STARTDATE > GETDATE() THEN 'Y' ELSE 'N' END AS CANCELPOSSIBLEFLAG
			FROM LMSSTUDENT A 
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				INNER JOIN LMSREGULAR C ON (A.COURSEID = C.COURSEID)
			WHERE A.COURSEID = #{courseid}
				AND A.UID = #{uid}
	</select>
	
	<!-- 신청현황 정규과정 구성과정 목록 -->
	<select id="selectLmsMyAcademyRegularUnit" parameterType="reqBox" resultType="dataBox">
			/* selectLmsMyAcademyRegularUnit */
				SELECT
				CASE WHEN STEPSTARTDATE > GETDATE() THEN '' 
					WHEN STEPCOUNT = 0 THEN 
						CASE WHEN GETDATE() > STEPENDDATE THEN '완료' 
							WHEN STEPFINISHCOUNT > 0 THEN '완료' 
							ELSE '-' END
					WHEN STEPFINISHFLAG = 'Y' THEN '완료'
					ELSE '미완료' END
				AS STEPFINISHFLAGSTR ,
				CASE WHEN GETDATE() BETWEEN ISNULL(LAG(STEPENDDATE, 1, NULL) OVER (ORDER BY STEPORDER ASC),'2000-01-01') AND STEPENDDATE THEN STEPORDER 
					WHEN STEPORDER = MAXSTEPORDER THEN
						CASE WHEN GETDATE() BETWEEN STEPSTARTDATE AND ISNULL(LEAD(STEPSTARTDATE, 1, NULL) OVER (ORDER BY STEPORDER ASC),'2050-01-01') THEN STEPORDER
							END 
					END AS OPENSTEPORDER ,
				T.*
				FROM (
					SELECT 
						A.COURSEID ,
						D.STEPORDER ,
						D.STEPSEQ ,
						COUNT(D.STEPORDER) OVER (PARTITION BY D.STEPORDER) AS STEPORDERCOUNT ,
						C.UNITORDER ,
						ROW_NUMBER() OVER (PARTITION BY D.STEPORDER ORDER BY C.UNITORDER ASC) AS UNITORDERNUM ,
						B.COURSETYPE ,
						DBO.F_LMS_COURSETYPENAME(B.COURSETYPE) AS COURSETYPENAME ,
						B.COURSENAME ,
						B.STARTDATE ,
						DBO.F_LMS_DATETYPE(B.STARTDATE, '4') AS STARTDATESTR ,
						DBO.F_LMS_DATETYPE(B.STARTDATE, '2') AS STARTDATESTR2 ,
						FORMAT(B.STARTDATE, 'HH:mm') AS STARTDATEHH,
						B.ENDDATE ,
						DBO.F_LMS_DATETYPE(B.ENDDATE, '4') AS ENDDATESTR ,
						DBO.F_LMS_DATETYPE(B.ENDDATE, '2') AS ENDDATESTR2 ,
						FORMAT(B.ENDDATE, 'HH:mm') AS ENDDATEHH,
						D.MUSTFLAG ,
						CASE WHEN D.MUSTFLAG='Y' THEN '필수' ELSE '선택' END AS MUSTFLAGNAME ,
						D.STEPCOUNT ,
						C.MUSTFLAG AS UNITMUSTFLAG,
						CASE WHEN C.MUSTFLAG='Y' THEN '필수' ELSE '옵션' END AS UNITMUSTFLAGNAME , 
						E.APNAME ,
						E.ROOMNAME ,
						DBO.F_LMS_STUDY_STATUS_FLAG(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, A.FINISHDATE, 'C') AS STUDYSTATUS ,
						DBO.F_LMS_STUDY_STATUS_FLAG(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, A.FINISHDATE, 'T') AS STUDYSTATUSNAME ,
						DBO.F_LMS_DATETYPE(F.REPLAYSTART, '4') AS REPLAYSTARTSTR ,
						DBO.F_LMS_DATETYPE(F.REPLAYEND, '4') AS REPLAYENDSTR ,
						DBO.F_LMS_DATETYPE(F.REPLAYSTART, '2') AS REPLAYSTARTSTR2 ,
						DBO.F_LMS_DATETYPE(F.REPLAYEND, '2') AS REPLAYENDSTR2 ,
						FORMAT(F.REPLAYSTART, 'HH:mm') AS REPLAYSTARTHH,
						FORMAT(F.REPLAYEND, 'HH:mm') AS REPLAYENDHH,
						F.LIVEREPLAYLINK ,
						DBO.F_LMS_STUDY_STATUS_FLAG(F.REPLAYSTART, F.REPLAYEND, A.REQUESTFLAG, A.FINISHFLAG, A.FINISHDATE, 'C') AS REPLAYSTUDYSTATUS ,
						DBO.F_LMS_STUDY_STATUS_FLAG(F.REPLAYSTART, F.REPLAYEND, A.REQUESTFLAG, A.FINISHFLAG, A.FINISHDATE, 'T') AS REPLAYSTUDYSTATUSNAME ,
						G.FINISHFLAG AS STEPFINISHFLAG ,
						H.TESTTYPE ,
						ISNULL(A.SUBJECTPOINT, 0) + ISNULL(A.OBJECTPOINT, 0) AS TESTPOINT, 
						CASE WHEN GETDATE() > B.ENDDATE THEN 'Y' ELSE 'N' END AS PASTYN,
						A.FINISHDATE ,
						A.FINISHFLAG ,
						ISNULL(A.TESTFLAG, 'N') AS TESTFLAG ,
						MAX(B.ENDDATE) OVER (PARTITION BY D.STEPORDER ) AS STEPENDDATE ,
						MIN(B.STARTDATE) OVER (PARTITION BY D.STEPORDER ) AS STEPSTARTDATE ,
						MAX(D.STEPORDER) OVER ( ) AS MAXSTEPORDER ,
						SUM(CASE WHEN A.FINISHFLAG='Y' THEN 1 ELSE 0 END) OVER (PARTITION BY D.STEPORDER ) AS STEPFINISHCOUNT ,
						CASE WHEN GETDATE() BETWEEN B.STARTDATE AND B.ENDDATE THEN 'Y' ELSE 'N' END AS SHOWBUTTONYN,
						CASE WHEN GETDATE() BETWEEN DATEADD(MI, -30, CASE WHEN F.REPLAYSTART='' THEN NULL ELSE F.REPLAYSTART END)   AND F.REPLAYEND THEN 'Y' ELSE 'N' END AS REPLAYSHOWBUTTONYN,
						CASE WHEN GETDATE() BETWEEN DATEADD(MI, -30, B.STARTDATE) AND B.ENDDATE THEN 'Y' ELSE 'N' END AS LIVESHOWBUTTONYN
					FROM LMSSTUDENT A
						INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
						INNER JOIN LMSSTEPUNIT C ON (A.COURSEID = C.STEPCOURSEID)
						INNER JOIN LMSSTEP D ON (C.COURSEID = D.COURSEID AND C.STEPSEQ = D.STEPSEQ)
						INNER JOIN LMSSTEPFINISH G ON (C.COURSEID = G.COURSEID AND C.STEPSEQ = G.STEPSEQ AND A.UID = G.UID)
						LEFT OUTER JOIN LMSOFFLINE E ON (A.COURSEID = E.COURSEID)
						LEFT OUTER JOIN LMSLIVE F ON (A.COURSEID = F.COURSEID)
						LEFT OUTER JOIN LMSTEST H ON (A.COURSEID = H.COURSEID)
					WHERE A.REQUESTFLAG = 'Y'
						AND B.OPENFLAG = 'C'
						AND B.USEFLAG = 'Y'
						AND A.UID = #{uid}
						AND C.COURSEID = #{courseid}
				) T
	</select>
	
	
	<!-- 신청현황 정규과정 오프라인 좌석 목록 -->
	<select id="selectLmsMyAcademyRegularSeat" parameterType="reqBox" resultType="dataBox">
			/* selectLmsMyAcademyRegularSeat */
		SELECT A.COURSEID, B.SEATNUMBER
		FROM LMSSEATSTUDENT A 
			INNER JOIN LMSSEAT B ON (A.COURSEID = B.COURSEID AND A.SEATSEQ = B.SEATSEQ)
		WHERE 1=1 
			AND A.UID = #{uid}
			AND A.COURSEID IN (SELECT STEPCOURSEID FROM LMSSTEPUNIT WHERE COURSEID = #{courseid})
	</select>
	

	<!-- 신청현황 오프라인 상세 -->
	<select id="selectLmsMyAcademyOffline" parameterType="reqBox" resultType="dataBox">
			/* selectLmsMyAcademyOffline */
			SELECT
				A.COURSEID ,
				A.REQUESTFLAG ,
				A.REQUESTDATE ,
				DBO.F_LMS_DATETYPE(A.REQUESTDATE, '') AS REQUESTDATESTR ,
				DBO.F_LMS_DATETYPE(A.REQUESTDATE, '2') AS REQUESTDATESTR2 ,
				A.FINISHFLAG ,
				A.STUDYFLAG ,
				DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'C') AS STUDYSTATUS ,
				DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'T') AS STUDYSTATUSNAME ,
				B.COURSENAME ,
				B.THEMENAME ,
				B.COURSECONTENT ,
				B.STARTDATE ,
				B.ENDDATE ,
				B.GROUPFLAG ,
				DBO.F_LMS_DATETYPE(B.STARTDATE, '4') AS STARTDATESTR ,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '4') AS ENDDATESTR ,
				DBO.F_LMS_DATETYPE(B.STARTDATE, '2') AS STARTDATESTR2 ,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '2') AS ENDDATESTR2 ,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '3') AS ENDDATESTR3 ,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '5') AS ENDDATESTR5 ,
				FORMAT(B.STARTDATE, 'HH:mm') AS STARTDATEHH,
				FORMAT(B.ENDDATE, 'HH:mm') AS ENDDATEHH,
				C.PENALTYFLAG ,
				C.PENALTYTERM ,
				DBO.F_LMS_DATETYPE(DATEADD(MM, C.PENALTYTERM, B.ENDDATE), '5') AS PENALTYENDDATESTR ,
				C.APNAME ,
				C.ROOMNAME ,
				C.DETAILCONTENT ,
				C.NOTE ,
				C.LINKTITLE ,
				C.LINKURL ,
				C.PENALTYNOTE ,
				C.CANCELTERM ,
				CASE WHEN FORMAT(DATEADD(DD ,-C.CANCELTERM , B.STARTDATE), 'yyyy-MM-dd') + ' 23:59:59' > GETDATE() AND B.STARTDATE > GETDATE() THEN 'Y' ELSE 'N' END AS CANCELPOSSIBLEFLAG ,
				ISNULL(A.SUBJECTPOINT, 0) + ISNULL(A.OBJECTPOINT, 0) AS TESTPOINT ,
				DBO.F_LMS_DATETYPE((SELECT CLEARDATE FROM LMSPENALTY WHERE PENALTYFLAG='Y' AND CLEARDATE > GETDATE() AND COURSEID=A.COURSEID AND UID=A.UID), '5') AS CLEARDATE ,
				(
					SELECT 
					STUFF((SELECT ',' + CONVERT(VARCHAR(100) , SEATNUMBER)
									FROM LMSSEATSTUDENT SEAT1 INNER JOIN LMSSEAT SEAT2 ON (SEAT1.COURSEID=SEAT2.COURSEID AND SEAT1.SEATSEQ = SEAT2.SEATSEQ)
									WHERE S1.COURSEID = SEAT1.COURSEID AND S1.UID = SEAT1.UID  FOR XML PATH ('')),1,1,'') AS SEATNUMBER
					FROM LMSSEATSTUDENT S1
						INNER JOIN LMSSEAT S2 ON (S1.COURSEID=S2.COURSEID AND S1.SEATSEQ = S2.SEATSEQ)
					where S1.COURSEID=A.COURSEID and S1.UID=A.UID
					GROUP BY S1.COURSEID, S1.UID
				) AS SEATNUMBER
			FROM LMSSTUDENT A 
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				INNER JOIN LMSOFFLINE C ON (A.COURSEID = C.COURSEID)
			WHERE A.COURSEID = #{courseid}
				AND A.UID = #{uid}
	</select>

	<!-- 신청현황 라이브교육 상세 -->
	<select id="selectLmsMyAcademyLive" parameterType="reqBox" resultType="dataBox">
			/* selectLmsMyAcademyLive */
			SELECT
				A.COURSEID ,
				A.REQUESTFLAG ,
				A.REQUESTDATE ,
				DBO.F_LMS_DATETYPE(A.REQUESTDATE, '') AS REQUESTDATESTR ,
				DBO.F_LMS_DATETYPE(A.REQUESTDATE, '2') AS REQUESTDATESTR2 ,
				A.FINISHFLAG ,
				A.STUDYFLAG ,
				DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'C') AS STUDYSTATUS ,
				DBO.F_LMS_STUDY_STATUS(B.STARTDATE, B.ENDDATE, A.REQUESTFLAG, A.FINISHFLAG, 'T') AS STUDYSTATUSNAME ,
				B.COURSENAME ,
				B.THEMENAME ,
				B.COURSECONTENT ,
				B.STARTDATE ,
				B.ENDDATE ,
				B.GROUPFLAG ,
				DBO.F_LMS_DATETYPE(B.STARTDATE, '4') AS STARTDATESTR ,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '4') AS ENDDATESTR ,
				DBO.F_LMS_DATETYPE(B.STARTDATE, '2') AS STARTDATESTR2 ,
				DBO.F_LMS_DATETYPE(B.ENDDATE, '2') AS ENDDATESTR2 ,
				FORMAT(B.STARTDATE, 'HH:mm') AS STARTDATEHH,
				FORMAT(B.ENDDATE, 'HH:mm') AS ENDDATEHH,
				C.LIVELINK ,
				C.LIVEREPLAYLINK ,
				C.REPLAYSTART ,
				C.REPLAYEND ,
				DBO.F_LMS_DATETYPE(C.REPLAYSTART, '4') AS REPLAYSTARTSTR ,
				DBO.F_LMS_DATETYPE(C.REPLAYEND, '4') AS REPLAYENDSTR ,
				DBO.F_LMS_DATETYPE(C.REPLAYSTART, '2') AS REPLAYSTARTSTR2 ,
				DBO.F_LMS_DATETYPE(C.REPLAYEND, '2') AS REPLAYENDSTR2 ,
				FORMAT(C.REPLAYSTART, 'HH:mm') AS REPLAYSTARTHH,
				FORMAT(C.REPLAYEND, 'HH:mm') AS REPLAYENDHH,
				DBO.F_LMS_STUDY_STATUS(C.REPLAYSTART, C.REPLAYEND, A.REQUESTFLAG, A.FINISHFLAG, 'C') AS REPLAYSTUDYSTATUS ,
				DBO.F_LMS_STUDY_STATUS(C.REPLAYSTART, C.REPLAYEND, A.REQUESTFLAG, A.FINISHFLAG, 'T') AS REPLAYSTUDYSTATUSNAME ,
				CASE WHEN B.ENDDATE > GETDATE() THEN 'Y' ELSE 'N' END AS SHOWBUTTONYN , 
				CASE WHEN (GETDATE() BETWEEN B.STARTDATE AND B.ENDDATE OR GETDATE() BETWEEN C.REPLAYSTART AND C.REPLAYEND) THEN 'Y' ELSE 'N' END AS SHOWTIMEYN ,
				CASE WHEN GETDATE() BETWEEN DATEADD(MI, -30, B.STARTDATE) AND B.ENDDATE THEN 'Y' ELSE 'N' END AS LIVESHOWBUTTONYN ,
				CASE WHEN GETDATE() BETWEEN DATEADD(MI, -30, CASE WHEN C.REPLAYSTART='' THEN NULL ELSE C.REPLAYSTART END)   AND C.REPLAYEND THEN 'Y' ELSE 'N' END AS REPLAYSHOWBUTTONYN ,
				C.NOTE ,
				C.LINKTITLE ,
				C.LINKURL ,
				C.PENALTYNOTE ,
				C.CANCELTERM ,
				CASE WHEN FORMAT(DATEADD(DD ,-C.CANCELTERM , B.STARTDATE), 'yyyy-MM-dd') + ' 23:59:59' > GETDATE() AND B.STARTDATE > GETDATE() THEN 'Y' ELSE 'N' END AS CANCELPOSSIBLEFLAG
			FROM LMSSTUDENT A 
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				INNER JOIN LMSLIVE C ON (A.COURSEID = C.COURSEID)
			WHERE A.COURSEID = #{courseid}
				AND A.UID = #{uid}
	</select>

	<!-- 신청현황 취소 가능 여부 검색 -->
	<select id="selectLmsMyAcademyCancelPossible" parameterType="reqBox" resultType="dataBox">
			/* selectLmsMyAcademyCancelPossible */
			SELECT
				CASE WHEN B.COURSETYPE = 'F' THEN
						CASE WHEN FORMAT(DATEADD(DD ,-ISNULL(C.CANCELTERM, 0) , B.STARTDATE), 'yyyy-MM-dd') + ' 23:59:59' > GETDATE() AND B.STARTDATE > GETDATE() THEN 'Y' ELSE 'N' END 
					WHEN B.COURSETYPE = 'L' THEN
						CASE WHEN FORMAT(DATEADD(DD ,-ISNULL(D.CANCELTERM, 0) , B.STARTDATE), 'yyyy-MM-dd') + ' 23:59:59' > GETDATE() AND B.STARTDATE > GETDATE() THEN 'Y' ELSE 'N' END
					WHEN B.COURSETYPE = 'R' THEN
						CASE WHEN FORMAT(DATEADD(DD ,-ISNULL(E.CANCELTERM, 0) , B.STARTDATE), 'yyyy-MM-dd') + ' 23:59:59' > GETDATE() AND B.STARTDATE > GETDATE() THEN 'Y' ELSE 'N' END
					END
				AS CANCELPOSSIBLEFLAG,
				B.COURSETYPE, 
				B.COURSENAME,
				C.APNAME + ' ' + C.ROOMNAME AS APNAME
			FROM LMSSTUDENT A
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
				LEFT OUTER JOIN LMSOFFLINE C ON (A.COURSEID = C.COURSEID)
				LEFT OUTER JOIN LMSLIVE D ON (A.COURSEID = D.COURSEID)
				LEFT OUTER JOIN LMSREGULAR E ON (A.COURSEID = E.COURSEID)
			WHERE A.COURSEID = #{courseid}
				AND A.UID = #{uid}
	</select>

	
	<!-- 신청현황 교육신청 취소  -->
	<update id="updateLmsMyAcademyCancel" parameterType="reqBox">
			/* updateLmsMyAcademyCancel */
			UPDATE 
			LMSSTUDENT 
			SET REQUESTFLAG = 'N'
				, CANCELDATE = GETDATE()
				, CANCELNOTE = #{cancelnote}
			WHERE 
				(COURSEID = #{courseid} OR COURSEID IN (SELECT STEPCOURSEID FROM LMSSTEPUNIT WHERE COURSEID = #{courseid}))
				AND UID = #{uid}
	</update>
	
	
	<!-- 신청현황 기본 정보 상세 -->
	<select id="selectLmsMyAcademyListView" parameterType="reqBox" resultType="dataBox">
			/* selectLmsMyAcademyRegular */
			SELECT
				A.COURSEID ,
				A.UID ,
				B.COURSETYPE
			FROM LMSSTUDENT A 
				INNER JOIN LMSCOURSE B ON (A.COURSEID = B.COURSEID)
			WHERE A.COURSEID = #{courseid}
				AND A.UID = #{uid}
	</select>

</mapper>